{
  "version": 3,
  "sources": ["../../../src/environment/ProcessManager.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Destructable } from \"@project-chip/matter.js/common\";\nimport { Environment, RuntimeService, VariableService } from \"@project-chip/matter.js/environment\";\nimport { Logger } from \"@project-chip/matter.js/log\";\nimport type { NodeJsEnvironment } from \"./NodeJsEnvironment.js\";\n\nconst logger = Logger.get(\"ProcessManager\");\n\n/**\n * ProcessManager watches Node.js signals SIGINT and SIGUSR2 to terminate the Matter.js runtime and trigger Matter.js\n * diagnostics respectively.  It sets the process exit code to 0 if the runtime completes without error and to 1 if the\n * runtime crashes.\n *\n * If enabled, SIGINT will perform a soft interrupt of the runtime once.  ProcessManager will not process subsequent\n * interrupts so they will result in forced exit if no other handler exists.\n *\n * {@link NodeJsEnvironment} installs a ProcessManager into the default Matter.js {@link Environment}.\n *\n * You can modify behavior by:\n *\n *   - Passing an {@link Environment} other than {@link Environment.default} to your components\n *\n *   - Disabling signal and exit code support with {@link VariableService} variables \"runtime.signals\" and\n *     \"runtime.exitcode\" respectively\n *\n *   - Destroying ProcessManager in the default environment using {@link ProcessManager.close}\n *\n *   - Subclassing ProcessManager, overriding specific functionality, and installing with {@link Environment.set}\n */\nexport class ProcessManager implements Destructable {\n    protected runtime: RuntimeService;\n    #signalHandlersInstalled = false;\n\n    constructor(protected env: Environment) {\n        this.runtime = env.get(RuntimeService);\n\n        this.runtime.started.on(this.startListener);\n        this.runtime.stopped.on(this.stopListener);\n        this.runtime.crashed.on(this.crashListener);\n\n        if (this.hasUnhandledErrorSupport) {\n            process.addListener(\"uncaughtExceptionMonitor\", event => {\n                Logger.reportUnhandledError(event);\n            });\n        }\n    }\n\n    close() {\n        this.runtime.started.off(this.startListener);\n        this.runtime.stopped.off(this.stopListener);\n        this.runtime.crashed.off(this.crashListener);\n        this.#ignoreSignals();\n    }\n\n    [Symbol.dispose]() {\n        this.close();\n    }\n\n    protected get hasSignalSupport() {\n        return this.env.vars.get(\"runtime.signals\", true);\n    }\n\n    protected get hasExitCodeSupport() {\n        return this.env.vars.get(\"runtime.exitcode\", true);\n    }\n\n    protected get hasUnhandledErrorSupport() {\n        return this.env.vars.get(\"runtime.unhandlederrors\", true);\n    }\n\n    protected startListener = () => {\n        this.env.vars.use(() => {\n            if (this.hasSignalSupport) {\n                if (this.#signalHandlersInstalled) {\n                    return;\n                }\n                process.on(\"SIGINT\", this.interruptHandler);\n                process.on(\"SIGTERM\", this.interruptHandler);\n                process.on(\"SIGUSR2\", this.diagnosticHandler);\n                process.on(\"exit\", this.exitHandler);\n            } else {\n                this.#ignoreSignals();\n            }\n        });\n    };\n\n    protected stopListener = () => {\n        this.#ignoreSignals();\n\n        if (this.hasExitCodeSupport && process.exitCode === undefined) {\n            process.exitCode = 0;\n        }\n    };\n\n    protected crashListener = () => {\n        if (this.hasExitCodeSupport) {\n            process.exitCode = 1;\n        }\n    };\n\n    protected interruptHandler = (signal: string) => {\n        process.off(signal, this.interruptHandler);\n        this.runtime.cancel();\n    };\n\n    protected exitHandler = () => {\n        if (process.exitCode === 13) {\n            logger.error(\"Internal error: Premature process exit because ongoing work has stalled\");\n        }\n    };\n\n    protected diagnosticHandler = () => {\n        this.env.diagnose();\n    };\n\n    #ignoreSignals() {\n        if (this.#signalHandlersInstalled) {\n            process.off(\"SIGINT\", this.interruptHandler);\n            process.off(\"SIGTERM\", this.interruptHandler);\n            process.off(\"SIGUSR2\", this.diagnosticHandler);\n            process.off(\"exit\", this.exitHandler);\n            this.#signalHandlersInstalled = false;\n        }\n    }\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,SAAsB,sBAAuC;AAC7D,SAAS,cAAc;AAGvB,MAAM,SAAS,OAAO,IAAI,gBAAgB;AAuBnC,MAAM,eAAuC;AAAA,EAIhD,YAAsB,KAAkB;AAAlB;AAClB,SAAK,UAAU,IAAI,IAAI,cAAc;AAErC,SAAK,QAAQ,QAAQ,GAAG,KAAK,aAAa;AAC1C,SAAK,QAAQ,QAAQ,GAAG,KAAK,YAAY;AACzC,SAAK,QAAQ,QAAQ,GAAG,KAAK,aAAa;AAE1C,QAAI,KAAK,0BAA0B;AAC/B,cAAQ,YAAY,4BAA4B,WAAS;AACrD,eAAO,qBAAqB,KAAK;AAAA,MACrC,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EAfU;AAAA,EACV,2BAA2B;AAAA,EAgB3B,QAAQ;AACJ,SAAK,QAAQ,QAAQ,IAAI,KAAK,aAAa;AAC3C,SAAK,QAAQ,QAAQ,IAAI,KAAK,YAAY;AAC1C,SAAK,QAAQ,QAAQ,IAAI,KAAK,aAAa;AAC3C,SAAK,eAAe;AAAA,EACxB;AAAA,EAEA,CAAC,OAAO,OAAO,IAAI;AACf,SAAK,MAAM;AAAA,EACf;AAAA,EAEA,IAAc,mBAAmB;AAC7B,WAAO,KAAK,IAAI,KAAK,IAAI,mBAAmB,IAAI;AAAA,EACpD;AAAA,EAEA,IAAc,qBAAqB;AAC/B,WAAO,KAAK,IAAI,KAAK,IAAI,oBAAoB,IAAI;AAAA,EACrD;AAAA,EAEA,IAAc,2BAA2B;AACrC,WAAO,KAAK,IAAI,KAAK,IAAI,2BAA2B,IAAI;AAAA,EAC5D;AAAA,EAEU,gBAAgB,MAAM;AAC5B,SAAK,IAAI,KAAK,IAAI,MAAM;AACpB,UAAI,KAAK,kBAAkB;AACvB,YAAI,KAAK,0BAA0B;AAC/B;AAAA,QACJ;AACA,gBAAQ,GAAG,UAAU,KAAK,gBAAgB;AAC1C,gBAAQ,GAAG,WAAW,KAAK,gBAAgB;AAC3C,gBAAQ,GAAG,WAAW,KAAK,iBAAiB;AAC5C,gBAAQ,GAAG,QAAQ,KAAK,WAAW;AAAA,MACvC,OAAO;AACH,aAAK,eAAe;AAAA,MACxB;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EAEU,eAAe,MAAM;AAC3B,SAAK,eAAe;AAEpB,QAAI,KAAK,sBAAsB,QAAQ,aAAa,QAAW;AAC3D,cAAQ,WAAW;AAAA,IACvB;AAAA,EACJ;AAAA,EAEU,gBAAgB,MAAM;AAC5B,QAAI,KAAK,oBAAoB;AACzB,cAAQ,WAAW;AAAA,IACvB;AAAA,EACJ;AAAA,EAEU,mBAAmB,CAAC,WAAmB;AAC7C,YAAQ,IAAI,QAAQ,KAAK,gBAAgB;AACzC,SAAK,QAAQ,OAAO;AAAA,EACxB;AAAA,EAEU,cAAc,MAAM;AAC1B,QAAI,QAAQ,aAAa,IAAI;AACzB,aAAO,MAAM,yEAAyE;AAAA,IAC1F;AAAA,EACJ;AAAA,EAEU,oBAAoB,MAAM;AAChC,SAAK,IAAI,SAAS;AAAA,EACtB;AAAA,EAEA,iBAAiB;AACb,QAAI,KAAK,0BAA0B;AAC/B,cAAQ,IAAI,UAAU,KAAK,gBAAgB;AAC3C,cAAQ,IAAI,WAAW,KAAK,gBAAgB;AAC5C,cAAQ,IAAI,WAAW,KAAK,iBAAiB;AAC7C,cAAQ,IAAI,QAAQ,KAAK,WAAW;AACpC,WAAK,2BAA2B;AAAA,IACpC;AAAA,EACJ;AACJ;",
  "names": []
}
