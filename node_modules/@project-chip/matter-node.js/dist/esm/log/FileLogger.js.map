{
  "version": 3,
  "sources": ["../../../src/log/FileLogger.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Level } from \"@project-chip/matter.js/log\";\nimport { open } from \"fs/promises\";\n\n/**\n * Creates a file based logger to append to the given path.\n * The file is opened on start and closed when the process shuts down.\n * Errors are logged to the console.\n */\nexport async function createFileLogger(path: string) {\n    const fileHandle = await open(path, \"a\");\n    const writer = fileHandle.createWriteStream();\n    process.on(\n        \"beforeExit\",\n        () => void fileHandle.close().catch(err => err && console.error(`Failed to close log file: ${err}`)),\n    );\n\n    return (_level: Level, formattedLog: string) => {\n        try {\n            writer.write(`${formattedLog}\\n`);\n        } catch (error) {\n            console.error(`Failed to write to log file: ${error}`);\n        }\n    };\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,SAAS,YAAY;AAOrB,eAAsB,iBAAiB,MAAc;AACjD,QAAM,aAAa,MAAM,KAAK,MAAM,GAAG;AACvC,QAAM,SAAS,WAAW,kBAAkB;AAC5C,UAAQ;AAAA,IACJ;AAAA,IACA,MAAM,KAAK,WAAW,MAAM,EAAE,MAAM,SAAO,OAAO,QAAQ,MAAM,6BAA6B,GAAG,EAAE,CAAC;AAAA,EACvG;AAEA,SAAO,CAAC,QAAe,iBAAyB;AAC5C,QAAI;AACA,aAAO,MAAM,GAAG,YAAY;AAAA,CAAI;AAAA,IACpC,SAAS,OAAO;AACZ,cAAQ,MAAM,gCAAgC,KAAK,EAAE;AAAA,IACzD;AAAA,EACJ;AACJ;",
  "names": []
}
