/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { UdpChannel, UdpChannelOptions } from "@project-chip/matter.js/net";
import { ByteArray } from "@project-chip/matter.js/util";
import * as dgram from "dgram";
export declare class UdpChannelNode implements UdpChannel {
    private readonly socket;
    private readonly netInterface?;
    static create({ listeningPort, type, listeningAddress, netInterface, membershipAddresses, }: UdpChannelOptions): Promise<UdpChannelNode>;
    readonly maxPayloadSize: number;
    constructor(socket: dgram.Socket, netInterface?: string | undefined);
    onData(listener: (netInterface: string, peerAddress: string, peerPort: number, data: ByteArray) => void): {
        close: () => Promise<void>;
    };
    send(host: string, port: number, data: ByteArray): Promise<void>;
    close(): Promise<void>;
    get port(): number;
}
//# sourceMappingURL=UdpChannelNode.d.ts.map