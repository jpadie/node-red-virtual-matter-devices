{
  "version": 3,
  "sources": ["../../../src/parser/TokenStream.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { BasicToken, Token } from \"./Token.js\";\n\n/**\n * Token-related state for the parser.\n */\nexport interface TokenStream<T extends Token> {\n    done: boolean;\n    description: string;\n    token?: T;\n    peeked?: T;\n    next(): void;\n}\n\nexport function TokenStream<T extends Token>(iterator: Iterator<T>): TokenStream<T> {\n    let done = false;\n\n    function next() {\n        if (done) {\n            return undefined;\n        }\n        const n = iterator.next();\n        if (n.done) {\n            done = true;\n        }\n        return n.value;\n    }\n\n    return {\n        token: next(),\n        peeked: next(),\n\n        get done() {\n            return this.token === undefined;\n        },\n\n        next() {\n            this.token = this.peeked;\n            this.peeked = next();\n        },\n\n        get description() {\n            switch (this.token?.type) {\n                case undefined:\n                    return \"end of statement\";\n\n                case \"word\":\n                    return `word \"${(this.token as unknown as BasicToken.Word).value}`;\n\n                case \"number\":\n                    return `number \"${(this.token as unknown as BasicToken.Number).value}`;\n\n                default:\n                    if (this.token?.type.match(/[a-z]/i)) {\n                        return `keyword \"${this.token?.type}\"`;\n                    }\n                    return `operator \"${this.token?.type}\"`;\n            }\n        },\n    };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBO,SAAS,YAA6B,UAAuC;AAChF,MAAI,OAAO;AAEX,WAAS,OAAO;AACZ,QAAI,MAAM;AACN,aAAO;AAAA,IACX;AACA,UAAM,IAAI,SAAS,KAAK;AACxB,QAAI,EAAE,MAAM;AACR,aAAO;AAAA,IACX;AACA,WAAO,EAAE;AAAA,EACb;AAEA,SAAO;AAAA,IACH,OAAO,KAAK;AAAA,IACZ,QAAQ,KAAK;AAAA,IAEb,IAAI,OAAO;AACP,aAAO,KAAK,UAAU;AAAA,IAC1B;AAAA,IAEA,OAAO;AACH,WAAK,QAAQ,KAAK;AAClB,WAAK,SAAS,KAAK;AAAA,IACvB;AAAA,IAEA,IAAI,cAAc;AACd,cAAQ,KAAK,OAAO,MAAM;AAAA,QACtB,KAAK;AACD,iBAAO;AAAA,QAEX,KAAK;AACD,iBAAO,SAAU,KAAK,MAAqC,KAAK;AAAA,QAEpE,KAAK;AACD,iBAAO,WAAY,KAAK,MAAuC,KAAK;AAAA,QAExE;AACI,cAAI,KAAK,OAAO,KAAK,MAAM,QAAQ,GAAG;AAClC,mBAAO,YAAY,KAAK,OAAO,IAAI;AAAA,UACvC;AACA,iBAAO,aAAa,KAAK,OAAO,IAAI;AAAA,MAC5C;AAAA,IACJ;AAAA,EACJ;AACJ;",
  "names": []
}
