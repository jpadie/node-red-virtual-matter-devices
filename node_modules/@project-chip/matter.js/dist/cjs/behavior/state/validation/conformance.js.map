{
  "version": 3,
  "sources": ["../../../../../src/behavior/state/validation/conformance.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { FeatureSet, ValueModel } from \"../../../model/index.js\";\nimport { ValueSupervisor } from \"../../supervision/ValueSupervisor.js\";\nimport { astToFunction } from \"./conformance-compiler.js\";\n\n/**\n * Creates a function that validates a field based on its conformance definition.\n *\n * This is the validator that enforces the presence of mandatory fields.  As such, only invokes {@link nextValidator} if\n * a value is present.\n */\nexport function createConformanceValidator(\n    schema: ValueModel,\n    featureMap: ValueModel,\n    supportedFeatures: FeatureSet,\n    nextValidator?: ValueSupervisor.Validate,\n): ValueSupervisor.Validate | undefined {\n    const validate = astToFunction(schema, featureMap, supportedFeatures);\n\n    if (!validate && !nextValidator) {\n        return undefined;\n    }\n\n    return (value, session, location) => {\n        validate?.(value, session, location);\n        if (value !== undefined) {\n            nextValidator?.(value, session, location);\n        }\n    };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,kCAA8B;AAR9B;AAAA;AAAA;AAAA;AAAA;AAgBO,SAAS,2BACZ,QACA,YACA,mBACA,eACoC;AACpC,QAAM,eAAW,2CAAc,QAAQ,YAAY,iBAAiB;AAEpE,MAAI,CAAC,YAAY,CAAC,eAAe;AAC7B,WAAO;AAAA,EACX;AAEA,SAAO,CAAC,OAAO,SAAS,aAAa;AACjC,eAAW,OAAO,SAAS,QAAQ;AACnC,QAAI,UAAU,QAAW;AACrB,sBAAgB,OAAO,SAAS,QAAQ;AAAA,IAC5C;AAAA,EACJ;AACJ;",
  "names": []
}
