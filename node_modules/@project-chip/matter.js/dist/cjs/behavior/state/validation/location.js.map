{
  "version": 3,
  "sources": ["../../../../../src/behavior/state/validation/location.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DataModelPath } from \"../../../model/definitions/DataModelPath.js\";\nimport { Val } from \"../Val.js\";\n\n/**\n * Contextual information tracked during validation.\n */\nexport interface ValidationLocation {\n    /**\n     * The path to scrutinize, used for diagnostic messages.\n     */\n    path: DataModelPath;\n\n    /**\n     * To validate conformance and constraints we require access to sibling\n     * values.  They are passed here when validating a record.\n     */\n    siblings?: Val.Struct;\n\n    /**\n     * Choice conformance requires context from the parent object.  This\n     * context is passed here.\n     */\n    choices?: Record<string, ValidationLocation.Choice>;\n\n    /**\n     * Path used to create fully-qualified name for diagnostic messages.\n     */\n    location?: string[];\n}\n\nexport namespace ValidationLocation {\n    /**\n     * Details a conformance choice.  Used during conformance validation.\n     */\n    export interface Choice {\n        count: number;\n        target: number;\n        orMore: boolean;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
