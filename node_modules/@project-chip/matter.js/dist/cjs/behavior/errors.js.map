{
  "version": 3,
  "sources": ["../../../src/behavior/errors.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SchemaErrorPath, SchemaViolationError } from \"../model/definitions/errors.js\";\nimport { ValueModel } from \"../model/index.js\";\nimport { StatusCode } from \"../protocol/interaction/StatusCode.js\";\nimport { Schema } from \"./supervision/Schema.js\";\n\nexport { SchemaImplementationError } from \"../model/definitions/errors.js\";\n\n/**\n * Thrown for invalid reads.\n */\nexport class ReadError extends SchemaViolationError {\n    constructor(path: SchemaErrorPath, message: string, code?: StatusCode) {\n        super(\"Reading\", path, message, code ?? StatusCode.UnsupportedRead);\n    }\n}\n\n/**\n * Thrown for invalid writes.\n */\nexport class WriteError extends SchemaViolationError {\n    constructor(path: SchemaErrorPath, message: string, code?: StatusCode) {\n        super(\"Writing\", path, message, code ?? StatusCode.UnsupportedWrite);\n    }\n}\n\n/**\n * Thrown for invalid invokes.\n */\nexport class InvokeError extends SchemaViolationError {\n    constructor(path: SchemaErrorPath, message: string, code?: StatusCode) {\n        super(\"Invoking\", path, message, code ?? StatusCode.UnsupportedAccess);\n    }\n}\n\n/**\n * Thrown when validation fails.\n */\nexport class ValidateError extends SchemaViolationError {\n    constructor(path: SchemaErrorPath, message: string, code?: StatusCode) {\n        super(\"Validating\", path, message, code ?? StatusCode.InvalidDataType);\n    }\n}\n\n/**\n * Thrown when a value is of the wrong datatype.\n */\nexport class DatatypeError extends ValidateError {\n    constructor(path: SchemaErrorPath, type: string, value: unknown, code?: StatusCode) {\n        const str = `${value}`;\n        if (str.length > 60) {\n            value = `${str.substring(60)}\u2026`;\n        }\n        super(path, `Value \"${str}\" is not ${type}`, code);\n    }\n}\n\n/**\n * Thrown when constraint is violated.\n */\nexport class ConstraintError extends ValidateError {\n    constructor(schema: Schema, path: SchemaErrorPath, message: string) {\n        super(path, `Constraint \"${(schema as ValueModel).constraint}\": ${message}`, StatusCode.ConstraintError);\n    }\n}\n\n/**\n * Thrown when conformance is violated.\n */\nexport class ConformanceError extends ValidateError {\n    constructor(schema: Schema, path: SchemaErrorPath, message: string, choice?: string) {\n        let prefix;\n        if (choice) {\n            prefix = `Conformance choice \"${choice}\"`;\n        } else {\n            prefix = `Conformance \"${(schema as ValueModel).conformance}\"`;\n        }\n        super(path, `${prefix}: ${message}`, StatusCode.InvalidAction);\n    }\n}\n\n/**\n * Thrown for access attempts against a managed value that is no longer valid.\n */\nexport class ExpiredReferenceError extends SchemaViolationError {\n    constructor(path: SchemaErrorPath) {\n        super(\n            \"Referencing\",\n            path,\n            \"This value is no longer available because its context has exited\",\n            StatusCode.Failure,\n        );\n    }\n}\n\n/**\n * Thrown for access attempts against a managed value referencing a container that was removed.\n */\nexport class PhantomReferenceError extends SchemaViolationError {\n    constructor(path: SchemaErrorPath) {\n        super(\"Referencing\", path, \"Container was removed\", StatusCode.Failure);\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,oBAAsD;AAEtD,wBAA2B;AAG3B,IAAAA,iBAA0C;AAX1C;AAAA;AAAA;AAAA;AAAA;AAgBO,MAAM,kBAAkB,mCAAqB;AAAA,EAChD,YAAY,MAAuB,SAAiB,MAAmB;AACnE,UAAM,WAAW,MAAM,SAAS,QAAQ,6BAAW,eAAe;AAAA,EACtE;AACJ;AAKO,MAAM,mBAAmB,mCAAqB;AAAA,EACjD,YAAY,MAAuB,SAAiB,MAAmB;AACnE,UAAM,WAAW,MAAM,SAAS,QAAQ,6BAAW,gBAAgB;AAAA,EACvE;AACJ;AAKO,MAAM,oBAAoB,mCAAqB;AAAA,EAClD,YAAY,MAAuB,SAAiB,MAAmB;AACnE,UAAM,YAAY,MAAM,SAAS,QAAQ,6BAAW,iBAAiB;AAAA,EACzE;AACJ;AAKO,MAAM,sBAAsB,mCAAqB;AAAA,EACpD,YAAY,MAAuB,SAAiB,MAAmB;AACnE,UAAM,cAAc,MAAM,SAAS,QAAQ,6BAAW,eAAe;AAAA,EACzE;AACJ;AAKO,MAAM,sBAAsB,cAAc;AAAA,EAC7C,YAAY,MAAuB,MAAc,OAAgB,MAAmB;AAChF,UAAM,MAAM,GAAG,KAAK;AACpB,QAAI,IAAI,SAAS,IAAI;AACjB,cAAQ,GAAG,IAAI,UAAU,EAAE,CAAC;AAAA,IAChC;AACA,UAAM,MAAM,UAAU,GAAG,YAAY,IAAI,IAAI,IAAI;AAAA,EACrD;AACJ;AAKO,MAAM,wBAAwB,cAAc;AAAA,EAC/C,YAAY,QAAgB,MAAuB,SAAiB;AAChE,UAAM,MAAM,eAAgB,OAAsB,UAAU,MAAM,OAAO,IAAI,6BAAW,eAAe;AAAA,EAC3G;AACJ;AAKO,MAAM,yBAAyB,cAAc;AAAA,EAChD,YAAY,QAAgB,MAAuB,SAAiB,QAAiB;AACjF,QAAI;AACJ,QAAI,QAAQ;AACR,eAAS,uBAAuB,MAAM;AAAA,IAC1C,OAAO;AACH,eAAS,gBAAiB,OAAsB,WAAW;AAAA,IAC/D;AACA,UAAM,MAAM,GAAG,MAAM,KAAK,OAAO,IAAI,6BAAW,aAAa;AAAA,EACjE;AACJ;AAKO,MAAM,8BAA8B,mCAAqB;AAAA,EAC5D,YAAY,MAAuB;AAC/B;AAAA,MACI;AAAA,MACA;AAAA,MACA;AAAA,MACA,6BAAW;AAAA,IACf;AAAA,EACJ;AACJ;AAKO,MAAM,8BAA8B,mCAAqB;AAAA,EAC5D,YAAY,MAAuB;AAC/B,UAAM,eAAe,MAAM,yBAAyB,6BAAW,OAAO;AAAA,EAC1E;AACJ;",
  "names": ["import_errors"]
}
