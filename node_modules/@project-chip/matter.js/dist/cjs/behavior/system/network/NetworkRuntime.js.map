{
  "version": 3,
  "sources": ["../../../../../src/behavior/system/network/NetworkRuntime.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ImplementationError } from \"../../../common/MatterError.js\";\nimport type { Node } from \"../../../node/Node.js\";\nimport { Construction } from \"../../../util/Construction.js\";\nimport { NodeActivity } from \"../../context/NodeActivity.js\";\nimport { NetworkBehavior } from \"./NetworkBehavior.js\";\n\n/**\n * Base class for networking implementation.\n */\nexport abstract class NetworkRuntime {\n    #construction: Construction<NetworkRuntime>;\n    #owner: Node;\n\n    get construction() {\n        return this.#construction;\n    }\n\n    constructor(owner: Node) {\n        this.#owner = owner;\n\n        const internals = owner.behaviors.internalsOf(NetworkBehavior);\n        if (internals.runtime) {\n            throw new ImplementationError(\"Network is already active\");\n        }\n        internals.runtime = this;\n\n        this.#construction = Construction(this);\n    }\n\n    async [Construction.construct]() {\n        await this.start();\n        await this.#owner.act(agent => this.owner.lifecycle.online.emit(agent.context));\n    }\n\n    async [Construction.destruct]() {\n        this.blockNewActivity();\n        const activity = this.#owner.env.get(NodeActivity);\n        if (activity.isActive) {\n            await activity.inactive;\n        }\n\n        try {\n            await this.stop();\n        } finally {\n            this.#owner.behaviors.internalsOf(NetworkBehavior).runtime = undefined;\n        }\n        await this.#owner.act(agent => this.owner.lifecycle.offline.emit(agent.context));\n    }\n\n    async close() {\n        await this.construction.close();\n    }\n\n    abstract operationalPort: number;\n\n    protected abstract start(): Promise<void>;\n\n    protected abstract stop(): Promise<void>;\n\n    protected abstract blockNewActivity(): void;\n\n    protected get owner() {\n        return this.#owner;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,yBAAoC;AAEpC,0BAA6B;AAC7B,0BAA6B;AAC7B,6BAAgC;AAVhC;AAAA;AAAA;AAAA;AAAA;AAeO,MAAe,eAAe;AAAA,EACjC;AAAA,EACA;AAAA,EAEA,IAAI,eAAe;AACf,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,YAAY,OAAa;AACrB,SAAK,SAAS;AAEd,UAAM,YAAY,MAAM,UAAU,YAAY,sCAAe;AAC7D,QAAI,UAAU,SAAS;AACnB,YAAM,IAAI,uCAAoB,2BAA2B;AAAA,IAC7D;AACA,cAAU,UAAU;AAEpB,SAAK,oBAAgB,kCAAa,IAAI;AAAA,EAC1C;AAAA,EAEA,OAAO,iCAAa,SAAS,IAAI;AAC7B,UAAM,KAAK,MAAM;AACjB,UAAM,KAAK,OAAO,IAAI,WAAS,KAAK,MAAM,UAAU,OAAO,KAAK,MAAM,OAAO,CAAC;AAAA,EAClF;AAAA,EAEA,OAAO,iCAAa,QAAQ,IAAI;AAC5B,SAAK,iBAAiB;AACtB,UAAM,WAAW,KAAK,OAAO,IAAI,IAAI,gCAAY;AACjD,QAAI,SAAS,UAAU;AACnB,YAAM,SAAS;AAAA,IACnB;AAEA,QAAI;AACA,YAAM,KAAK,KAAK;AAAA,IACpB,UAAE;AACE,WAAK,OAAO,UAAU,YAAY,sCAAe,EAAE,UAAU;AAAA,IACjE;AACA,UAAM,KAAK,OAAO,IAAI,WAAS,KAAK,MAAM,UAAU,QAAQ,KAAK,MAAM,OAAO,CAAC;AAAA,EACnF;AAAA,EAEA,MAAM,QAAQ;AACV,UAAM,KAAK,aAAa,MAAM;AAAA,EAClC;AAAA,EAUA,IAAc,QAAQ;AAClB,WAAO,KAAK;AAAA,EAChB;AACJ;",
  "names": []
}
