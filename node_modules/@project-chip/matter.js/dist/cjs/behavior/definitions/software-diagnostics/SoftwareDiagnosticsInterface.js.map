{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/software-diagnostics/SoftwareDiagnosticsInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\n\nexport namespace SoftwareDiagnosticsInterface {\n    export interface Watermarks {\n        /**\n         * Receipt of this command shall reset the following values which track high and lower watermarks:\n         *\n         *   \u2022 The StackFreeMinimum field of the ThreadMetrics attribute\n         *\n         *   \u2022 The CurrentHeapHighWatermark attribute This command has no payload.\n         *\n         * Effect on Receipt\n         *\n         * On receipt of this command, the Node shall make the following modifications to attributes it supports:\n         *\n         * If implemented, the server shall set the value of the CurrentHeapHighWatermark attribute to the value of the\n         * CurrentHeapUsed attribute.\n         *\n         * If implemented, the server shall set the value of the StackFreeMinimum field for every thread to the value\n         * of the corresponding thread\u2019s StackFreeCurrent field.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.13.7.1\n         */\n        resetWatermarks(): MaybePromise;\n    }\n}\n\nexport type SoftwareDiagnosticsInterface = {\n    components: [{ flags: { watermarks: true }, methods: SoftwareDiagnosticsInterface.Watermarks }]\n};\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
