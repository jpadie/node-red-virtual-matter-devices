{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/content-app-observer/ContentAppObserverInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\nimport { ContentAppObserver } from \"../../../cluster/definitions/ContentAppObserverCluster.js\";\n\nexport namespace ContentAppObserverInterface {\n    export interface Base {\n        /**\n         * Upon receipt, the data field may be parsed and interpreted. Message encoding is specific to the Content App.\n         * A Content App may when possible read attributes from the Basic Information Cluster on the Observer and use\n         * this to determine the Message encoding.\n         *\n         * This command returns a ContentAppMessage Response.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.12.5.1\n         */\n        contentAppMessage(request: ContentAppObserver.ContentAppMessageRequest): MaybePromise<ContentAppObserver.ContentAppMessageResponse>;\n    }\n}\n\nexport type ContentAppObserverInterface = { components: [{ flags: {}, methods: ContentAppObserverInterface.Base }] };\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
