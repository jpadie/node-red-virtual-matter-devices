{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/administrator-commissioning/AdministratorCommissioningInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\nimport { AdministratorCommissioning } from \"../../../cluster/definitions/AdministratorCommissioningCluster.js\";\n\nexport namespace AdministratorCommissioningInterface {\n    export interface Base {\n        /**\n         * This command is used by a current Administrator to instruct a Node to go into commissioning mode. The\n         * Enhanced Commissioning Method specifies a window of time during which an already commissioned Node accepts\n         * PASE sessions. The current Administrator MUST specify a timeout value for the duration of OCW.\n         *\n         * When OCW expires or commissioning completes, the Node shall remove the Passcode by deleting the PAKE\n         * passcode verifier as well as stop publishing the DNS-SD record corresponding to this command as described in\n         * Section 4.3.1, \u201CCommissionable Node Discovery\u201D. The commissioning into a new Fabric completes when the Node\n         * successfully receives a CommissioningComplete command, see Section 5.5, \u201CCommissioning Flows\u201D.\n         *\n         * The parameters for OpenCommissioningWindow command are as follows:\n         *\n         * A current Administrator may invoke this command to put a node in commissioning mode for the next\n         * Administrator. On completion, the command shall return a cluster specific status code from the Section\n         * 11.19.6, \u201CStatus Codes\u201D below reflecting success or reasons for failure of the operation. The new\n         * Administrator shall discover the Node on the IP network using DNS-based Service Discovery (DNS-SD) for\n         * commissioning.\n         *\n         * If any format or validity errors related to the PAKEPasscodeVerifier, Iterations or Salt arguments arise,\n         * this command shall fail with a cluster specific status code of PAKEParameterError.\n         *\n         * If a commissioning window is already currently open, this command shall fail with a cluster specific status\n         * code of Busy.\n         *\n         * If the fail-safe timer is currently armed, this command shall fail with a cluster specific status code of\n         * Busy, since it is likely that concurrent commissioning operations from multiple separate Commissioners are\n         * about to take place.\n         *\n         * In case of any other parameter error, this command shall fail with a status code of COMMAND_INVALID.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.19.8.1\n         */\n        openCommissioningWindow(request: AdministratorCommissioning.OpenCommissioningWindowRequest): MaybePromise;\n\n        /**\n         * This command is used by a current Administrator to instruct a Node to revoke any active Open Commissioning\n         * Window or Open Basic Commissioning Window command. This is an idempotent command and the Node shall (for\n         * ECM) delete the temporary PAKEPasscodeVerifier and associated data, and stop publishing the DNS-SD record\n         * associated with the Open Commissioning Window or Open Basic Commissioning Window command, see Section 4.3.1,\n         * \u201CCommissionable Node Discovery\u201D.\n         *\n         * If no commissioning window was open at time of receipt, this command shall fail with a cluster specific\n         * status code of WindowNotOpen.\n         *\n         * If the commissioning window was open and the fail-safe was armed when this command is received, the device\n         * shall immediately expire the fail-safe and perform the cleanup steps outlined in Section 11.10.6.2.2,\n         * \u201CBehavior on expiry of Fail-Safe timer\u201D.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.19.8.3\n         */\n        revokeCommissioning(): MaybePromise;\n    }\n\n    export interface Basic {\n        /**\n         * This command may be used by a current Administrator to instruct a Node to go into commissioning mode, if the\n         * node supports the Basic Commissioning Method. The Basic Commissioning Method specifies a window of time\n         * during which an already commissioned Node accepts PASE sessions. The current Administrator shall specify a\n         * timeout value for the duration of OBCW.\n         *\n         * If a commissioning window is already currently open, this command shall fail with a cluster specific status\n         * code of Busy.\n         *\n         * If the fail-safe timer is currently armed, this command shall fail with a cluster specific status code of\n         * Busy, since it is likely that concurrent commissioning operations from multiple separate Commissioners are\n         * about to take place.\n         *\n         * In case of any other parameter error, this command shall fail with a status code of COMMAND_INVALID.\n         *\n         * The commissioning into a new Fabric completes when the Node successfully receives a CommissioningComplete\n         * command, see Section 5.5, \u201CCommissioning Flows\u201D. The new Administrator shall discover the Node on the IP\n         * network using DNS-based Service Discovery (DNS-SD) for commissioning.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.19.8.2\n         */\n        openBasicCommissioningWindow(request: AdministratorCommissioning.OpenBasicCommissioningWindowRequest): MaybePromise;\n    }\n}\n\nexport type AdministratorCommissioningInterface = {\n    components: [\n        { flags: {}, methods: AdministratorCommissioningInterface.Base },\n        { flags: { basic: true }, methods: AdministratorCommissioningInterface.Basic }\n    ]\n};\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
