{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/icd-management/IcdManagementInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\nimport { IcdManagement } from \"../../../cluster/definitions/IcdManagementCluster.js\";\n\nexport namespace IcdManagementInterface {\n    export interface Base {\n        /**\n         * This command allows a client to request that the server stays in active mode for at least a given time\n         * duration (in milliseconds) from when this command is received.\n         *\n         * This StayActiveDuration may be longer than the ActiveModeThreshold value and would, typically, be used by\n         * the client to request the server to stay active and responsive for this period to allow a sequence of\n         * message exchanges during that period. The client may slightly overestimate the duration it wants the ICD to\n         * be active for, in order to account for network delays.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 9.17.7.4\n         */\n        stayActiveRequest(request: IcdManagement.StayActiveRequest): MaybePromise<IcdManagement.StayActiveResponse>;\n    }\n\n    export interface CheckInProtocolSupport {\n        /**\n         * This command allows a client to register itself with the ICD to be notified when the device is available for\n         * communication.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 9.17.7.1\n         */\n        registerClient(request: IcdManagement.RegisterClientRequest): MaybePromise<IcdManagement.RegisterClientResponse>;\n\n        /**\n         * This command allows a client to unregister itself with the ICD. Example: a client that is leaving the\n         * network (e.g. running on a phone which is leaving the home) can (and should) remove its subscriptions and\n         * send this UnregisterClient command before leaving to prevent the burden on the ICD of an absent client.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 9.17.7.3\n         */\n        unregisterClient(request: IcdManagement.UnregisterClientRequest): MaybePromise;\n    }\n\n    export interface LongIdleTimeSupport {\n        /**\n         * This command allows a client to request that the server stays in active mode for at least a given time\n         * duration (in milliseconds) from when this command is received.\n         *\n         * This StayActiveDuration may be longer than the ActiveModeThreshold value and would, typically, be used by\n         * the client to request the server to stay active and responsive for this period to allow a sequence of\n         * message exchanges during that period. The client may slightly overestimate the duration it wants the ICD to\n         * be active for, in order to account for network delays.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 9.17.7.4\n         */\n        stayActiveRequest(request: IcdManagement.StayActiveRequest): MaybePromise<IcdManagement.StayActiveResponse>;\n    }\n}\n\nexport type IcdManagementInterface = {\n    components: [\n        { flags: {}, methods: IcdManagementInterface.Base },\n        { flags: { checkInProtocolSupport: true }, methods: IcdManagementInterface.CheckInProtocolSupport },\n        { flags: { longIdleTimeSupport: true }, methods: IcdManagementInterface.LongIdleTimeSupport }\n    ]\n};\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
