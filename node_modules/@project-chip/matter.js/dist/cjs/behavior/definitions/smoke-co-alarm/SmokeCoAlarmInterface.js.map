{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/smoke-co-alarm/SmokeCoAlarmInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\n\nexport namespace SmokeCoAlarmInterface {\n    export interface Base {\n        /**\n         * This command shall initiate a device self-test. The return status shall indicate whether the test was\n         * successfully initiated. Only one SelfTestRequest may be processed at a time. When the value of the\n         * ExpressedState attribute is any of SmokeAlarm, COAlarm, Testing, InterconnectSmoke, Inter\n         *\n         * connectCO, the device shall NOT execute the self-test, and shall return status code BUSY.\n         *\n         * Upon successful acceptance of SelfTestRequest, the TestInProgress attribute shall be set to True and\n         * ExpressedState attribute shall be set to Testing. Any faults identified during the test shall be reflected\n         * in the appropriate attributes and events. Upon completion of the self test procedure, the SelfTestComplete\n         * event shall be generated, the TestInProgress attribute shall be set to False and ExpressedState attribute\n         * shall be updated to reflect the current state of the server.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.11.7.1\n         */\n        selfTestRequest(): MaybePromise;\n    }\n}\n\nexport type SmokeCoAlarmInterface = { components: [{ flags: {}, methods: SmokeCoAlarmInterface.Base }] };\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
