{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/fan-control/FanControlInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\nimport { FanControl } from \"../../../cluster/definitions/FanControlCluster.js\";\n\nexport namespace FanControlInterface {\n    export interface Step {\n        /**\n         * This command speeds up or slows down the fan, in steps, without the client having to know the fan speed.\n         * This command supports, for example, a user operated wall switch, where the user provides the feedback or\n         * control to stop sending this command when the proper speed is reached. The step speed values are\n         * implementation specific. How many step speeds are implemented is implementation specific.\n         *\n         * This command supports these fields:\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.4.7.1\n         */\n        step(request: FanControl.StepRequest): MaybePromise;\n    }\n}\n\nexport type FanControlInterface = { components: [{ flags: { step: true }, methods: FanControlInterface.Step }] };\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
