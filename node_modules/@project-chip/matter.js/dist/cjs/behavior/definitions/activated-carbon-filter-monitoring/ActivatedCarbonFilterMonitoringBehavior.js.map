{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/activated-carbon-filter-monitoring/ActivatedCarbonFilterMonitoringBehavior.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { ActivatedCarbonFilterMonitoring } from \"../../../cluster/definitions/ActivatedCarbonFilterMonitoringCluster.js\";\nimport { ClusterBehavior } from \"../../cluster/ClusterBehavior.js\";\nimport { ResourceMonitoringInterface } from \"../resource-monitoring/ResourceMonitoringInterface.js\";\n\n/**\n * ActivatedCarbonFilterMonitoringBehavior is the base class for objects that support interaction with {@link\n * ActivatedCarbonFilterMonitoring.Cluster}.\n *\n * This class does not have optional features of ActivatedCarbonFilterMonitoring.Cluster enabled. You can enable\n * additional features using ActivatedCarbonFilterMonitoringBehavior.with.\n */\nexport const ActivatedCarbonFilterMonitoringBehavior = ClusterBehavior\n    .withInterface<ResourceMonitoringInterface>()\n    .for(ActivatedCarbonFilterMonitoring.Cluster);\n\ntype ActivatedCarbonFilterMonitoringBehaviorType = InstanceType<typeof ActivatedCarbonFilterMonitoringBehavior>;\nexport interface ActivatedCarbonFilterMonitoringBehavior extends ActivatedCarbonFilterMonitoringBehaviorType {}\ntype StateType = InstanceType<typeof ActivatedCarbonFilterMonitoringBehavior.State>;\nexport namespace ActivatedCarbonFilterMonitoringBehavior { export interface State extends StateType {} }\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,oDAAgD;AAChD,6BAAgC;AAThC;AAAA;AAAA;AAAA;AAAA;AAmBO,MAAM,0CAA0C,uCAClD,cAA2C,EAC3C,IAAI,8EAAgC,OAAO;",
  "names": []
}
