{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/basic-information/BasicInformationServer.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { BasicInformation } from \"../../../cluster/definitions/BasicInformationCluster.js\";\nimport { VendorId } from \"../../../datatype/VendorId.js\";\nimport { Fabric } from \"../../../fabric/Fabric.js\";\nimport { FabricManager } from \"../../../fabric/FabricManager.js\";\nimport { Diagnostic } from \"../../../log/Diagnostic.js\";\nimport { Logger } from \"../../../log/Logger.js\";\nimport { Specification } from \"../../../model/definitions/Specification.js\";\nimport { NodeLifecycle } from \"../../../node/NodeLifecycle.js\";\nimport { DEFAULT_MAX_PATHS_PER_INVOKE } from \"../../../protocol/interaction/InteractionServer.js\";\nimport { Observable } from \"../../../util/Observable.js\";\nimport { ActionContext } from \"../../context/ActionContext.js\";\nimport { BasicInformationBehavior } from \"./BasicInformationBehavior.js\";\n\nconst logger = Logger.get(\"BasicInformationServer\");\n\n// Enable Events support by the Default implementation and tweak the maxPathsPerInvoke to 0 to have default handling\nconst Base = BasicInformationBehavior.enable({\n    events: { startUp: true, shutDown: true, leave: true },\n}).set({ maxPathsPerInvoke: 0 });\n\n/**\n * This is the default server implementation of BasicInformationBehavior.\n */\nexport class BasicInformationServer extends Base {\n    override initialize() {\n        const state = this.state;\n\n        const defaultsSet = {} as Record<string, any>;\n\n        function setDefault<T extends keyof typeof state>(name: T, value: (typeof state)[T]) {\n            if (state[name] === undefined || state[name] === 0) {\n                state[name] = value;\n                defaultsSet[name] = value;\n            }\n        }\n\n        // These are development defaults, we log a warning when we set them\n        setDefault(\"vendorId\", VendorId(0xfff1));\n        setDefault(\"vendorName\", \"Matter.js Test Vendor\");\n        setDefault(\"productId\", 0x8000);\n        setDefault(\"productName\", \"Matter.js Test Product\");\n        setDefault(\"hardwareVersion\", 0);\n        setDefault(\"softwareVersion\", 0);\n\n        // Warn if we used development defaults\n        if (Object.keys(defaultsSet).length) {\n            logger.warn(\"Using development values for some BasicInformation attributes:\", Diagnostic.dict(defaultsSet));\n        }\n\n        // These defaults are appropriate for development or production so do not warn\n        setDefault(\"productLabel\", state.productName);\n        setDefault(\"nodeLabel\", state.productName);\n        setDefault(\"dataModelRevision\", Specification.DATA_MODEL_REVISION);\n        setDefault(\"hardwareVersionString\", state.hardwareVersion.toString());\n        setDefault(\"softwareVersionString\", state.softwareVersion.toString());\n        setDefault(\"specificationVersion\", Specification.SPECIFICATION_VERSION);\n        setDefault(\"maxPathsPerInvoke\", DEFAULT_MAX_PATHS_PER_INVOKE);\n\n        const lifecycle = this.endpoint.lifecycle as NodeLifecycle;\n\n        if (lifecycle.online !== undefined) {\n            this.reactTo(lifecycle.online, this.#online);\n        }\n\n        if (this.state.reachable !== undefined && this.events.reachable$Changed !== undefined) {\n            // Manually enable the reachableChanged event if not yet existing when reachable attribute exists\n            if (this.events.reachableChanged === undefined) {\n                this.events.reachableChanged = Observable<\n                    [payload: BasicInformation.ReachableChangedEvent, context: ActionContext],\n                    void\n                >();\n            }\n            this.reactTo(this.events.reachable$Changed, this.#emitReachableChange);\n        }\n\n        if (\n            this.state.uniqueId !== undefined &&\n            this.state.serialNumber !== undefined &&\n            this.state.uniqueId === this.state.serialNumber\n        ) {\n            logger.warn(\"uniqueId and serialNumber shall not be the same.\");\n        }\n    }\n\n    [Symbol.asyncDispose]() {\n        this.events.shutDown?.emit(undefined, this.context);\n    }\n\n    #online() {\n        this.events.startUp.emit({ softwareVersion: this.state.softwareVersion }, this.context);\n\n        const fabricManager = this.endpoint.env.get(FabricManager);\n        this.reactTo(fabricManager.events.deleted, this.#handleRemovedFabric);\n    }\n\n    #emitReachableChange(reachable: boolean) {\n        this.events.reachableChanged?.emit({ reachableNewValue: reachable }, this.context);\n    }\n\n    #handleRemovedFabric({ fabricIndex }: Fabric) {\n        this.events.leave.emit({ fabricIndex }, this.context);\n    }\n}\n\nexport namespace BasicInformationServer {\n    export interface ProductDescription {\n        /**\n         * The device name for commissioning announcements.\n         */\n        readonly name: string;\n\n        /**\n         * The device type for commissioning announcements.\n         */\n        readonly deviceType: number;\n\n        /**\n         * The vendor ID for commissioning announcements.\n         */\n        readonly vendorId: VendorId;\n\n        /**\n         * The product ID for commissioning announcements.\n         */\n        readonly productId: number;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,sBAAyB;AAEzB,2BAA8B;AAC9B,wBAA2B;AAC3B,oBAAuB;AACvB,2BAA8B;AAE9B,+BAA6C;AAC7C,wBAA2B;AAE3B,sCAAyC;AAjBzC;AAAA;AAAA;AAAA;AAAA;AAmBA,MAAM,SAAS,qBAAO,IAAI,wBAAwB;AAGlD,MAAM,OAAO,yDAAyB,OAAO;AAAA,EACzC,QAAQ,EAAE,SAAS,MAAM,UAAU,MAAM,OAAO,KAAK;AACzD,CAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC;AAKxB,MAAM,+BAA+B,KAAK;AAAA,EACpC,aAAa;AAClB,UAAM,QAAQ,KAAK;AAEnB,UAAM,cAAc,CAAC;AAErB,aAAS,WAAyC,MAAS,OAA0B;AACjF,UAAI,MAAM,IAAI,MAAM,UAAa,MAAM,IAAI,MAAM,GAAG;AAChD,cAAM,IAAI,IAAI;AACd,oBAAY,IAAI,IAAI;AAAA,MACxB;AAAA,IACJ;AAGA,eAAW,gBAAY,0BAAS,KAAM,CAAC;AACvC,eAAW,cAAc,uBAAuB;AAChD,eAAW,aAAa,KAAM;AAC9B,eAAW,eAAe,wBAAwB;AAClD,eAAW,mBAAmB,CAAC;AAC/B,eAAW,mBAAmB,CAAC;AAG/B,QAAI,OAAO,KAAK,WAAW,EAAE,QAAQ;AACjC,aAAO,KAAK,kEAAkE,6BAAW,KAAK,WAAW,CAAC;AAAA,IAC9G;AAGA,eAAW,gBAAgB,MAAM,WAAW;AAC5C,eAAW,aAAa,MAAM,WAAW;AACzC,eAAW,qBAAqB,mCAAc,mBAAmB;AACjE,eAAW,yBAAyB,MAAM,gBAAgB,SAAS,CAAC;AACpE,eAAW,yBAAyB,MAAM,gBAAgB,SAAS,CAAC;AACpE,eAAW,wBAAwB,mCAAc,qBAAqB;AACtE,eAAW,qBAAqB,qDAA4B;AAE5D,UAAM,YAAY,KAAK,SAAS;AAEhC,QAAI,UAAU,WAAW,QAAW;AAChC,WAAK,QAAQ,UAAU,QAAQ,KAAK,OAAO;AAAA,IAC/C;AAEA,QAAI,KAAK,MAAM,cAAc,UAAa,KAAK,OAAO,sBAAsB,QAAW;AAEnF,UAAI,KAAK,OAAO,qBAAqB,QAAW;AAC5C,aAAK,OAAO,uBAAmB,8BAG7B;AAAA,MACN;AACA,WAAK,QAAQ,KAAK,OAAO,mBAAmB,KAAK,oBAAoB;AAAA,IACzE;AAEA,QACI,KAAK,MAAM,aAAa,UACxB,KAAK,MAAM,iBAAiB,UAC5B,KAAK,MAAM,aAAa,KAAK,MAAM,cACrC;AACE,aAAO,KAAK,kDAAkD;AAAA,IAClE;AAAA,EACJ;AAAA,EAEA,CAAC,OAAO,YAAY,IAAI;AACpB,SAAK,OAAO,UAAU,KAAK,QAAW,KAAK,OAAO;AAAA,EACtD;AAAA,EAEA,UAAU;AACN,SAAK,OAAO,QAAQ,KAAK,EAAE,iBAAiB,KAAK,MAAM,gBAAgB,GAAG,KAAK,OAAO;AAEtF,UAAM,gBAAgB,KAAK,SAAS,IAAI,IAAI,kCAAa;AACzD,SAAK,QAAQ,cAAc,OAAO,SAAS,KAAK,oBAAoB;AAAA,EACxE;AAAA,EAEA,qBAAqB,WAAoB;AACrC,SAAK,OAAO,kBAAkB,KAAK,EAAE,mBAAmB,UAAU,GAAG,KAAK,OAAO;AAAA,EACrF;AAAA,EAEA,qBAAqB,EAAE,YAAY,GAAW;AAC1C,SAAK,OAAO,MAAM,KAAK,EAAE,YAAY,GAAG,KAAK,OAAO;AAAA,EACxD;AACJ;",
  "names": []
}
