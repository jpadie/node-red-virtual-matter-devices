{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/scenes-management/ScenesManagementInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\nimport { ScenesManagement } from \"../../../cluster/definitions/ScenesManagementCluster.js\";\n\nexport namespace ScenesManagementInterface {\n    export interface Base {\n        /**\n         * It is not mandatory for an extension field set to be included in the command for every cluster on that\n         * endpoint that has a defined extension field set. Extension field sets may be omitted, including the case of\n         * no extension field sets at all.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.4.9.2\n         */\n        addScene(request: ScenesManagement.AddSceneRequest): MaybePromise<ScenesManagement.AddSceneResponse>;\n\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.4.9.4\n         */\n        viewScene(request: ScenesManagement.ViewSceneRequest): MaybePromise<ScenesManagement.ViewSceneResponse>;\n\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.4.9.6\n         */\n        removeScene(request: ScenesManagement.RemoveSceneRequest): MaybePromise<ScenesManagement.RemoveSceneResponse>;\n\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.4.9.8\n         */\n        removeAllScenes(request: ScenesManagement.RemoveAllScenesRequest): MaybePromise<ScenesManagement.RemoveAllScenesResponse>;\n\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.4.9.10\n         */\n        storeScene(request: ScenesManagement.StoreSceneRequest): MaybePromise<ScenesManagement.StoreSceneResponse>;\n\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.4.9.12\n         */\n        recallScene(request: ScenesManagement.RecallSceneRequest): MaybePromise;\n\n        /**\n         * This command can be used to get the used scene identifiers within a certain group, for the endpoint that\n         * implements this cluster.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.4.9.13\n         */\n        getSceneMembership(request: ScenesManagement.GetSceneMembershipRequest): MaybePromise<ScenesManagement.GetSceneMembershipResponse>;\n\n        /**\n         * This command allows a client to efficiently copy scenes from one group/scene identifier pair to another\n         * group/scene identifier pair.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.4.9.15\n         */\n        copyScene(request: ScenesManagement.CopySceneRequest): MaybePromise<ScenesManagement.CopySceneResponse>;\n    }\n}\n\nexport type ScenesManagementInterface = { components: [{ flags: {}, methods: ScenesManagementInterface.Base }] };\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
