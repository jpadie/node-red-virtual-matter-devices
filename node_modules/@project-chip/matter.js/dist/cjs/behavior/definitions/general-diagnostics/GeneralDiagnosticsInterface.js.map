{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/general-diagnostics/GeneralDiagnosticsInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\nimport { GeneralDiagnostics } from \"../../../cluster/definitions/GeneralDiagnosticsCluster.js\";\n\nexport namespace GeneralDiagnosticsInterface {\n    export interface Base {\n        /**\n         * This command shall be supported to provide a means for certification tests to trigger some test-\n         * plan-specific events, necessary to assist in automation of device interactions for some certification test\n         * cases. This command shall NOT cause any changes to the state of the device that persist after the last\n         * fabric is removed.\n         *\n         * The fields for the TestEventTrigger command are as follows:\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.12.7.1\n         */\n        testEventTrigger(request: GeneralDiagnostics.TestEventTriggerRequest): MaybePromise;\n\n        /**\n         * This command may be used by a client to obtain a correlated view of both System Time, and, if currently\n         * synchronized and supported, \"wall clock time\" of the server. This can help clients establish\n         *\n         * time correlation between their concept of time and the server\u2019s concept of time. This is especially useful\n         * when processing event histories where some events only contain System Time.\n         *\n         * Upon command invocation, the server shall respond with a TimeSnapshotResponse.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.12.7.2\n         */\n        timeSnapshot(): MaybePromise<GeneralDiagnostics.TimeSnapshotResponse>;\n    }\n\n    export interface DataModelTest {\n        /**\n         * This command provides a means for certification tests or manufacturer\u2019s internal tests to validate\n         * particular command handling and encoding constraints by generating a response of a given size.\n         *\n         * This command shall use the same EnableKey behavior as the TestEventTrigger command, whereby processing of\n         * the command is only enabled when the TestEventTriggersEnabled field is true, which shall NOT be true outside\n         * of certification testing or manufacturer\u2019s internal tests.\n         *\n         * The fields for the PayloadTestRequest command are as follows:\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.12.7.4\n         */\n        payloadTestRequest(request: GeneralDiagnostics.PayloadTestRequest): MaybePromise<GeneralDiagnostics.PayloadTestResponse>;\n    }\n}\n\nexport type GeneralDiagnosticsInterface = {\n    components: [\n        { flags: {}, methods: GeneralDiagnosticsInterface.Base },\n        { flags: { dataModelTest: true }, methods: GeneralDiagnosticsInterface.DataModelTest }\n    ]\n};\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
