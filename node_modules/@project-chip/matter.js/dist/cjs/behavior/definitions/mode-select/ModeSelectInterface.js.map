{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/mode-select/ModeSelectInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\nimport { ModeSelect } from \"../../../cluster/definitions/ModeSelectCluster.js\";\n\nexport namespace ModeSelectInterface {\n    export interface Base {\n        /**\n         * On receipt of this command, if the NewMode field indicates a valid mode transition within the supported\n         * list, the server shall set the CurrentMode attribute to the NewMode value, otherwise, the server shall\n         * respond with an INVALID_COMMAND status response.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.9.7.1\n         */\n        changeToMode(request: ModeSelect.ChangeToModeRequest): MaybePromise;\n    }\n}\n\nexport type ModeSelectInterface = { components: [{ flags: {}, methods: ModeSelectInterface.Base }] };\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
