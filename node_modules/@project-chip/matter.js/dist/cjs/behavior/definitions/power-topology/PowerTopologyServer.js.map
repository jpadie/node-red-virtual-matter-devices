{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/power-topology/PowerTopologyServer.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ClusterType } from \"../../../cluster/ClusterType.js\";\nimport { PowerTopology } from \"../../../cluster/definitions/PowerTopologyCluster.js\";\nimport { ImplementationError } from \"../../../common/MatterError.js\";\nimport { EndpointNumber } from \"../../../datatype/EndpointNumber.js\";\nimport { DescriptorServer } from \"../descriptor/DescriptorServer.js\";\nimport { ElectricalEnergyMeasurementBehavior } from \"../electrical-energy-measurement/ElectricalEnergyMeasurementBehavior.js\";\nimport { ElectricalPowerMeasurementBehavior } from \"../electrical-power-measurement/ElectricalPowerMeasurementBehavior.js\";\nimport { PowerTopologyBehavior } from \"./PowerTopologyBehavior.js\";\n\nconst PowerTopologyBase = PowerTopologyBehavior.with(\n    PowerTopology.Feature.SetTopology,\n    PowerTopology.Feature.DynamicPowerFlow,\n);\n\n/**\n * This is the default server implementation of {@link PowerTopologyBehavior}.\n *\n * The Matter specification requires the PowerTopology cluster to support features we do not enable by default. You\n * should use {@link PowerTopologyServer.with} to specialize the class for the features your implementation supports.\n *\n * The default implementation verifies that the active endpoints are a subset of the available endpoints when\n * the SetTopology and DynamicPowerFlow features are used.\n */\nexport class PowerTopologyServerLogic extends PowerTopologyBase {\n    override initialize(): void {\n        if (this.agent.has(ElectricalPowerMeasurementBehavior) || this.agent.has(ElectricalEnergyMeasurementBehavior)) {\n            this.agent.get(DescriptorServer).addDeviceTypes(\"ElectricalSensor\");\n        }\n\n        this.#assertActiveEndpointsAllowed(this.state.activeEndpoints);\n\n        this.reactTo(this.events.activeEndpoints$Changing, this.#assertActiveEndpointsAllowed);\n    }\n\n    #assertActiveEndpointsAllowed(list: EndpointNumber[]) {\n        const availableEndpoints = this.state.availableEndpoints;\n        list.forEach(endpoint => {\n            if (!availableEndpoints.includes(endpoint)) {\n                throw new ImplementationError(`Endpoint ${endpoint} is not in the list of available endpoints`);\n            }\n        });\n    }\n}\n\nexport class PowerTopologyServer extends PowerTopologyServerLogic.for(ClusterType(PowerTopology.Base)) {}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,yBAA4B;AAC5B,kCAA8B;AAC9B,yBAAoC;AAEpC,8BAAiC;AACjC,iDAAoD;AACpD,gDAAmD;AACnD,mCAAsC;AAbtC;AAAA;AAAA;AAAA;AAAA;AAeA,MAAM,oBAAoB,mDAAsB;AAAA,EAC5C,0CAAc,QAAQ;AAAA,EACtB,0CAAc,QAAQ;AAC1B;AAWO,MAAM,iCAAiC,kBAAkB;AAAA,EACnD,aAAmB;AACxB,QAAI,KAAK,MAAM,IAAI,4EAAkC,KAAK,KAAK,MAAM,IAAI,8EAAmC,GAAG;AAC3G,WAAK,MAAM,IAAI,wCAAgB,EAAE,eAAe,kBAAkB;AAAA,IACtE;AAEA,SAAK,8BAA8B,KAAK,MAAM,eAAe;AAE7D,SAAK,QAAQ,KAAK,OAAO,0BAA0B,KAAK,6BAA6B;AAAA,EACzF;AAAA,EAEA,8BAA8B,MAAwB;AAClD,UAAM,qBAAqB,KAAK,MAAM;AACtC,SAAK,QAAQ,cAAY;AACrB,UAAI,CAAC,mBAAmB,SAAS,QAAQ,GAAG;AACxC,cAAM,IAAI,uCAAoB,YAAY,QAAQ,4CAA4C;AAAA,MAClG;AAAA,IACJ,CAAC;AAAA,EACL;AACJ;AAEO,MAAM,4BAA4B,yBAAyB,QAAI,gCAAY,0CAAc,IAAI,CAAC,EAAE;AAAC;",
  "names": []
}
