{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/alarm-base/AlarmBaseInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\nimport { AlarmBase } from \"../../../cluster/definitions/AlarmBaseCluster.js\";\n\nexport namespace AlarmBaseInterface {\n    export interface Base {\n        /**\n         * This command allows a client to request that an alarm be enabled or suppressed at the server.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.15.7.2\n         */\n        modifyEnabledAlarms(request: AlarmBase.ModifyEnabledAlarmsRequest): MaybePromise;\n    }\n\n    export interface Reset {\n        /**\n         * This command resets active and latched alarms (if possible). Any generated Notify event shall contain fields\n         * that represent the state of the server after the command has been processed.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.15.7.1\n         */\n        reset(request: AlarmBase.ResetRequest): MaybePromise;\n    }\n}\n\nexport type AlarmBaseInterface = {\n    components: [\n        { flags: {}, methods: AlarmBaseInterface.Base },\n        { flags: { reset: true }, methods: AlarmBaseInterface.Reset }\n    ]\n};\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
