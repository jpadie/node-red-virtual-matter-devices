/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { MatterDevice } from "../../../MatterDevice.js";
import { PrivateKey } from "../../../crypto/Key.js";
import { SecureSession } from "../../../session/SecureSession.js";
import { ByteArray } from "../../../util/ByteArray.js";
import { Construction } from "../../../util/Construction.js";
import { ProductDescription } from "../../system/product-description/ProductDescription.js";
/**
 * Device certification used by the OperationalCredentials cluster.
 */
export declare class DeviceCertification {
    #private;
    get construction(): Construction<DeviceCertification>;
    get certificate(): Uint8Array;
    get intermediateCertificate(): Uint8Array;
    get declaration(): Uint8Array;
    constructor(config?: DeviceCertification.Definition, product?: ProductDescription);
    sign(session: SecureSession<MatterDevice>, data: ByteArray): Uint8Array;
}
export declare namespace DeviceCertification {
    interface Configuration {
        privateKey: PrivateKey | ByteArray;
        certificate: ByteArray;
        intermediateCertificate: ByteArray;
        declaration: ByteArray;
    }
    type Definition = Configuration | (() => Promise<Configuration>);
}
//# sourceMappingURL=DeviceCertification.d.ts.map