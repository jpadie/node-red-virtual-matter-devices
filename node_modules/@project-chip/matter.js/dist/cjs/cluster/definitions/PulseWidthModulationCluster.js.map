{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/PulseWidthModulationCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { LevelControl } from \"./LevelControlCluster.js\";\nimport { ClusterType } from \"../ClusterType.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace PulseWidthModulation {\n    export const Base = { ...LevelControl.Base, id: 0x1c, name: \"PulseWidthModulation\" } as const;\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster(\n        { ...Base, supportedFeatures: { onOff: true }, base: ClusterType(Base) },\n        LevelControl.NotLightingComponent\n    );\n\n    /**\n     * This alias specializes the semantics of {@link LevelControl.Base}.\n     *\n     * PulseWidthModulationCluster supports optional features that you can enable with the\n     * PulseWidthModulationCluster.with() factory method.\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n\n    /**\n     * This cluster supports all PulseWidthModulation features. It may support illegal feature combinations.\n     *\n     * If you use this cluster you must manually specify which features are active and ensure the set of active\n     * features is legal per the Matter specification.\n     */\n    export const CompleteInstance = MutableCluster({\n        ...LevelControl.Complete,\n        id: 0x1c,\n        name: \"PulseWidthModulation\"\n    });\n\n    export interface Complete extends Identity<typeof CompleteInstance> {}\n    export const Complete: Complete = CompleteInstance;\n}\n\nexport type PulseWidthModulationCluster = PulseWidthModulation.Cluster;\nexport const PulseWidthModulationCluster = PulseWidthModulation.Cluster;\nClusterRegistry.register(PulseWidthModulation.Complete);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,4BAA+B;AAC/B,iCAA6B;AAC7B,yBAA4B;AAE5B,6BAAgC;AAZhC;AAAA;AAAA;AAAA;AAAA;AAcO,IAAU;AAAA,CAAV,CAAUA,0BAAV;AACI,EAAMA,sBAAA,OAAO,EAAE,GAAG,wCAAa,MAAM,IAAI,IAAM,MAAM,uBAAuB;AAK5E,EAAMA,sBAAA,sBAAkB;AAAA,IAC3B,EAAE,GAAGA,sBAAA,MAAM,mBAAmB,EAAE,OAAO,KAAK,GAAG,UAAM,gCAAYA,sBAAA,IAAI,EAAE;AAAA,IACvE,wCAAa;AAAA,EACjB;AAUO,EAAMA,sBAAA,UAAmBA,sBAAA;AAQzB,EAAMA,sBAAA,uBAAmB,sCAAe;AAAA,IAC3C,GAAG,wCAAa;AAAA,IAChB,IAAI;AAAA,IACJ,MAAM;AAAA,EACV,CAAC;AAGM,EAAMA,sBAAA,WAAqBA,sBAAA;AAAA,GAlCrB;AAsCV,MAAM,8BAA8B,qBAAqB;AAChE,uCAAgB,SAAS,qBAAqB,QAAQ;",
  "names": ["PulseWidthModulation"]
}
