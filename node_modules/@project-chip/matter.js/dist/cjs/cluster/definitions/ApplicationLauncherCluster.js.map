{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/ApplicationLauncherCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { Attribute, OptionalAttribute, Command } from \"../Cluster.js\";\nimport { TlvArray } from \"../../tlv/TlvArray.js\";\nimport { TlvUInt16, TlvEnum } from \"../../tlv/TlvNumber.js\";\nimport { BitFlag } from \"../../schema/BitmapSchema.js\";\nimport { TlvField, TlvObject, TlvOptionalField } from \"../../tlv/TlvObject.js\";\nimport { TlvString, TlvByteString } from \"../../tlv/TlvString.js\";\nimport { TypeFromSchema } from \"../../tlv/TlvSchema.js\";\nimport { TlvEndpointNumber } from \"../../datatype/EndpointNumber.js\";\nimport { TlvNullable } from \"../../tlv/TlvNullable.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace ApplicationLauncher {\n    /**\n     * These are optional features supported by ApplicationLauncherCluster.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.4\n     */\n    export enum Feature {\n        /**\n         * ApplicationPlatform (AP)\n         *\n         * Support for attributes and commands required for endpoint to support launching any application within the\n         * supported application catalogs\n         */\n        ApplicationPlatform = \"ApplicationPlatform\"\n    }\n\n    /**\n     * This indicates a global identifier for an Application given a catalog.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.5.2\n     */\n    export const TlvApplication = TlvObject({\n        /**\n         * This field shall indicate the CSA-issued vendor ID for the catalog. The DIAL registry shall use value 0x0000.\n         *\n         * Content App Platform providers will have their own catalog vendor ID (set to their own Vendor ID) and will\n         * assign an ApplicationID to each Content App.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.5.2.1\n         */\n        catalogVendorId: TlvField(0, TlvUInt16),\n\n        /**\n         * This field shall indicate the application identifier, expressed as a string, such as \"PruneVideo\" or\n         * \"Company X\". This field shall be unique within a catalog.\n         *\n         * For the DIAL registry catalog, this value shall be the DIAL prefix (see [DIAL Registry]).\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.5.2.2\n         */\n        applicationId: TlvField(1, TlvString)\n    });\n\n    /**\n     * This indicates a global identifier for an Application given a catalog.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.5.2\n     */\n    export interface Application extends TypeFromSchema<typeof TlvApplication> {}\n\n    /**\n     * This specifies an app along with its corresponding endpoint.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.5.3\n     */\n    export const TlvApplicationEp = TlvObject({\n        application: TlvField(0, TlvApplication),\n        endpoint: TlvOptionalField(1, TlvEndpointNumber)\n    });\n\n    /**\n     * This specifies an app along with its corresponding endpoint.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.5.3\n     */\n    export interface ApplicationEp extends TypeFromSchema<typeof TlvApplicationEp> {}\n\n    /**\n     * Input to the ApplicationLauncher launchApp command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.1\n     */\n    export const TlvLaunchAppRequest = TlvObject({\n        /**\n         * This field shall specify the Application to launch.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.1.1\n         */\n        application: TlvOptionalField(0, TlvApplication),\n\n        /**\n         * This field shall specify optional app-specific data to be sent to the app.\n         *\n         * NOTE\n         *\n         * This format and meaning of this value is proprietary and outside the specification. It provides a transition\n         * path for device makers that use other protocols (like DIAL) which allow for proprietary data. Apps that are\n         * not yet Matter aware can be launched via Matter, while retaining the existing ability to launch with\n         * proprietary data.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.1.2\n         */\n        data: TlvOptionalField(1, TlvByteString)\n    });\n\n    /**\n     * Input to the ApplicationLauncher launchApp command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.1\n     */\n    export interface LaunchAppRequest extends TypeFromSchema<typeof TlvLaunchAppRequest> {}\n\n    /**\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.5.1\n     */\n    export enum Status {\n        /**\n         * Command succeeded\n         */\n        Success = 0,\n\n        /**\n         * Requested app is not available.\n         */\n        AppNotAvailable = 1,\n\n        /**\n         * Video platform unable to honor command.\n         */\n        SystemBusy = 2\n    }\n\n    /**\n     * This command shall be generated in response to LaunchApp/StopApp/HideApp commands.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.4\n     */\n    export const TlvLauncherResponse = TlvObject({\n        /**\n         * This field shall indicate the status of the command which resulted in this response.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.4.1\n         */\n        status: TlvField(0, TlvEnum<Status>()),\n\n        /**\n         * This field shall specify Optional app-specific data.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.4.2\n         */\n        data: TlvOptionalField(1, TlvByteString)\n    });\n\n    /**\n     * This command shall be generated in response to LaunchApp/StopApp/HideApp commands.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.4\n     */\n    export interface LauncherResponse extends TypeFromSchema<typeof TlvLauncherResponse> {}\n\n    /**\n     * Input to the ApplicationLauncher stopApp command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.2\n     */\n    export const TlvStopAppRequest = TlvObject({\n        /**\n         * This field shall specify the Application to stop.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.2.1\n         */\n        application: TlvOptionalField(0, TlvApplication)\n    });\n\n    /**\n     * Input to the ApplicationLauncher stopApp command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.2\n     */\n    export interface StopAppRequest extends TypeFromSchema<typeof TlvStopAppRequest> {}\n\n    /**\n     * Input to the ApplicationLauncher hideApp command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.3\n     */\n    export const TlvHideAppRequest = TlvObject({\n        /**\n         * This field shall specify the Application to hide.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.3.1\n         */\n        application: TlvOptionalField(0, TlvApplication)\n    });\n\n    /**\n     * Input to the ApplicationLauncher hideApp command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.3\n     */\n    export interface HideAppRequest extends TypeFromSchema<typeof TlvHideAppRequest> {}\n\n    /**\n     * A ApplicationLauncherCluster supports these elements if it supports feature ApplicationPlatform.\n     */\n    export const ApplicationPlatformComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * This attribute shall specify the list of supported application catalogs, where each entry in the list is\n             * the CSA-issued vendor ID for the catalog. The DIAL registry (see [DIAL Registry]) shall use value 0x0000.\n             *\n             * It is expected that Content App Platform providers will have their own catalog vendor ID (set to their\n             * own Vendor ID) and will assign an ApplicationID to each Content App.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.6.1\n             */\n            catalogList: Attribute(0x0, TlvArray(TlvUInt16), { persistent: true, default: [] })\n        }\n    });\n\n    /**\n     * These elements and properties are present in all ApplicationLauncher clusters.\n     */\n    export const Base = MutableCluster.Component({\n        id: 0x50c,\n        name: \"ApplicationLauncher\",\n        revision: 1,\n\n        features: {\n            /**\n             * ApplicationPlatform\n             *\n             * Support for attributes and commands required for endpoint to support launching any application within\n             * the supported application catalogs\n             */\n            applicationPlatform: BitFlag(0)\n        },\n\n        attributes: {\n            /**\n             * This attribute shall specify the current in-focus application, identified using an Application ID,\n             * catalog vendor ID and the corresponding endpoint number when the application is represented by a Content\n             * App endpoint. A null shall be used to indicate there is no current in-focus application.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.6.2\n             */\n            currentApp: OptionalAttribute(0x1, TlvNullable(TlvApplicationEp), { default: null })\n        },\n\n        commands: {\n            /**\n             * Upon receipt of this command, the server shall launch the application with optional data. The\n             * application shall be either\n             *\n             *   \u2022 the specified application, if the Application Platform feature is supported;\n             *\n             *   \u2022 otherwise the application corresponding to the endpoint.\n             *\n             * The endpoint shall launch and bring to foreground the requisite application if the application is not\n             * already launched and in foreground. The Status attribute shall be updated to ActiveVisibleFocus on the\n             * Application Basic cluster of the Endpoint corresponding to the launched application. The Status\n             * attribute shall be updated on any other application whose Status may have changed as a result of this\n             * command. The CurrentApp attribute, if supported, shall be updated to reflect the new application in the\n             * foreground.\n             *\n             * This command returns a Launcher Response.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.1\n             */\n            launchApp: Command(0x0, TlvLaunchAppRequest, 0x3, TlvLauncherResponse),\n\n            /**\n             * Upon receipt of this command, the server shall stop the application if it is running. The application\n             * shall be either\n             *\n             *   \u2022 the specified application, if the Application Platform feature is supported;\n             *\n             *   \u2022 otherwise the application corresponding to the endpoint.\n             *\n             * The Status attribute shall be updated to Stopped on the Application Basic cluster of the Endpoint\n             * corresponding to the stopped application. The Status attribute shall be updated on any other application\n             * whose Status may have changed as a result of this command.\n             *\n             * This command returns a Launcher Response.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.2\n             */\n            stopApp: Command(0x1, TlvStopAppRequest, 0x3, TlvLauncherResponse),\n\n            /**\n             * Upon receipt of this command, the server shall hide the application. The application shall be either\n             *\n             *   \u2022 the specified application, if the Application Platform feature is supported;\n             *\n             *   \u2022 otherwise the application corresponding to the endpoint.\n             *\n             * The endpoint may decide to stop the application based on manufacturer specific behavior or resource\n             * constraints if any. The Status attribute shall be updated to ActiveHidden or Stopped, depending on the\n             * action taken, on the Application Basic cluster of the Endpoint corresponding to the application on which\n             * the action was taken. The Status attribute shall be updated on any other\n             *\n             * application whose Status may have changed as a result of this command. This command returns a Launcher\n             * Response.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4.7.3\n             */\n            hideApp: Command(0x2, TlvHideAppRequest, 0x3, TlvLauncherResponse)\n        },\n\n        /**\n         * This metadata controls which ApplicationLauncherCluster elements matter.js activates for specific feature\n         * combinations.\n         */\n        extensions: MutableCluster.Extensions(\n            { flags: { applicationPlatform: true }, component: ApplicationPlatformComponent }\n        )\n    });\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster(Base);\n\n    /**\n     * This cluster provides an interface for launching applications on a Video Player device such as a TV.\n     *\n     * This cluster is supported on endpoints that can launch Applications, such as a Casting Video Player device with\n     * a Content App Platform. It supports identifying an Application by global identifier from a given catalog, and\n     * launching it. It also supports tracking the currently in-focus Application.\n     *\n     * Depending on the support for the Application Platform feature, the cluster can either support launching the\n     * application corresponding to the endpoint on which the cluster is supported (AP feature not supported) or it can\n     * support launching any application (AP feature supported).\n     *\n     * ApplicationLauncherCluster supports optional features that you can enable with the\n     * ApplicationLauncherCluster.with() factory method.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.4\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    const AP = { applicationPlatform: true };\n\n    /**\n     * @see {@link Complete}\n     */\n    export const CompleteInstance = MutableCluster({\n        id: Cluster.id,\n        name: Cluster.name,\n        revision: Cluster.revision,\n        features: Cluster.features,\n\n        attributes: {\n            ...Cluster.attributes,\n            catalogList: MutableCluster.AsConditional(\n                ApplicationPlatformComponent.attributes.catalogList,\n                { mandatoryIf: [AP] }\n            )\n        },\n\n        commands: Cluster.commands\n    });\n\n    /**\n     * This cluster supports all ApplicationLauncher features. It may support illegal feature combinations.\n     *\n     * If you use this cluster you must manually specify which features are active and ensure the set of active\n     * features is legal per the Matter specification.\n     */\n    export interface Complete extends Identity<typeof CompleteInstance> {}\n\n    export const Complete: Complete = CompleteInstance;\n}\n\nexport type ApplicationLauncherCluster = ApplicationLauncher.Cluster;\nexport const ApplicationLauncherCluster = ApplicationLauncher.Cluster;\nClusterRegistry.register(ApplicationLauncher.Complete);\n"],
  "mappings": "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",
  "names": ["ApplicationLauncher", "Feature", "Status"]
}
