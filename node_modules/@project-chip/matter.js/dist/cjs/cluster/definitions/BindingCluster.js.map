{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/BindingCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { WritableFabricScopedAttribute, AccessLevel } from \"../Cluster.js\";\nimport { TlvArray } from \"../../tlv/TlvArray.js\";\nimport { TlvOptionalField, TlvField, TlvObject } from \"../../tlv/TlvObject.js\";\nimport { TlvNodeId } from \"../../datatype/NodeId.js\";\nimport { TlvGroupId } from \"../../datatype/GroupId.js\";\nimport { TlvEndpointNumber } from \"../../datatype/EndpointNumber.js\";\nimport { TlvClusterId } from \"../../datatype/ClusterId.js\";\nimport { TlvFabricIndex } from \"../../datatype/FabricIndex.js\";\nimport { TypeFromSchema } from \"../../tlv/TlvSchema.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace Binding {\n    /**\n     * @see {@link MatterSpecification.v13.Core} \u00A7 9.6.5.1\n     */\n    export const TlvTarget = TlvObject({\n        /**\n         * This field is the remote target node ID. If the Endpoint field is present, this field shall be present.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 9.6.5.1.1\n         */\n        node: TlvOptionalField(1, TlvNodeId),\n\n        /**\n         * This field is the target group ID that represents remote endpoints. If the Endpoint field is present, this\n         * field shall NOT be present.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 9.6.5.1.2\n         */\n        group: TlvOptionalField(2, TlvGroupId),\n\n        /**\n         * This field is the remote endpoint that the local endpoint is bound to. If the Group field is present, this\n         * field shall NOT be present.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 9.6.5.1.3\n         */\n        endpoint: TlvOptionalField(3, TlvEndpointNumber),\n\n        /**\n         * This field is the cluster ID (client & server) on the local and target endpoint(s). If this field is\n         * present, the client cluster shall also exist on this endpoint (with this Binding cluster). If this field is\n         * present, the target shall be this cluster on the target endpoint(s).\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 9.6.5.1.4\n         */\n        cluster: TlvOptionalField(4, TlvClusterId),\n\n        fabricIndex: TlvField(254, TlvFabricIndex)\n    });\n\n    /**\n     * @see {@link MatterSpecification.v13.Core} \u00A7 9.6.5.1\n     */\n    export interface Target extends TypeFromSchema<typeof TlvTarget> {}\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster({\n        id: 0x1e,\n        name: \"Binding\",\n        revision: 1,\n\n        attributes: {\n            /**\n             * Each entry shall represent a binding.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 9.6.6.1\n             */\n            binding: WritableFabricScopedAttribute(\n                0x0,\n                TlvArray(TlvTarget),\n                { persistent: true, default: [], writeAcl: AccessLevel.Manage }\n            )\n        }\n    });\n\n    /**\n     * NOTE\n     *\n     * This scope of this document is the Binding cluster as part of the Cluster Library. The Binding cluster is meant\n     * to replace the support from the Zigbee Device Object (ZDO) for supporting the binding table.\n     *\n     * A binding represents a persistent relationship between an endpoint and one or more other local or remote\n     * endpoints. A binding does not require that the relationship exists. It is up to the node application to set up\n     * the relationship.\n     *\n     * A binding is used to inform a client endpoint of one or more targets for a potential interaction. For example: a\n     * light switch that controls one or more light bulbs, needs to be told the nodes and endpoints of the bulbs, or\n     * told a group in which the bulbs are members. For example: A client that needs to subscribe to an occupancy\n     * sensor, needs to know the node and endpoint of the sensor.\n     *\n     * In such cases, a binding is used to direct a local endpoint to a target. The existence of the Binding cluster on\n     * the client endpoint, allows the creation of one or more binding entries (bindings) in the Binding cluster.\n     *\n     * Each binding indicates another endpoint or cluster on another endpoint. Multiple bindings are allowed, depending\n     * on the interaction.\n     *\n     * A binding is either a unicast binding, where the target is a single endpoint on a single node, or a groupcast\n     * binding, where the target is a group, which may indicate multiple endpoints on multiple nodes. The binding may\n     * also target a single cluster on the target endpoint(s).\n     *\n     * When a client cluster requires a target for an interaction, the Binding cluster shall exist on the same endpoint.\n     *\n     * Once a binding entry is created on the Binding cluster, the client endpoint may initiate interactions to the\n     * binding target.\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 9.6\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    export const Complete = Cluster;\n}\n\nexport type BindingCluster = Binding.Cluster;\nexport const BindingCluster = Binding.Cluster;\nClusterRegistry.register(Binding.Complete);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,4BAA+B;AAC/B,qBAA2D;AAC3D,sBAAyB;AACzB,uBAAsD;AACtD,oBAA0B;AAC1B,qBAA2B;AAC3B,4BAAkC;AAClC,uBAA6B;AAC7B,yBAA+B;AAG/B,6BAAgC;AAnBhC;AAAA;AAAA;AAAA;AAAA;AAqBO,IAAU;AAAA,CAAV,CAAUA,aAAV;AAII,EAAMA,SAAA,gBAAY,4BAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAM/B,UAAM,mCAAiB,GAAG,uBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQnC,WAAO,mCAAiB,GAAG,yBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQrC,cAAU,mCAAiB,GAAG,uCAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAS/C,aAAS,mCAAiB,GAAG,6BAAY;AAAA,IAEzC,iBAAa,2BAAS,KAAK,iCAAc;AAAA,EAC7C,CAAC;AAUM,EAAMA,SAAA,sBAAkB,sCAAe;AAAA,IAC1C,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,IAEV,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMR,aAAS;AAAA,QACL;AAAA,YACA,0BAASA,SAAA,SAAS;AAAA,QAClB,EAAE,YAAY,MAAM,SAAS,CAAC,GAAG,UAAU,2BAAY,OAAO;AAAA,MAClE;AAAA,IACJ;AAAA,EACJ,CAAC;AAoCM,EAAMA,SAAA,UAAmBA,SAAA;AACzB,EAAMA,SAAA,WAAWA,SAAA;AAAA,GAtGX;AA0GV,MAAM,iBAAiB,QAAQ;AACtC,uCAAgB,SAAS,QAAQ,QAAQ;",
  "names": ["Binding"]
}
