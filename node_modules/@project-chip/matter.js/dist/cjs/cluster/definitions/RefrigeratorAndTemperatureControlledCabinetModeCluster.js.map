{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/RefrigeratorAndTemperatureControlledCabinetModeCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { BitFlag } from \"../../schema/BitmapSchema.js\";\nimport { FixedAttribute, Attribute, WritableAttribute, Command, TlvNoResponse } from \"../Cluster.js\";\nimport { TlvArray } from \"../../tlv/TlvArray.js\";\nimport { ModeBase } from \"./ModeBaseCluster.js\";\nimport { TlvUInt8 } from \"../../tlv/TlvNumber.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace RefrigeratorAndTemperatureControlledCabinetMode {\n    /**\n     * These are optional features supported by RefrigeratorAndTemperatureControlledCabinetModeCluster.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.10.4\n     */\n    export enum Feature {\n        /**\n         * OnOff (DEPONOFF)\n         *\n         * This feature creates a dependency between an OnOff cluster instance and this cluster instance on the same\n         * endpoint. See OnMode for more information.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.10.4.1\n         */\n        OnOff = \"OnOff\"\n    }\n\n    export enum ModeTag {\n        /**\n         * This mode reduces the temperature rapidly, typically above freezing grade.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.7.6.1.1\n         */\n        RapidCool = 16384,\n\n        /**\n         * This mode reduces the temperature rapidly, below freezing grade.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.7.6.1.2\n         */\n        RapidFreeze = 16385\n    }\n\n    /**\n     * These elements and properties are present in all RefrigeratorAndTemperatureControlledCabinetMode clusters.\n     */\n    export const Base = MutableCluster.Component({\n        id: 0x52,\n        name: \"RefrigeratorAndTemperatureControlledCabinetMode\",\n        revision: 2,\n\n        features: {\n            /**\n             * OnOff\n             *\n             * This feature creates a dependency between an OnOff cluster instance and this cluster instance on the\n             * same endpoint. See OnMode for more information.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.10.4.1\n             */\n            onOff: BitFlag(0)\n        },\n\n        attributes: {\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.7.5\n             */\n            supportedModes: FixedAttribute(\n                0x0,\n                TlvArray(ModeBase.TlvModeOption, { minLength: 2, maxLength: 255 }),\n                { default: [] }\n            ),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.7.5\n             */\n            currentMode: Attribute(0x1, TlvUInt8, { scene: true, persistent: true }),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.7.5\n             */\n            startUpMode: WritableAttribute(0x2, TlvUInt8, { persistent: true }),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.7.5\n             */\n            onMode: WritableAttribute(0x3, TlvUInt8, { persistent: true })\n        },\n\n        commands: {\n            /**\n             * This command is used to change device modes.\n             *\n             * On receipt of this command the device shall respond with a ChangeToModeResponse command.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.10.7.1\n             */\n            changeToMode: Command(0x0, ModeBase.TlvChangeToModeRequest, 0x0, TlvNoResponse)\n        },\n\n        /**\n         * This metadata controls which RefrigeratorAndTemperatureControlledCabinetModeCluster elements matter.js\n         * activates for specific feature combinations.\n         */\n        extensions: MutableCluster.Extensions()\n    });\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster(Base);\n\n    /**\n     * This cluster is derived from the Mode Base cluster, defining additional mode tags and namespaced enumerated\n     * values for refrigerator and temperature controlled cabinet devices.\n     *\n     * RefrigeratorAndTemperatureControlledCabinetModeCluster supports optional features that you can enable with the\n     * RefrigeratorAndTemperatureControlledCabinetModeCluster.with() factory method.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.7\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    export const Complete = Cluster;\n}\n\nexport type RefrigeratorAndTemperatureControlledCabinetModeCluster = RefrigeratorAndTemperatureControlledCabinetMode.Cluster;\nexport const RefrigeratorAndTemperatureControlledCabinetModeCluster = RefrigeratorAndTemperatureControlledCabinetMode.Cluster;\nClusterRegistry.register(RefrigeratorAndTemperatureControlledCabinetMode.Complete);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,4BAA+B;AAC/B,0BAAwB;AACxB,qBAAqF;AACrF,sBAAyB;AACzB,6BAAyB;AACzB,uBAAyB;AAEzB,6BAAgC;AAfhC;AAAA;AAAA;AAAA;AAAA;AAiBO,IAAU;AAAA,CAAV,CAAUA,qDAAV;AAMI,MAAK;AAAL,IAAKC,aAAL;AASH,IAAAA,SAAA,WAAQ;AAAA,KATA,UAAAD,iDAAA,YAAAA,iDAAA;AAYL,MAAK;AAAL,IAAKE,aAAL;AAMH,IAAAA,kBAAA,eAAY,SAAZ;AAOA,IAAAA,kBAAA,iBAAc,SAAd;AAAA,KAbQ,UAAAF,iDAAA,YAAAA,iDAAA;AAmBL,EAAMA,iDAAA,OAAO,qCAAe,UAAU;AAAA,IACzC,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,IAEV,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASN,WAAO,6BAAQ,CAAC;AAAA,IACpB;AAAA,IAEA,YAAY;AAAA;AAAA;AAAA;AAAA,MAIR,oBAAgB;AAAA,QACZ;AAAA,YACA,0BAAS,gCAAS,eAAe,EAAE,WAAW,GAAG,WAAW,IAAI,CAAC;AAAA,QACjE,EAAE,SAAS,CAAC,EAAE;AAAA,MAClB;AAAA;AAAA;AAAA;AAAA,MAKA,iBAAa,0BAAU,GAAK,2BAAU,EAAE,OAAO,MAAM,YAAY,KAAK,CAAC;AAAA;AAAA;AAAA;AAAA,MAKvE,iBAAa,kCAAkB,GAAK,2BAAU,EAAE,YAAY,KAAK,CAAC;AAAA;AAAA;AAAA;AAAA,MAKlE,YAAQ,kCAAkB,GAAK,2BAAU,EAAE,YAAY,KAAK,CAAC;AAAA,IACjE;AAAA,IAEA,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQN,kBAAc,wBAAQ,GAAK,gCAAS,wBAAwB,GAAK,4BAAa;AAAA,IAClF;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,YAAY,qCAAe,WAAW;AAAA,EAC1C,CAAC;AAKM,EAAMA,iDAAA,sBAAkB,sCAAeA,iDAAA,IAAI;AAa3C,EAAMA,iDAAA,UAAmBA,iDAAA;AACzB,EAAMA,iDAAA,WAAWA,iDAAA;AAAA,GAnHX;AAuHV,MAAM,yDAAyD,gDAAgD;AACtH,uCAAgB,SAAS,gDAAgD,QAAQ;",
  "names": ["RefrigeratorAndTemperatureControlledCabinetMode", "Feature", "ModeTag"]
}
