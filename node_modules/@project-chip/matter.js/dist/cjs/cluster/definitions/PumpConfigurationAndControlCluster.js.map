{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/PumpConfigurationAndControlCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport {\n    FixedAttribute,\n    OptionalFixedAttribute,\n    OptionalAttribute,\n    Attribute,\n    OptionalWritableAttribute,\n    AccessLevel,\n    WritableAttribute,\n    OptionalEvent,\n    EventPriority\n} from \"../Cluster.js\";\nimport { TlvInt16, TlvUInt16, TlvBitmap, TlvEnum, TlvUInt24, TlvUInt32 } from \"../../tlv/TlvNumber.js\";\nimport { TlvNullable } from \"../../tlv/TlvNullable.js\";\nimport { BitFlag } from \"../../schema/BitmapSchema.js\";\nimport { TlvNoArguments } from \"../../tlv/TlvNoArguments.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace PumpConfigurationAndControl {\n    /**\n     * These are optional features supported by PumpConfigurationAndControlCluster.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.4\n     */\n    export enum Feature {\n        /**\n         * ConstantPressure (PRSCONST)\n         *\n         * Supports operating in constant pressure mode\n         */\n        ConstantPressure = \"ConstantPressure\",\n\n        /**\n         * CompensatedPressure (PRSCOMP)\n         *\n         * Supports operating in compensated pressure mode\n         */\n        CompensatedPressure = \"CompensatedPressure\",\n\n        /**\n         * ConstantFlow (FLW)\n         *\n         * Supports operating in constant flow mode\n         */\n        ConstantFlow = \"ConstantFlow\",\n\n        /**\n         * ConstantSpeed (SPD)\n         *\n         * Supports operating in constant speed mode\n         */\n        ConstantSpeed = \"ConstantSpeed\",\n\n        /**\n         * ConstantTemperature (TEMP)\n         *\n         * Supports operating in constant temperature mode\n         */\n        ConstantTemperature = \"ConstantTemperature\",\n\n        /**\n         * Automatic (AUTO)\n         *\n         * Supports operating in automatic mode\n         */\n        Automatic = \"Automatic\",\n\n        /**\n         * LocalOperation (LOCAL)\n         *\n         * Supports operating using local settings\n         */\n        LocalOperation = \"LocalOperation\"\n    }\n\n    /**\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.6.1\n     */\n    export const PumpStatus = {\n        /**\n         * A fault related to the system or pump device is detected.\n         *\n         * If this bit is set, it may correspond to an event in the range 2-16, see Events.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.6.1.1\n         */\n        deviceFault: BitFlag(0),\n\n        /**\n         * A fault related to the supply to the pump is detected.\n         *\n         * If this bit is set, it may correspond to an event in the range 0-1 or 13, see Events.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.6.1.2\n         */\n        supplyFault: BitFlag(1),\n\n        /**\n         * Setpoint is too low to achieve.\n         */\n        speedLow: BitFlag(2),\n\n        /**\n         * Setpoint is too high to achieve.\n         */\n        speedHigh: BitFlag(3),\n\n        /**\n         * Device control is overridden by hardware, such as an external STOP button or via a local HMI.\n         *\n         * While this bit is set, the EffectiveOperationMode is adjusted to Local. Any request changing OperationMode\n         * shall generate a FAILURE error status until LocalOverride is cleared on the physical device. When\n         * LocalOverride is cleared, the device shall return to the operation mode set in OperationMode.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.6.1.3\n         */\n        localOverride: BitFlag(4),\n\n        /**\n         * Pump is currently running\n         */\n        running: BitFlag(5),\n\n        /**\n         * A remote pressure sensor is used as the sensor for the regulation of the pump.\n         *\n         * If this bit is set, EffectiveControlMode is ConstantPressure and the setpoint for the pump is interpreted as\n         * a percentage of the range of the remote sensor ([MinMeasuredValue \u2013 MaxMeasuredValue]).\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.6.1.4\n         */\n        remotePressure: BitFlag(6),\n\n        /**\n         * A remote flow sensor is used as the sensor for the regulation of the pump.\n         *\n         * If this bit is set, EffectiveControlMode is ConstantFlow, and the setpoint for the pump is interpreted as a\n         * percentage of the range of the remote sensor ([MinMeasuredValue \u2013 MaxMeasuredValue]).\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.6.1.5\n         */\n        remoteFlow: BitFlag(7),\n\n        /**\n         * A remote temperature sensor is used as the sensor for the regulation of the pump.\n         *\n         * If this bit is set, EffectiveControlMode is ConstantTemperature, and the setpoint for the pump is\n         * interpreted as a percentage of the range of the remote sensor ([MinMeasuredValue \u2013 MaxMeasuredValue])\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.6.1.6\n         */\n        remoteTemperature: BitFlag(8)\n    };\n\n    /**\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.6.2\n     */\n    export enum OperationMode {\n        /**\n         * The pump is controlled by a setpoint, as defined by a connected remote sensor or by the ControlMode\n         * attribute.\n         *\n         * If the pump is running in this operation mode the setpoint is an internal variable which may be controlled\n         * between 0% and 100%, e.g., by means of the Level Control cluster\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.6.2.1\n         */\n        Normal = 0,\n\n        /**\n         * This value sets the pump to run at the minimum possible speed it can without being stopped.\n         */\n        Minimum = 1,\n\n        /**\n         * This value sets the pump to run at its maximum possible speed.\n         */\n        Maximum = 2,\n\n        /**\n         * This value sets the pump to run with the local settings of the pump, regardless of what these are.\n         */\n        Local = 3\n    }\n\n    /**\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.6.3\n     */\n    export enum ControlMode {\n        /**\n         * The pump is running at a constant speed.\n         *\n         * The setpoint is interpreted as a percentage of the range derived from the [MinConstSpeed \u2013 MaxConstSpeed]\n         * attributes.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.6.3.1\n         */\n        ConstantSpeed = 0,\n\n        /**\n         * The pump will regulate its speed to maintain a constant differential pressure over its flanges.\n         *\n         * The setpoint is interpreted as a percentage of the range of the sensor used for this control mode. In case\n         * of the internal pressure sensor, this will be the range derived from the [MinConstPressure \u2013\n         * MaxConstPressure] attributes. In case of a remote pressure sensor, this will be the range derived from the\n         * [MinMeasuredValue \u2013 MaxMeasuredValue] attributes of the remote pressure sensor.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.6.3.2\n         */\n        ConstantPressure = 1,\n\n        /**\n         * The pump will regulate its speed to maintain a constant differential pressure over its flanges.\n         *\n         * The setpoint is interpreted as a percentage of the range derived of the [MinCompPressure \u2013 MaxCompPressure]\n         * attributes. The internal setpoint will be lowered (compensated) dependent on the flow in the pump (lower\n         * flow \u21D2 lower internal setpoint).\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.6.3.3\n         */\n        ProportionalPressure = 2,\n\n        /**\n         * The pump will regulate its speed to maintain a constant flow through the pump.\n         *\n         * The setpoint is interpreted as a percentage of the range of the sensor used for this control mode. In case\n         * of the internal flow sensor, this will be the range derived from the [MinConstFlow \u2013 MaxConstFlow]\n         * attributes. In case of a remote flow sensor, this will be the range derived from the [MinMeasuredValue \u2013\n         * MaxMeasuredValue] attributes of the remote flow sensor.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.6.3.4\n         */\n        ConstantFlow = 3,\n\n        /**\n         * The pump will regulate its speed to maintain a constant temperature.\n         *\n         * The setpoint is interpreted as a percentage of the range of the sensor used for this control mode. In case\n         * of the internal temperature sensor, this will be the range derived from the [MinConstTemp \u2013 MaxConstTemp]\n         * attributes. In case of a remote temperature sensor, this will be the range derived from the\n         * [MinMeasuredValue \u2013 MaxMeasuredValue] attributes of the remote temperature sensor.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.6.3.5\n         */\n        ConstantTemperature = 5,\n\n        /**\n         * The operation of the pump is automatically optimized to provide the most suitable performance with respect\n         * to comfort and energy savings.\n         *\n         * This behavior is manufacturer defined. The pump can be stopped by setting the setpoint of the level control\n         * cluster to 0, or by using the On/Off cluster. If the pump is started (at any setpoint), the speed of the\n         * pump is entirely determined by the pump.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.6.3.6\n         */\n        Automatic = 7\n    }\n\n    /**\n     * A PumpConfigurationAndControlCluster supports these elements if it supports feature ConstantPressure.\n     */\n    export const ConstantPressureComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * This attribute specifies the minimum pressure the pump can achieve when it is working with the\n             * ControlMode attribute set to ConstantPressure.\n             *\n             * Valid range is \u20133,276.7 kPa to 3,276.7 kPa (steps of 0.1 kPa). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.4\n             */\n            minConstPressure: FixedAttribute(0x3, TlvNullable(TlvInt16), { default: null }),\n\n            /**\n             * This attribute specifies the maximum pressure the pump can achieve when it is working with the\n             * ControlMode attribute set to ConstantPressure.\n             *\n             * Valid range is \u20133,276.7 kPa to 3,276.7 kPa (steps of 0.1 kPa). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.5\n             */\n            maxConstPressure: FixedAttribute(0x4, TlvNullable(TlvInt16), { default: null })\n        }\n    });\n\n    /**\n     * A PumpConfigurationAndControlCluster supports these elements if it supports feature Automatic.\n     */\n    export const AutomaticComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * This attribute specifies the minimum pressure the pump can achieve when it is working with the\n             * ControlMode attribute set to ConstantPressure.\n             *\n             * Valid range is \u20133,276.7 kPa to 3,276.7 kPa (steps of 0.1 kPa). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.4\n             */\n            minConstPressure: OptionalFixedAttribute(0x3, TlvNullable(TlvInt16), { default: null }),\n\n            /**\n             * This attribute specifies the maximum pressure the pump can achieve when it is working with the\n             * ControlMode attribute set to ConstantPressure.\n             *\n             * Valid range is \u20133,276.7 kPa to 3,276.7 kPa (steps of 0.1 kPa). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.5\n             */\n            maxConstPressure: OptionalFixedAttribute(0x4, TlvNullable(TlvInt16), { default: null }),\n\n            /**\n             * This attribute specifies the minimum compensated pressure the pump can achieve when it is working with\n             * the ControlMode attribute set to ProportionalPressure.\n             *\n             * Valid range is \u20133,276.7 kPa to 3,276.7 kPa (steps of 0.1 kPa). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.6\n             */\n            minCompPressure: OptionalFixedAttribute(0x5, TlvNullable(TlvInt16), { default: null }),\n\n            /**\n             * This attribute specifies the maximum compensated pressure the pump can achieve when it is working with\n             * the ControlMode attribute set to ProportionalPressure.\n             *\n             * Valid range is \u20133,276.7 kPa to 3,276.7 kPa (steps of 0.1 kPa). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.7\n             */\n            maxCompPressure: OptionalFixedAttribute(0x6, TlvNullable(TlvInt16), { default: null }),\n\n            /**\n             * This attribute specifies the minimum speed the pump can achieve when it is working with the ControlMode\n             * attribute set to ConstantSpeed.\n             *\n             * Valid range is 0 to 65,534 RPM (steps of 1 RPM). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.8\n             */\n            minConstSpeed: OptionalFixedAttribute(0x7, TlvNullable(TlvUInt16), { default: null }),\n\n            /**\n             * This attribute specifies the maximum speed the pump can achieve when it is working with the ControlMode\n             * attribute set to ConstantSpeed.\n             *\n             * Valid range is 0 to 65,534 RPM (steps of 1 RPM). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.9\n             */\n            maxConstSpeed: OptionalFixedAttribute(0x8, TlvNullable(TlvUInt16), { default: null }),\n\n            /**\n             * This attribute specifies the minimum flow the pump can achieve when it is working with the Con\n             *\n             * trolMode attribute set to ConstantFlow.\n             *\n             * Valid range is 0 m/h to 6,553.4 m/h (steps of 0.1 m/h). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.10\n             */\n            minConstFlow: OptionalFixedAttribute(0x9, TlvNullable(TlvUInt16), { default: null }),\n\n            /**\n             * This attribute specifies the maximum flow the pump can achieve when it is working with the ControlMode\n             * attribute set to ConstantFlow.\n             *\n             * Valid range is 0 m/h to 6,553.4 m/h (steps of 0.1 m/h). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.11\n             */\n            maxConstFlow: OptionalFixedAttribute(0xa, TlvNullable(TlvUInt16), { default: null }),\n\n            /**\n             * This attribute specifies the minimum temperature the pump can maintain in the system when it is working\n             * with the ControlMode attribute set to ConstantTemperature.\n             *\n             * Valid range is \u2013273.15 \u00B0C to 327.67 \u00B0C (steps of 0.01 \u00B0C). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.12\n             */\n            minConstTemp: OptionalFixedAttribute(0xb, TlvNullable(TlvInt16.bound({ min: -27315 })), { default: null }),\n\n            /**\n             * This attribute specifies the maximum temperature the pump can maintain in the system when it is working\n             * with the ControlMode attribute set to ConstantTemperature.\n             *\n             * MaxConstTemp shall be greater than or equal to MinConstTemp\n             *\n             * Valid range is \u2013273.15 \u00B0C to 327.67 \u00B0C (steps of 0.01 \u00B0C). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.13\n             */\n            maxConstTemp: OptionalFixedAttribute(0xc, TlvNullable(TlvInt16.bound({ min: -27315 })), { default: null })\n        }\n    });\n\n    /**\n     * A PumpConfigurationAndControlCluster supports these elements if it supports feature CompensatedPressure.\n     */\n    export const CompensatedPressureComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * This attribute specifies the minimum compensated pressure the pump can achieve when it is working with\n             * the ControlMode attribute set to ProportionalPressure.\n             *\n             * Valid range is \u20133,276.7 kPa to 3,276.7 kPa (steps of 0.1 kPa). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.6\n             */\n            minCompPressure: FixedAttribute(0x5, TlvNullable(TlvInt16), { default: null }),\n\n            /**\n             * This attribute specifies the maximum compensated pressure the pump can achieve when it is working with\n             * the ControlMode attribute set to ProportionalPressure.\n             *\n             * Valid range is \u20133,276.7 kPa to 3,276.7 kPa (steps of 0.1 kPa). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.7\n             */\n            maxCompPressure: FixedAttribute(0x6, TlvNullable(TlvInt16), { default: null })\n        }\n    });\n\n    /**\n     * A PumpConfigurationAndControlCluster supports these elements if it supports feature ConstantSpeed.\n     */\n    export const ConstantSpeedComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * This attribute specifies the minimum speed the pump can achieve when it is working with the ControlMode\n             * attribute set to ConstantSpeed.\n             *\n             * Valid range is 0 to 65,534 RPM (steps of 1 RPM). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.8\n             */\n            minConstSpeed: FixedAttribute(0x7, TlvNullable(TlvUInt16), { default: null }),\n\n            /**\n             * This attribute specifies the maximum speed the pump can achieve when it is working with the ControlMode\n             * attribute set to ConstantSpeed.\n             *\n             * Valid range is 0 to 65,534 RPM (steps of 1 RPM). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.9\n             */\n            maxConstSpeed: FixedAttribute(0x8, TlvNullable(TlvUInt16), { default: null })\n        }\n    });\n\n    /**\n     * A PumpConfigurationAndControlCluster supports these elements if it supports feature ConstantFlow.\n     */\n    export const ConstantFlowComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * This attribute specifies the minimum flow the pump can achieve when it is working with the Con\n             *\n             * trolMode attribute set to ConstantFlow.\n             *\n             * Valid range is 0 m/h to 6,553.4 m/h (steps of 0.1 m/h). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.10\n             */\n            minConstFlow: FixedAttribute(0x9, TlvNullable(TlvUInt16), { default: null }),\n\n            /**\n             * This attribute specifies the maximum flow the pump can achieve when it is working with the ControlMode\n             * attribute set to ConstantFlow.\n             *\n             * Valid range is 0 m/h to 6,553.4 m/h (steps of 0.1 m/h). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.11\n             */\n            maxConstFlow: FixedAttribute(0xa, TlvNullable(TlvUInt16), { default: null })\n        }\n    });\n\n    /**\n     * A PumpConfigurationAndControlCluster supports these elements if it supports feature ConstantTemperature.\n     */\n    export const ConstantTemperatureComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * This attribute specifies the minimum temperature the pump can maintain in the system when it is working\n             * with the ControlMode attribute set to ConstantTemperature.\n             *\n             * Valid range is \u2013273.15 \u00B0C to 327.67 \u00B0C (steps of 0.01 \u00B0C). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.12\n             */\n            minConstTemp: FixedAttribute(0xb, TlvNullable(TlvInt16.bound({ min: -27315 })), { default: null }),\n\n            /**\n             * This attribute specifies the maximum temperature the pump can maintain in the system when it is working\n             * with the ControlMode attribute set to ConstantTemperature.\n             *\n             * MaxConstTemp shall be greater than or equal to MinConstTemp\n             *\n             * Valid range is \u2013273.15 \u00B0C to 327.67 \u00B0C (steps of 0.01 \u00B0C). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.13\n             */\n            maxConstTemp: FixedAttribute(0xc, TlvNullable(TlvInt16.bound({ min: -27315 })), { default: null })\n        }\n    });\n\n    /**\n     * These elements and properties are present in all PumpConfigurationAndControl clusters.\n     */\n    export const Base = MutableCluster.Component({\n        id: 0x200,\n        name: \"PumpConfigurationAndControl\",\n        revision: 4,\n\n        features: {\n            /**\n             * ConstantPressure\n             *\n             * Supports operating in constant pressure mode\n             */\n            constantPressure: BitFlag(0),\n\n            /**\n             * CompensatedPressure\n             *\n             * Supports operating in compensated pressure mode\n             */\n            compensatedPressure: BitFlag(1),\n\n            /**\n             * ConstantFlow\n             *\n             * Supports operating in constant flow mode\n             */\n            constantFlow: BitFlag(2),\n\n            /**\n             * ConstantSpeed\n             *\n             * Supports operating in constant speed mode\n             */\n            constantSpeed: BitFlag(3),\n\n            /**\n             * ConstantTemperature\n             *\n             * Supports operating in constant temperature mode\n             */\n            constantTemperature: BitFlag(4),\n\n            /**\n             * Automatic\n             *\n             * Supports operating in automatic mode\n             */\n            automatic: BitFlag(5),\n\n            /**\n             * LocalOperation\n             *\n             * Supports operating using local settings\n             */\n            localOperation: BitFlag(6)\n        },\n\n        attributes: {\n            /**\n             * This attribute specifies the maximum pressure the pump can achieve. It is a physical limit, and does not\n             * apply to any specific control mode or operation mode.\n             *\n             * Valid range is -3,276.7 kPa to 3,276.7 kPa (steps of 0.1 kPa). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.1\n             */\n            maxPressure: FixedAttribute(0x0, TlvNullable(TlvInt16), { default: null }),\n\n            /**\n             * This attribute specifies the maximum speed the pump can achieve. It is a physical limit, and does not\n             * apply to any specific control mode or operation mode.\n             *\n             * Valid range is 0 to 65,534 RPM (steps of 1 RPM). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.2\n             */\n            maxSpeed: FixedAttribute(0x1, TlvNullable(TlvUInt16), { default: null }),\n\n            /**\n             * This attribute specifies the maximum flow the pump can achieve. It is a physical limit, and does not\n             * apply to any specific control mode or operation mode.\n             *\n             * Valid range is 0 m/h to 6,553.4 m/h (steps of 0.1 m/h). Null if the value is invalid.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.3\n             */\n            maxFlow: FixedAttribute(0x2, TlvNullable(TlvUInt16), { default: null }),\n\n            /**\n             * This attribute specifies the activity status of the pump functions as listed in PumpStatusBitmap. Where\n             * a pump controller function is active, the corresponding bit shall be set to 1. Where a pump controller\n             * function is not active, the corresponding bit shall be set to 0.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.14\n             */\n            pumpStatus: OptionalAttribute(0x10, TlvBitmap(TlvUInt16, PumpStatus)),\n\n            /**\n             * This attribute specifies current effective operation mode of the pump as defined in OperationModeEnum.\n             *\n             * The value of the EffectiveOperationMode attribute is the same as the OperationMode attribute, unless one\n             * of the following points are true:\n             *\n             *   \u2022 The pump is physically set to run with the local settings\n             *\n             *   \u2022 The LocalOverride bit in the PumpStatus attribute is set,\n             *\n             * See OperationMode and ControlMode attributes for a detailed description of the operation and control of\n             * the pump.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.15\n             */\n            effectiveOperationMode: Attribute(0x11, TlvEnum<OperationMode>(), { persistent: true }),\n\n            /**\n             * This attribute specifies the current effective control mode of the pump as defined in ControlModeEnum.\n             *\n             * This attribute contains the control mode that currently applies to the pump. It will have the value of\n             * the ControlMode attribute, unless one of the following points are true:\n             *\n             *   \u2022 The ControlMode attribute is set to Automatic. In this case, the value of the EffectiveControlMode\n             *     shall match the behavior of the pump.\n             *\n             *   \u2022 A remote sensor is used as the sensor for regulation of the pump. In this case, EffectiveControlMode\n             *     will display ConstantPressure, ConstantFlow or ConstantTemperature if the remote sensor is a\n             *     pressure sensor, a flow sensor or a temperature sensor respectively, regardless of the value of the\n             *     ControlMode attribute.\n             *\n             * In case the ControlMode attribute is not included on the device and no remote sensors are connected, the\n             * value of the EffectiveControlMode shall match the vendor-specific behavior of the pump.\n             *\n             * See OperationMode and ControlMode attributes for detailed a description of the operation and control of\n             * the pump.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.16\n             */\n            effectiveControlMode: Attribute(0x12, TlvEnum<ControlMode>(), { persistent: true }),\n\n            /**\n             * This attribute specifies the actual capacity of the pump as a percentage of the effective maximum\n             * setpoint value. It is updated dynamically as the speed of the pump changes.\n             *\n             * If the value is not available (the measurement or estimation of the speed is done in the pump), this\n             * attribute will indicate the null value.\n             *\n             * Valid range is 0 % to 163.835% (0.005 % granularity). Although this attribute is a signed value, values\n             * of capacity less than zero have no physical meaning.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.17\n             */\n            capacity: Attribute(0x13, TlvNullable(TlvInt16), { default: null }),\n\n            /**\n             * This attribute specifies the actual speed of the pump measured in RPM. It is updated dynamically as the\n             * speed of the pump changes.\n             *\n             * If the value is not available (the measurement or estimation of the speed is done in the pump), this\n             * attribute will indicate the null value.\n             *\n             * Valid range is 0 to 65.534 RPM.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.18\n             */\n            speed: OptionalAttribute(0x14, TlvNullable(TlvUInt16), { default: null }),\n\n            /**\n             * This attribute specifies the accumulated number of hours that the pump has been powered and the motor\n             * has been running. It is updated dynamically as it increases. It is preserved over power cycles of the\n             * pump. If LifeTimeRunningHours rises above maximum value it \u201Crolls over\u201D and starts at 0 (zero).\n             *\n             * This attribute is writeable, in order to allow setting to an appropriate value after maintenance. If\n             *\n             * the value is not available, this attribute will indicate the null value. Valid range is 0 to 16,777,214\n             * hrs.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.19\n             */\n            lifetimeRunningHours: OptionalWritableAttribute(\n                0x15,\n                TlvNullable(TlvUInt24),\n                { persistent: true, default: 0, writeAcl: AccessLevel.Manage }\n            ),\n\n            /**\n             * This attribute specifies the actual power consumption of the pump in Watts. The value of this attribute\n             * is updated dynamically as the power consumption of the pump changes.\n             *\n             * This attribute is read only. If the value is not available (the measurement of power consumption is not\n             * done in the pump), this attribute will indicate the null value.\n             *\n             * Valid range is 0 to 16,777,214 Watts.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.20\n             */\n            power: OptionalAttribute(0x16, TlvNullable(TlvUInt24), { default: null }),\n\n            /**\n             * This attribute specifies the accumulated energy consumption of the pump through the entire lifetime of\n             * the pump in kWh. The value of the LifetimeEnergyConsumed attribute is updated dynamically as the energy\n             * consumption of the pump increases. If LifetimeEnergyConsumed rises above maximum value it \u201Crolls over\u201D\n             * and starts at 0 (zero).\n             *\n             * This attribute is writeable, in order to allow setting to an appropriate value after maintenance.\n             *\n             * Valid range is 0 kWh to 4,294,967,294 kWh.\n             *\n             * Null if the value is unknown.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.21\n             */\n            lifetimeEnergyConsumed: OptionalWritableAttribute(\n                0x17,\n                TlvNullable(TlvUInt32),\n                { persistent: true, default: 0, writeAcl: AccessLevel.Manage }\n            ),\n\n            /**\n             * This attribute specifies the operation mode of the pump as defined in OperationModeEnum.\n             *\n             * The actual operating mode of the pump is a result of the setting of the attributes OperationMode,\n             * ControlMode and the optional connection of a remote sensor. The operation and control is prioritized as\n             * shown in the scheme below:\n             *\n             * Priority Scheme of Pump Operation and Control\n             *\n             * If this attribute is Maximum, Minimum or Local, the OperationMode attribute decides how the pump is\n             * operated.\n             *\n             * If this attribute is Normal and a remote sensor is connected to the pump, the type of the remote sensor\n             * decides the control mode of the pump. A connected remote pressure sensor will make the pump run in\n             * control mode Constant pressure and vice versa for flow and temperature type sensors. This is regardless\n             * of the setting of the ControlMode attribute.\n             *\n             * If this attribute is Normal and no remote sensor is connected, the control mode of the pump is decided\n             * by the ControlMode attribute.\n             *\n             * OperationMode may be changed at any time, even when the pump is running. The behavior of the pump at the\n             * point of changing the value of this attribute is vendor-specific.\n             *\n             * In the case a device does not support a specific operation mode, the write interaction to this attribute\n             * with an unsupported operation mode value shall be ignored and a response containing the status of\n             * CONSTRAINT_ERROR shall be returned.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.22\n             */\n            operationMode: WritableAttribute(\n                0x20,\n                TlvEnum<OperationMode>(),\n                { persistent: true, default: OperationMode.Normal, writeAcl: AccessLevel.Manage }\n            ),\n\n            /**\n             * This attribute specifies the control mode of the pump as defined in ControlModeEnum.\n             *\n             * See the OperationMode attribute for a detailed description of the operation and control of the\n             *\n             * pump.\n             *\n             * ControlMode may be changed at any time, even when the pump is running. The behavior of the pump at the\n             * point of changing is vendor-specific.\n             *\n             * In the case a device does not support a specific control mode, the write interaction to this attribute\n             * with an unsupported control mode value shall be ignored and a response containing the status of\n             * CONSTRAINT_ERROR shall be returned.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.7.23\n             */\n            controlMode: OptionalWritableAttribute(\n                0x21,\n                TlvEnum<ControlMode>(),\n                { persistent: true, default: ControlMode.ConstantSpeed, writeAcl: AccessLevel.Manage }\n            )\n        },\n\n        events: {\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            supplyVoltageLow: OptionalEvent(0x0, EventPriority.Info, TlvNoArguments),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            supplyVoltageHigh: OptionalEvent(0x1, EventPriority.Info, TlvNoArguments),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            powerMissingPhase: OptionalEvent(0x2, EventPriority.Info, TlvNoArguments),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            systemPressureLow: OptionalEvent(0x3, EventPriority.Info, TlvNoArguments),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            systemPressureHigh: OptionalEvent(0x4, EventPriority.Info, TlvNoArguments),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            dryRunning: OptionalEvent(0x5, EventPriority.Critical, TlvNoArguments),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            motorTemperatureHigh: OptionalEvent(0x6, EventPriority.Info, TlvNoArguments),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            pumpMotorFatalFailure: OptionalEvent(0x7, EventPriority.Critical, TlvNoArguments),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            electronicTemperatureHigh: OptionalEvent(0x8, EventPriority.Info, TlvNoArguments),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            pumpBlocked: OptionalEvent(0x9, EventPriority.Critical, TlvNoArguments),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            sensorFailure: OptionalEvent(0xa, EventPriority.Info, TlvNoArguments),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            electronicNonFatalFailure: OptionalEvent(0xb, EventPriority.Info, TlvNoArguments),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            electronicFatalFailure: OptionalEvent(0xc, EventPriority.Critical, TlvNoArguments),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            generalFault: OptionalEvent(0xd, EventPriority.Info, TlvNoArguments),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            leakage: OptionalEvent(0xe, EventPriority.Info, TlvNoArguments),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            airDetection: OptionalEvent(0xf, EventPriority.Info, TlvNoArguments),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2.8\n             */\n            turbineOperation: OptionalEvent(0x10, EventPriority.Info, TlvNoArguments)\n        },\n\n        /**\n         * This metadata controls which PumpConfigurationAndControlCluster elements matter.js activates for specific\n         * feature combinations.\n         */\n        extensions: MutableCluster.Extensions(\n            { flags: { constantPressure: true }, component: ConstantPressureComponent },\n            { flags: { automatic: true }, component: AutomaticComponent },\n            { flags: { compensatedPressure: true }, component: CompensatedPressureComponent },\n            { flags: { constantSpeed: true }, component: ConstantSpeedComponent },\n            { flags: { constantFlow: true }, component: ConstantFlowComponent },\n            { flags: { constantTemperature: true }, component: ConstantTemperatureComponent },\n\n            {\n                flags: {\n                    constantPressure: false,\n                    compensatedPressure: false,\n                    constantFlow: false,\n                    constantSpeed: false,\n                    constantTemperature: false\n                },\n\n                component: false\n            }\n        )\n    });\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster.ExtensibleOnly(Base);\n\n    /**\n     * The Pump Configuration and Control cluster provides an interface for the setup and control of pump devices, and\n     * the automatic reporting of pump status information. Note that control of pump speed is not included \u2013 speed is\n     * controlled by the On/Off and Level Control clusters.\n     *\n     * Per the Matter specification you cannot use {@link PumpConfigurationAndControlCluster} without enabling certain\n     * feature combinations. You must use the {@link with} factory method to obtain a working cluster.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 4.2\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    const PRSCONST = { constantPressure: true };\n    const AUTO = { automatic: true };\n    const PRSCOMP = { compensatedPressure: true };\n    const SPD = { constantSpeed: true };\n    const FLW = { constantFlow: true };\n    const TEMP = { constantTemperature: true };\n\n    /**\n     * @see {@link Complete}\n     */\n    export const CompleteInstance = MutableCluster({\n        id: Base.id,\n        name: Base.name,\n        revision: Base.revision,\n        features: Base.features,\n\n        attributes: {\n            ...Base.attributes,\n            minConstPressure: MutableCluster.AsConditional(\n                ConstantPressureComponent.attributes.minConstPressure,\n                { mandatoryIf: [PRSCONST], optionalIf: [AUTO] }\n            ),\n            maxConstPressure: MutableCluster.AsConditional(\n                ConstantPressureComponent.attributes.maxConstPressure,\n                { mandatoryIf: [PRSCONST], optionalIf: [AUTO] }\n            ),\n            minCompPressure: MutableCluster.AsConditional(\n                AutomaticComponent.attributes.minCompPressure,\n                { optionalIf: [AUTO], mandatoryIf: [PRSCOMP] }\n            ),\n            maxCompPressure: MutableCluster.AsConditional(\n                AutomaticComponent.attributes.maxCompPressure,\n                { optionalIf: [AUTO], mandatoryIf: [PRSCOMP] }\n            ),\n            minConstSpeed: MutableCluster.AsConditional(\n                AutomaticComponent.attributes.minConstSpeed,\n                { optionalIf: [AUTO], mandatoryIf: [SPD] }\n            ),\n            maxConstSpeed: MutableCluster.AsConditional(\n                AutomaticComponent.attributes.maxConstSpeed,\n                { optionalIf: [AUTO], mandatoryIf: [SPD] }\n            ),\n            minConstFlow: MutableCluster.AsConditional(\n                AutomaticComponent.attributes.minConstFlow,\n                { optionalIf: [AUTO], mandatoryIf: [FLW] }\n            ),\n            maxConstFlow: MutableCluster.AsConditional(\n                AutomaticComponent.attributes.maxConstFlow,\n                { optionalIf: [AUTO], mandatoryIf: [FLW] }\n            ),\n            minConstTemp: MutableCluster.AsConditional(\n                AutomaticComponent.attributes.minConstTemp,\n                { optionalIf: [AUTO], mandatoryIf: [TEMP] }\n            ),\n            maxConstTemp: MutableCluster.AsConditional(\n                AutomaticComponent.attributes.maxConstTemp,\n                { optionalIf: [AUTO], mandatoryIf: [TEMP] }\n            )\n        },\n\n        events: Base.events\n    });\n\n    /**\n     * This cluster supports all PumpConfigurationAndControl features. It may support illegal feature combinations.\n     *\n     * If you use this cluster you must manually specify which features are active and ensure the set of active\n     * features is legal per the Matter specification.\n     */\n    export interface Complete extends Identity<typeof CompleteInstance> {}\n\n    export const Complete: Complete = CompleteInstance;\n}\n\nexport type PumpConfigurationAndControlCluster = PumpConfigurationAndControl.Cluster;\nexport const PumpConfigurationAndControlCluster = PumpConfigurationAndControl.Cluster;\nClusterRegistry.register(PumpConfigurationAndControl.Complete);\n"],
  "mappings": "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",
  "names": ["PumpConfigurationAndControl", "Feature", "OperationMode", "ControlMode"]
}
