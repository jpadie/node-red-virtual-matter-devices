{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/ProxyConfigurationCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { WritableAttribute } from \"../Cluster.js\";\nimport { TlvArray } from \"../../tlv/TlvArray.js\";\nimport { TlvField, TlvObject } from \"../../tlv/TlvObject.js\";\nimport { TlvBoolean } from \"../../tlv/TlvBoolean.js\";\nimport { TlvNodeId } from \"../../datatype/NodeId.js\";\nimport { TypeFromSchema } from \"../../tlv/TlvSchema.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace ProxyConfiguration {\n    /**\n     * @see {@link MatterSpecification.v13.Core} \u00A7 9.15.13.4.1\n     */\n    export const TlvConfiguration = TlvObject({\n        /**\n         * This field shall be set to true to indicate to the proxy that it shall proxy all nodes. When true, the\n         * SourceList attribute is ignored.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 9.15.13.4.1.1\n         */\n        proxyAllNodes: TlvField(1, TlvBoolean),\n\n        /**\n         * When ProxyAllNodes is false, this list contains the set of Node IDs of sources that this proxy shall\n         * specifically proxy.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 9.15.13.4.1.2\n         */\n        sourceList: TlvField(2, TlvArray(TlvNodeId))\n    });\n\n    /**\n     * @see {@link MatterSpecification.v13.Core} \u00A7 9.15.13.4.1\n     */\n    export interface Configuration extends TypeFromSchema<typeof TlvConfiguration> {}\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster({\n        id: 0x42,\n        name: \"ProxyConfiguration\",\n        revision: 1,\n\n        attributes: {\n            /**\n             * List of proxy configurations. There shall NOT be multiple entries in this list for the same fabric.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 9.15.13.5.1\n             */\n            configurationList: WritableAttribute(0x0, TlvArray(TlvConfiguration), { persistent: true, default: [] })\n        }\n    });\n\n    /**\n     * This cluster provides a means for a proxy-capable device to be told the set of Nodes it shall proxy.\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 9.15.13\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    export const Complete = Cluster;\n}\n\nexport type ProxyConfigurationCluster = ProxyConfiguration.Cluster;\nexport const ProxyConfigurationCluster = ProxyConfiguration.Cluster;\nClusterRegistry.register(ProxyConfiguration.Complete);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,4BAA+B;AAC/B,qBAAkC;AAClC,sBAAyB;AACzB,uBAAoC;AACpC,wBAA2B;AAC3B,oBAA0B;AAG1B,6BAAgC;AAhBhC;AAAA;AAAA;AAAA;AAAA;AAkBO,IAAU;AAAA,CAAV,CAAUA,wBAAV;AAII,EAAMA,oBAAA,uBAAmB,4BAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOtC,mBAAe,2BAAS,GAAG,4BAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQrC,gBAAY,2BAAS,OAAG,0BAAS,uBAAS,CAAC;AAAA,EAC/C,CAAC;AAUM,EAAMA,oBAAA,sBAAkB,sCAAe;AAAA,IAC1C,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,IAEV,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMR,uBAAmB,kCAAkB,OAAK,0BAASA,oBAAA,gBAAgB,GAAG,EAAE,YAAY,MAAM,SAAS,CAAC,EAAE,CAAC;AAAA,IAC3G;AAAA,EACJ,CAAC;AASM,EAAMA,oBAAA,UAAmBA,oBAAA;AACzB,EAAMA,oBAAA,WAAWA,oBAAA;AAAA,GArDX;AAyDV,MAAM,4BAA4B,mBAAmB;AAC5D,uCAAgB,SAAS,mBAAmB,QAAQ;",
  "names": ["ProxyConfiguration"]
}
