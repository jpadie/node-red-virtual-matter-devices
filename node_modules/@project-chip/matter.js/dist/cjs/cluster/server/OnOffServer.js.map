{
  "version": 3,
  "sources": ["../../../../src/cluster/server/OnOffServer.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NotImplementedError } from \"../../common/MatterError.js\";\nimport { WrapCommandHandler } from \"../../device/Device.js\";\nimport { Time, Timer } from \"../../time/Time.js\";\nimport { NamedHandler } from \"../../util/NamedHandler.js\";\nimport { OnOff } from \"../definitions/OnOffCluster.js\";\nimport { AttributeServer } from \"./AttributeServer.js\";\nimport { ClusterServer } from \"./ClusterServer.js\";\nimport { AttributeInitialValues, ClusterServerHandlers } from \"./ClusterServerTypes.js\";\n\nconst Cluster = OnOff.Cluster.with(\"Lighting\");\n\nexport const OnOffClusterDefaultHandler: () => ClusterServerHandlers<typeof Cluster> = () => {\n    let timedOnTimer: Timer | undefined;\n    let delayedOffTimer: Timer | undefined;\n\n    const getTimedOnTimer = (onTime: AttributeServer<number>, onOff: AttributeServer<boolean>) => {\n        if (timedOnTimer === undefined) {\n            timedOnTimer = Time.getPeriodicTimer(\"Delayed on\", 100, () => {\n                let time = onTime.getLocal() ?? 0 - 0.1;\n                if (time <= 0) {\n                    time = 0;\n                    timedOnTimer?.stop();\n                    onOff.setLocal(false); // Timed on state end by turning off\n                }\n                onTime.setLocal(time);\n            });\n        }\n        return timedOnTimer;\n    };\n\n    const getDelayedOffTimer = (offWaitTime: AttributeServer<number>) => {\n        if (delayedOffTimer === undefined) {\n            delayedOffTimer = Time.getTimer(\"Delayed off\", 100, () => {\n                let time = offWaitTime.getLocal() ?? 0 - 0.1;\n                if (time <= 0) {\n                    time = 0;\n                    delayedOffTimer?.stop(); //Delayed off\n                }\n                offWaitTime.setLocal(time);\n            });\n        }\n        return delayedOffTimer;\n    };\n\n    return {\n        initializeClusterServer: ({ attributes: { onOff, startUpOnOff } }) => {\n            const startUpOnOffValue = startUpOnOff?.getLocal() ?? null;\n            if (startUpOnOffValue !== null) {\n                const currentOnOffStatus = onOff.getLocal();\n                const targetOnOffValue =\n                    startUpOnOffValue === OnOff.StartUpOnOff.Toggle\n                        ? !currentOnOffStatus\n                        : startUpOnOffValue === OnOff.StartUpOnOff.On;\n                if (targetOnOffValue !== currentOnOffStatus) {\n                    onOff.setLocal(targetOnOffValue);\n                }\n            }\n        },\n        destroyClusterServer: () => {\n            timedOnTimer?.stop();\n            delayedOffTimer?.stop();\n        },\n        on: async ({ attributes: { onOff } }) => {\n            onOff.setLocal(true);\n        },\n        off: async ({ attributes: { onOff } }) => {\n            onOff.setLocal(false);\n        },\n        toggle: async ({ attributes: { onOff } }) => {\n            if (onOff.getLocal()) {\n                onOff.setLocal(false);\n            } else {\n                onOff.setLocal(true);\n            }\n        },\n        offWithEffect: async () => {\n            throw new NotImplementedError(\"Not implemented\");\n        },\n        onWithRecallGlobalScene: async () => {\n            throw new NotImplementedError(\"Not implemented\");\n        },\n        onWithTimedOff: async ({\n            request: { onOffControl, onTime: reqOnTime, offWaitTime: reqOffWaitTime },\n            attributes: { onOff, onTime, offWaitTime },\n        }) => {\n            if (onTime === undefined || offWaitTime === undefined) return; // Should never happen that this method is called without these attributes\n\n            const timedOnTimer = getTimedOnTimer(onTime, onOff);\n            const delayedOffTimer = getDelayedOffTimer(offWaitTime);\n            const onOffState = onOff.getLocal();\n\n            if (!onOffState && onOffControl.acceptOnlyWhenOn) {\n                return;\n            }\n\n            if (delayedOffTimer.isRunning && !onOffState) {\n                // we are already in \"Delayed off state\" - this means reqOffWaitTime attribute > 0 and the device is off now\n                offWaitTime.setLocal(Math.min(reqOffWaitTime ?? 0, offWaitTime.getLocal() ?? 0));\n                delayedOffTimer.start();\n                timedOnTimer.stop();\n            } else {\n                onTime.setLocal(Math.max(reqOnTime ?? 0, onTime.getLocal() ?? 0));\n                offWaitTime.setLocal(reqOffWaitTime);\n                timedOnTimer.start();\n                delayedOffTimer.stop();\n            }\n        },\n    };\n};\n\nexport const createDefaultOnOffClusterServer = (\n    commandHandler?: NamedHandler<any>,\n    attributeInitialValues?: AttributeInitialValues<typeof OnOff.Complete.attributes>,\n    isLighting = false,\n) => {\n    if (isLighting) {\n        return ClusterServer(\n            OnOff.Cluster.with(OnOff.Feature.Lighting),\n            {\n                onOff: false,\n                globalSceneControl: false,\n                onTime: 0,\n                offWaitTime: 0,\n                startUpOnOff: null,\n                ...attributeInitialValues,\n            },\n            WrapCommandHandler(OnOffClusterDefaultHandler(), commandHandler),\n        );\n    }\n\n    return ClusterServer(\n        OnOff.Cluster,\n        {\n            onOff: false,\n            ...attributeInitialValues,\n        },\n        WrapCommandHandler(\n            OnOffClusterDefaultHandler(),\n            commandHandler,\n        ) as unknown as ClusterServerHandlers<OnOff.Cluster>,\n    );\n};\n"],
  "mappings": "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",
  "names": ["timedOnTimer", "delayedOffTimer"]
}
