{
  "version": 3,
  "sources": ["../../../../src/cluster/globals/Semtag.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { TlvField, TlvOptionalField, TlvObject } from \"../../tlv/TlvObject.js\";\nimport { TlvVendorId } from \"../../datatype/VendorId.js\";\nimport { TlvNullable } from \"../../tlv/TlvNullable.js\";\nimport { TlvUInt8 } from \"../../tlv/TlvNumber.js\";\nimport { TlvString } from \"../../tlv/TlvString.js\";\nimport { TypeFromSchema } from \"../../tlv/TlvSchema.js\";\n\n/**\n * Semantic Tag\n *\n * This data type shall be represented by the following structure:\n *\n * @see {@link MatterSpecification.v13.Core} \u00A7 7.18.2.42\n */\nexport const TlvSemtag = TlvObject({\n    /**\n     * If the MfgCode field is not null, it shall be the Vendor ID of the manufacturer who has defined a certain\n     * namespace and the NamespaceID field shall be the ID of a namespace defined by the manufacturer identified in the\n     * MfgCode field.\n     *\n     * If a manufacturer specific Tag field is indicated in a list of SemanticTagStruct entries, the list shall include\n     * at least one standard tag which is not from any manufacturer\u2019s namespace. A standard tag is a tag from a common\n     * namespace, a derived cluster namespace, or an applicable device-specific namespace.\n     *\n     * If MfgCode is null, the NamespaceID field shall indicate a standard namespace.\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 7.18.2.42.1\n     */\n    mfgCode: TlvField(0, TlvNullable(TlvVendorId)),\n\n    /**\n     * The NamespaceID field shall identify a namespace.\n     *\n     * The common and device-specific semantic tag namespaces are listed in StandardNamespaces.\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 7.18.2.42.2\n     */\n    namespaceId: TlvField(1, TlvUInt8),\n\n    /**\n     * The Tag field shall be the ID of a semantic tag located within the namespace indicated by NamespaceID.\n     *\n     * A device may expose tags from the common or device-specific namespaces and from manufacturer-specific namespaces\n     * in a single TagList.\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 7.18.2.42.3\n     */\n    tag: TlvField(2, TlvUInt8),\n\n    /**\n     * The Label field, if present, shall contain human-readable text suitable for display on a client. The content of\n     * the Label field is defined by the manufacturer.\n     *\n     * This field shall be present when the MfgCode is not null. This field SHOULD NOT be used if the Tag is from a\n     * standard namespace, unless the Tag requires further qualification. For example: A Tag that has the meaning of\n     * \"room\" in a location namespace, would require the a label string to qualify the type of room, such as \"1\", \"2b\",\n     * \"Bathroom\", etc.\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 7.18.2.42.4\n     */\n    label: TlvOptionalField(3, TlvNullable(TlvString.bound({ maxLength: 64 })))\n})\n\n/**\n * Semantic Tag\n *\n * This data type shall be represented by the following structure:\n *\n * @see {@link MatterSpecification.v13.Core} \u00A7 7.18.2.42\n */\nexport interface Semtag extends TypeFromSchema<typeof TlvSemtag> {}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,uBAAsD;AACtD,sBAA4B;AAC5B,yBAA4B;AAC5B,uBAAyB;AACzB,uBAA0B;AAZ1B;AAAA;AAAA;AAAA;AAAA;AAsBO,MAAM,gBAAY,4BAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAc/B,aAAS,2BAAS,OAAG,gCAAY,2BAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS7C,iBAAa,2BAAS,GAAG,yBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUjC,SAAK,2BAAS,GAAG,yBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAazB,WAAO,mCAAiB,OAAG,gCAAY,2BAAU,MAAM,EAAE,WAAW,GAAG,CAAC,CAAC,CAAC;AAC9E,CAAC;",
  "names": []
}
