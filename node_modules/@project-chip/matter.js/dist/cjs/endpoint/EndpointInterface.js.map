{
  "version": 3,
  "sources": ["../../../src/endpoint/EndpointInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ClusterType } from \"../cluster/ClusterType.js\";\nimport { ClusterClientObj } from \"../cluster/client/ClusterClientTypes.js\";\nimport { ClusterServer } from \"../cluster/server/ClusterServer.js\";\nimport { ClusterId } from \"../datatype/ClusterId.js\";\nimport { DeviceTypeId } from \"../datatype/DeviceTypeId.js\";\nimport { EndpointNumber } from \"../datatype/EndpointNumber.js\";\n\n/**\n * The primary interface for Matter.js endpoint implementations.\n *\n * TODO - this is a transitional interface that allows us to have multiple implementations of the legacy endpoint API\n */\nexport interface EndpointInterface {\n    name: string;\n    number: EndpointNumber | undefined;\n    deviceType: DeviceTypeId;\n    getNumber(): EndpointNumber;\n    removeFromStructure(): void;\n    updatePartsList(): EndpointNumber[];\n    getChildEndpoints(): EndpointInterface[];\n    determineUniqueID(): string | undefined;\n    verifyRequiredClusters(): void;\n    close(): void;\n    setStructureChangedCallback(callback: () => void): void;\n\n    addClusterServer(server: ClusterServer): void;\n    hasClusterServer(cluster: ClusterType): boolean;\n    getClusterServer<T extends ClusterType>(cluster: T): ClusterServer<T> | undefined;\n    getClusterServerById(clusterId: ClusterId): ClusterServer | undefined;\n    getAllClusterServers(): ClusterServer[];\n\n    addClusterClient(client: ClusterClientObj): void;\n    getClusterClient<const T extends ClusterType>(cluster: T): ClusterClientObj<T> | undefined;\n    getAllClusterClients(): ClusterClientObj[];\n\n    addChildEndpoint(endpoint: EndpointInterface): void;\n    getChildEndpoint(id: EndpointNumber): EndpointInterface | undefined;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
