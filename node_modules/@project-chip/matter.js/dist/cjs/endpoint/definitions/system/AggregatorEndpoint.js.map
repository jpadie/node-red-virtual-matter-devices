{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/system/AggregatorEndpoint.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { PartsBehavior } from \"../../../behavior/system/parts/PartsBehavior.js\";\nimport { IndexBehavior } from \"../../../behavior/system/index/IndexBehavior.js\";\nimport { ActionsServer as BaseActionsServer } from \"../../../behavior/definitions/actions/ActionsServer.js\";\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * This device type aggregates endpoints as a collection. Clusters on the endpoint indicating this device type provide\n * functionality for the collection of descendent endpoints present in the PartsList of the endpoint\u2019s descriptor, for\n * example the Actions cluster.\n *\n * The purpose of this device type is to aggregate functionality for a collection of endpoints. The definition of the\n * collection or functionality is not defined here.\n *\n * When using this device type as a collection of bridged nodes, please see the \"Bridge\" section in the System Model\n * specification.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 11.2\n */\nexport interface AggregatorEndpoint extends Identity<typeof AggregatorEndpointDefinition> {}\n\nexport namespace AggregatorRequirements {\n    /**\n     * The Actions cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ActionsServer} for convenience.\n     */\n    export const ActionsServer = BaseActionsServer;\n\n    /**\n     * The Identify cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = {\n        mandatory: { Parts: PartsBehavior, Index: IndexBehavior },\n        optional: { Actions: ActionsServer, Identify: IdentifyServer }\n    };\n}\n\nexport const AggregatorEndpointDefinition = MutableEndpoint({\n    name: \"Aggregator\",\n    deviceType: 0xe,\n    deviceRevision: 1,\n    requirements: AggregatorRequirements,\n    behaviors: SupportedBehaviors(\n        AggregatorRequirements.server.mandatory.Parts,\n        AggregatorRequirements.server.mandatory.Index\n    )\n});\n\nexport const AggregatorEndpoint: AggregatorEndpoint = AggregatorEndpointDefinition;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,2BAA8B;AAC9B,2BAA8B;AAC9B,2BAAmD;AACnD,4BAAqD;AACrD,6BAAgC;AAChC,gCAAmC;AAbnC;AAAA;AAAA;AAAA;AAAA;AA+BO,IAAU;AAAA,CAAV,CAAUA,4BAAV;AAMI,EAAMA,wBAAA,gBAAgB,qBAAAC;AAOtB,EAAMD,wBAAA,iBAAiB,sBAAAE;AAKvB,EAAMF,wBAAA,SAAS;AAAA,IAClB,WAAW,EAAE,OAAO,oCAAe,OAAO,mCAAc;AAAA,IACxD,UAAU,EAAE,SAASA,wBAAA,eAAe,UAAUA,wBAAA,eAAe;AAAA,EACjE;AAAA,GArBa;AAwBV,MAAM,mCAA+B,wCAAgB;AAAA,EACxD,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAW;AAAA,IACP,uBAAuB,OAAO,UAAU;AAAA,IACxC,uBAAuB,OAAO,UAAU;AAAA,EAC5C;AACJ,CAAC;AAEM,MAAM,qBAAyC;",
  "names": ["AggregatorRequirements", "BaseActionsServer", "BaseIdentifyServer"]
}
