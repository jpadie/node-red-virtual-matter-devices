{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/system/OtaProviderEndpoint.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport {\n    OtaSoftwareUpdateProviderServer as BaseOtaSoftwareUpdateProviderServer\n} from \"../../../behavior/definitions/ota-software-update-provider/OtaSoftwareUpdateProviderServer.js\";\nimport {\n    OtaSoftwareUpdateRequestorBehavior as BaseOtaSoftwareUpdateRequestorBehavior\n} from \"../../../behavior/definitions/ota-software-update-requestor/OtaSoftwareUpdateRequestorBehavior.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { DeviceClasses } from \"../../../device/DeviceTypes.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * An OTA Provider is a node that is capable of providing an OTA software update to other nodes on the same fabric.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 2.4\n */\nexport interface OtaProviderEndpoint extends Identity<typeof OtaProviderEndpointDefinition> {}\n\nexport namespace OtaProviderRequirements {\n    /**\n     * The OtaSoftwareUpdateProvider cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link OtaSoftwareUpdateProviderServer} for convenience.\n     */\n    export const OtaSoftwareUpdateProviderServer = BaseOtaSoftwareUpdateProviderServer;\n\n    /**\n     * The OtaSoftwareUpdateRequestor cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link OtaSoftwareUpdateRequestorBehavior} for convenience.\n     */\n    export const OtaSoftwareUpdateRequestorBehavior = BaseOtaSoftwareUpdateRequestorBehavior;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = { mandatory: { OtaSoftwareUpdateProvider: OtaSoftwareUpdateProviderServer } };\n\n    /**\n     * A definition for each client cluster supported by the endpoint per the Matter specification.\n     */\n    export const client = {\n        optional: { OtaSoftwareUpdateRequestor: OtaSoftwareUpdateRequestorBehavior },\n        mandatory: {}\n    };\n}\n\nexport const OtaProviderEndpointDefinition = MutableEndpoint({\n    name: \"OtaProvider\",\n    deviceType: 0x14,\n    deviceRevision: 1,\n    deviceClass: DeviceClasses.Utility,\n    requirements: OtaProviderRequirements,\n    behaviors: SupportedBehaviors(OtaProviderRequirements.server.mandatory.OtaSoftwareUpdateProvider)\n});\n\nexport const OtaProviderEndpoint: OtaProviderEndpoint = OtaProviderEndpointDefinition;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,6CAEO;AACP,gDAEO;AACP,6BAAgC;AAChC,yBAA8B;AAC9B,gCAAmC;AAhBnC;AAAA;AAAA;AAAA;AAAA;AA0BO,IAAU;AAAA,CAAV,CAAUA,6BAAV;AAMI,EAAMA,yBAAA,kCAAkC,uCAAAC;AAOxC,EAAMD,yBAAA,qCAAqC,0CAAAE;AAK3C,EAAMF,yBAAA,SAAS,EAAE,WAAW,EAAE,2BAA2BA,yBAAA,gCAAgC,EAAE;AAK3F,EAAMA,yBAAA,SAAS;AAAA,IAClB,UAAU,EAAE,4BAA4BA,yBAAA,mCAAmC;AAAA,IAC3E,WAAW,CAAC;AAAA,EAChB;AAAA,GA1Ba;AA6BV,MAAM,oCAAgC,wCAAgB;AAAA,EACzD,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,aAAa,iCAAc;AAAA,EAC3B,cAAc;AAAA,EACd,eAAW,8CAAmB,wBAAwB,OAAO,UAAU,yBAAyB;AACpG,CAAC;AAEM,MAAM,sBAA2C;",
  "names": ["OtaProviderRequirements", "BaseOtaSoftwareUpdateProviderServer", "BaseOtaSoftwareUpdateRequestorBehavior"]
}
