{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/LightSensorDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport {\n    IlluminanceMeasurementServer as BaseIlluminanceMeasurementServer\n} from \"../../../behavior/definitions/illuminance-measurement/IlluminanceMeasurementServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * A Light Sensor device is a measurement and sensing device that is capable of measuring and reporting the intensity\n * of light (illuminance) to which the sensor is being subjected.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 7.2\n */\nexport interface LightSensorDevice extends Identity<typeof LightSensorDeviceDefinition> {}\n\nexport namespace LightSensorRequirements {\n    /**\n     * The Identify cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * The IlluminanceMeasurement cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IlluminanceMeasurementServer} for convenience.\n     */\n    export const IlluminanceMeasurementServer = BaseIlluminanceMeasurementServer;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = { mandatory: { Identify: IdentifyServer, IlluminanceMeasurement: IlluminanceMeasurementServer } };\n}\n\nexport const LightSensorDeviceDefinition = MutableEndpoint({\n    name: \"LightSensor\",\n    deviceType: 0x106,\n    deviceRevision: 3,\n    requirements: LightSensorRequirements,\n    behaviors: SupportedBehaviors(\n        LightSensorRequirements.server.mandatory.Identify,\n        LightSensorRequirements.server.mandatory.IlluminanceMeasurement\n    )\n});\n\nexport const LightSensorDevice: LightSensorDevice = LightSensorDeviceDefinition;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,4BAAqD;AACrD,0CAEO;AACP,6BAAgC;AAChC,gCAAmC;AAbnC;AAAA;AAAA;AAAA;AAAA;AAwBO,IAAU;AAAA,CAAV,CAAUA,6BAAV;AAMI,EAAMA,yBAAA,iBAAiB,sBAAAC;AAOvB,EAAMD,yBAAA,+BAA+B,oCAAAE;AAKrC,EAAMF,yBAAA,SAAS,EAAE,WAAW,EAAE,UAAUA,yBAAA,gBAAgB,wBAAwBA,yBAAA,6BAA6B,EAAE;AAAA,GAlBzG;AAqBV,MAAM,kCAA8B,wCAAgB;AAAA,EACvD,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAW;AAAA,IACP,wBAAwB,OAAO,UAAU;AAAA,IACzC,wBAAwB,OAAO,UAAU;AAAA,EAC7C;AACJ,CAAC;AAEM,MAAM,oBAAuC;",
  "names": ["LightSensorRequirements", "BaseIdentifyServer", "BaseIlluminanceMeasurementServer"]
}
