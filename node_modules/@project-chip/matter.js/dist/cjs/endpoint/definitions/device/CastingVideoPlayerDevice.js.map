{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/CastingVideoPlayerDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { OnOffServer as BaseOnOffServer } from \"../../../behavior/definitions/on-off/OnOffServer.js\";\nimport {\n    MediaPlaybackServer as BaseMediaPlaybackServer\n} from \"../../../behavior/definitions/media-playback/MediaPlaybackServer.js\";\nimport {\n    KeypadInputServer as BaseKeypadInputServer\n} from \"../../../behavior/definitions/keypad-input/KeypadInputServer.js\";\nimport {\n    ContentLauncherServer as BaseContentLauncherServer\n} from \"../../../behavior/definitions/content-launcher/ContentLauncherServer.js\";\nimport { WakeOnLanServer as BaseWakeOnLanServer } from \"../../../behavior/definitions/wake-on-lan/WakeOnLanServer.js\";\nimport { ChannelServer as BaseChannelServer } from \"../../../behavior/definitions/channel/ChannelServer.js\";\nimport {\n    TargetNavigatorServer as BaseTargetNavigatorServer\n} from \"../../../behavior/definitions/target-navigator/TargetNavigatorServer.js\";\nimport { MediaInputServer as BaseMediaInputServer } from \"../../../behavior/definitions/media-input/MediaInputServer.js\";\nimport { LowPowerServer as BaseLowPowerServer } from \"../../../behavior/definitions/low-power/LowPowerServer.js\";\nimport {\n    AudioOutputServer as BaseAudioOutputServer\n} from \"../../../behavior/definitions/audio-output/AudioOutputServer.js\";\nimport {\n    ApplicationLauncherServer as BaseApplicationLauncherServer\n} from \"../../../behavior/definitions/application-launcher/ApplicationLauncherServer.js\";\nimport {\n    AccountLoginServer as BaseAccountLoginServer\n} from \"../../../behavior/definitions/account-login/AccountLoginServer.js\";\nimport {\n    ContentControlServer as BaseContentControlServer\n} from \"../../../behavior/definitions/content-control/ContentControlServer.js\";\nimport { MessagesServer as BaseMessagesServer } from \"../../../behavior/definitions/messages/MessagesServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * This defines conformance to the Casting Video Player device type.\n *\n * A Video Player (either Basic or Casting) represents a device that is able to play media to a physical output or to a\n * display screen which is part of the device.\n *\n * A Casting Video Player has basic controls for playback (play, pause, etc.) and keypad input (up, down, number\n * input), and is able to launch content.\n *\n * For example, a Casting Video Player can be a smart TV device, a TV Set Top Box, or a content streaming device that\n * provides input to another device like a TV or computer monitor.\n *\n * Please see Video Player Architecture for additional Casting Video Player requirements relating to Video Player\n * device endpoint composition, commissioning, feature representation in clusters, and UI context.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 10.3\n */\nexport interface CastingVideoPlayerDevice extends Identity<typeof CastingVideoPlayerDeviceDefinition> {}\n\nexport namespace CastingVideoPlayerRequirements {\n    /**\n     * The OnOff cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link OnOffServer} for convenience.\n     */\n    export const OnOffServer = BaseOnOffServer;\n\n    /**\n     * The MediaPlayback cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link MediaPlaybackServer} for convenience.\n     */\n    export const MediaPlaybackServer = BaseMediaPlaybackServer;\n\n    /**\n     * The KeypadInput cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link KeypadInputServer} for convenience.\n     */\n    export const KeypadInputServer = BaseKeypadInputServer;\n\n    /**\n     * The ContentLauncher cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ContentLauncherServer} for convenience.\n     */\n    export const ContentLauncherServer = BaseContentLauncherServer;\n\n    /**\n     * The WakeOnLan cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link WakeOnLanServer} for convenience.\n     */\n    export const WakeOnLanServer = BaseWakeOnLanServer;\n\n    /**\n     * The Channel cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ChannelServer} for convenience.\n     */\n    export const ChannelServer = BaseChannelServer;\n\n    /**\n     * The TargetNavigator cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link TargetNavigatorServer} for convenience.\n     */\n    export const TargetNavigatorServer = BaseTargetNavigatorServer;\n\n    /**\n     * The MediaInput cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link MediaInputServer} for convenience.\n     */\n    export const MediaInputServer = BaseMediaInputServer;\n\n    /**\n     * The LowPower cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link LowPowerServer} for convenience.\n     */\n    export const LowPowerServer = BaseLowPowerServer;\n\n    /**\n     * The AudioOutput cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link AudioOutputServer} for convenience.\n     */\n    export const AudioOutputServer = BaseAudioOutputServer;\n\n    /**\n     * The ApplicationLauncher cluster is optional per the Matter specification.\n     *\n     * This version of {@link ApplicationLauncherServer} is specialized per the specification.\n     */\n    export const ApplicationLauncherServer = BaseApplicationLauncherServer.with(\"ApplicationPlatform\");\n\n    /**\n     * The AccountLogin cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link AccountLoginServer} for convenience.\n     */\n    export const AccountLoginServer = BaseAccountLoginServer;\n\n    /**\n     * The ContentControl cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ContentControlServer} for convenience.\n     */\n    export const ContentControlServer = BaseContentControlServer;\n\n    /**\n     * The Messages cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link MessagesServer} for convenience.\n     */\n    export const MessagesServer = BaseMessagesServer;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = {\n        mandatory: {\n            OnOff: OnOffServer,\n            MediaPlayback: MediaPlaybackServer,\n            KeypadInput: KeypadInputServer,\n            ContentLauncher: ContentLauncherServer\n        },\n\n        optional: {\n            WakeOnLan: WakeOnLanServer,\n            Channel: ChannelServer,\n            TargetNavigator: TargetNavigatorServer,\n            MediaInput: MediaInputServer,\n            LowPower: LowPowerServer,\n            AudioOutput: AudioOutputServer,\n            ApplicationLauncher: ApplicationLauncherServer,\n            AccountLogin: AccountLoginServer,\n            ContentControl: ContentControlServer,\n            Messages: MessagesServer\n        }\n    };\n}\n\nexport const CastingVideoPlayerDeviceDefinition = MutableEndpoint({\n    name: \"CastingVideoPlayer\",\n    deviceType: 0x23,\n    deviceRevision: 2,\n    requirements: CastingVideoPlayerRequirements,\n\n    behaviors: SupportedBehaviors(\n        CastingVideoPlayerRequirements.server.mandatory.OnOff,\n        CastingVideoPlayerRequirements.server.mandatory.MediaPlayback,\n        CastingVideoPlayerRequirements.server.mandatory.KeypadInput,\n        CastingVideoPlayerRequirements.server.mandatory.ContentLauncher\n    )\n});\n\nexport const CastingVideoPlayerDevice: CastingVideoPlayerDevice = CastingVideoPlayerDeviceDefinition;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,yBAA+C;AAC/C,iCAEO;AACP,+BAEO;AACP,mCAEO;AACP,6BAAuD;AACvD,2BAAmD;AACnD,mCAEO;AACP,8BAAyD;AACzD,4BAAqD;AACrD,+BAEO;AACP,uCAEO;AACP,gCAEO;AACP,kCAEO;AACP,4BAAqD;AACrD,6BAAgC;AAChC,gCAAmC;AAvCnC;AAAA;AAAA;AAAA;AAAA;AA6DO,IAAU;AAAA,CAAV,CAAUA,oCAAV;AAMI,EAAMA,gCAAA,cAAc,mBAAAC;AAOpB,EAAMD,gCAAA,sBAAsB,2BAAAE;AAO5B,EAAMF,gCAAA,oBAAoB,yBAAAG;AAO1B,EAAMH,gCAAA,wBAAwB,6BAAAI;AAO9B,EAAMJ,gCAAA,kBAAkB,uBAAAK;AAOxB,EAAML,gCAAA,gBAAgB,qBAAAM;AAOtB,EAAMN,gCAAA,wBAAwB,6BAAAO;AAO9B,EAAMP,gCAAA,mBAAmB,wBAAAQ;AAOzB,EAAMR,gCAAA,iBAAiB,sBAAAS;AAOvB,EAAMT,gCAAA,oBAAoB,yBAAAU;AAO1B,EAAMV,gCAAA,4BAA4B,iCAAAW,0BAA8B,KAAK,qBAAqB;AAO1F,EAAMX,gCAAA,qBAAqB,0BAAAY;AAO3B,EAAMZ,gCAAA,uBAAuB,4BAAAa;AAO7B,EAAMb,gCAAA,iBAAiB,sBAAAc;AAKvB,EAAMd,gCAAA,SAAS;AAAA,IAClB,WAAW;AAAA,MACP,OAAOA,gCAAA;AAAA,MACP,eAAeA,gCAAA;AAAA,MACf,aAAaA,gCAAA;AAAA,MACb,iBAAiBA,gCAAA;AAAA,IACrB;AAAA,IAEA,UAAU;AAAA,MACN,WAAWA,gCAAA;AAAA,MACX,SAASA,gCAAA;AAAA,MACT,iBAAiBA,gCAAA;AAAA,MACjB,YAAYA,gCAAA;AAAA,MACZ,UAAUA,gCAAA;AAAA,MACV,aAAaA,gCAAA;AAAA,MACb,qBAAqBA,gCAAA;AAAA,MACrB,cAAcA,gCAAA;AAAA,MACd,gBAAgBA,gCAAA;AAAA,MAChB,UAAUA,gCAAA;AAAA,IACd;AAAA,EACJ;AAAA,GA1Ha;AA6HV,MAAM,yCAAqC,wCAAgB;AAAA,EAC9D,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EAEd,eAAW;AAAA,IACP,+BAA+B,OAAO,UAAU;AAAA,IAChD,+BAA+B,OAAO,UAAU;AAAA,IAChD,+BAA+B,OAAO,UAAU;AAAA,IAChD,+BAA+B,OAAO,UAAU;AAAA,EACpD;AACJ,CAAC;AAEM,MAAM,2BAAqD;",
  "names": ["CastingVideoPlayerRequirements", "BaseOnOffServer", "BaseMediaPlaybackServer", "BaseKeypadInputServer", "BaseContentLauncherServer", "BaseWakeOnLanServer", "BaseChannelServer", "BaseTargetNavigatorServer", "BaseMediaInputServer", "BaseLowPowerServer", "BaseAudioOutputServer", "BaseApplicationLauncherServer", "BaseAccountLoginServer", "BaseContentControlServer", "BaseMessagesServer"]
}
