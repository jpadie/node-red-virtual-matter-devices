{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/DoorLockDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport { DoorLockServer as BaseDoorLockServer } from \"../../../behavior/definitions/door-lock/DoorLockServer.js\";\nimport { GroupsServer as BaseGroupsServer } from \"../../../behavior/definitions/groups/GroupsServer.js\";\nimport {\n    ScenesManagementServer as BaseScenesManagementServer\n} from \"../../../behavior/definitions/scenes-management/ScenesManagementServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * A Door Lock is a device used to secure a door. It is possible to actuate a door lock either by means of a manual or\n * a remote method.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 8.1\n */\nexport interface DoorLockDevice extends Identity<typeof DoorLockDeviceDefinition> {}\n\nexport namespace DoorLockRequirements {\n    /**\n     * The Identify cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * The DoorLock cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link DoorLockServer} for convenience.\n     */\n    export const DoorLockServer = BaseDoorLockServer;\n\n    /**\n     * The Groups cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link GroupsServer} for convenience.\n     */\n    export const GroupsServer = BaseGroupsServer;\n\n    /**\n     * The ScenesManagement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ScenesManagementServer} for convenience.\n     */\n    export const ScenesManagementServer = BaseScenesManagementServer;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = {\n        mandatory: { Identify: IdentifyServer, DoorLock: DoorLockServer },\n        optional: { Groups: GroupsServer, ScenesManagement: ScenesManagementServer }\n    };\n}\n\nexport const DoorLockDeviceDefinition = MutableEndpoint({\n    name: \"DoorLock\",\n    deviceType: 0xa,\n    deviceRevision: 3,\n    requirements: DoorLockRequirements,\n    behaviors: SupportedBehaviors(\n        DoorLockRequirements.server.mandatory.Identify,\n        DoorLockRequirements.server.mandatory.DoorLock\n    )\n});\n\nexport const DoorLockDevice: DoorLockDevice = DoorLockDeviceDefinition;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,4BAAqD;AACrD,4BAAqD;AACrD,0BAAiD;AACjD,oCAEO;AACP,6BAAgC;AAChC,gCAAmC;AAfnC;AAAA;AAAA;AAAA;AAAA;AA0BO,IAAU;AAAA,CAAV,CAAUA,0BAAV;AAMI,EAAMA,sBAAA,iBAAiB,sBAAAC;AAOvB,EAAMD,sBAAA,iBAAiB,sBAAAE;AAOvB,EAAMF,sBAAA,eAAe,oBAAAG;AAOrB,EAAMH,sBAAA,yBAAyB,8BAAAI;AAK/B,EAAMJ,sBAAA,SAAS;AAAA,IAClB,WAAW,EAAE,UAAUA,sBAAA,gBAAgB,UAAUA,sBAAA,eAAe;AAAA,IAChE,UAAU,EAAE,QAAQA,sBAAA,cAAc,kBAAkBA,sBAAA,uBAAuB;AAAA,EAC/E;AAAA,GAnCa;AAsCV,MAAM,+BAA2B,wCAAgB;AAAA,EACpD,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAW;AAAA,IACP,qBAAqB,OAAO,UAAU;AAAA,IACtC,qBAAqB,OAAO,UAAU;AAAA,EAC1C;AACJ,CAAC;AAEM,MAAM,iBAAiC;",
  "names": ["DoorLockRequirements", "BaseIdentifyServer", "BaseDoorLockServer", "BaseGroupsServer", "BaseScenesManagementServer"]
}
