"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var CastingVideoPlayerDevice_exports = {};
__export(CastingVideoPlayerDevice_exports, {
  CastingVideoPlayerDevice: () => CastingVideoPlayerDevice,
  CastingVideoPlayerDeviceDefinition: () => CastingVideoPlayerDeviceDefinition,
  CastingVideoPlayerRequirements: () => CastingVideoPlayerRequirements
});
module.exports = __toCommonJS(CastingVideoPlayerDevice_exports);
var import_OnOffServer = require("../../../behavior/definitions/on-off/OnOffServer.js");
var import_MediaPlaybackServer = require("../../../behavior/definitions/media-playback/MediaPlaybackServer.js");
var import_KeypadInputServer = require("../../../behavior/definitions/keypad-input/KeypadInputServer.js");
var import_ContentLauncherServer = require("../../../behavior/definitions/content-launcher/ContentLauncherServer.js");
var import_WakeOnLanServer = require("../../../behavior/definitions/wake-on-lan/WakeOnLanServer.js");
var import_ChannelServer = require("../../../behavior/definitions/channel/ChannelServer.js");
var import_TargetNavigatorServer = require("../../../behavior/definitions/target-navigator/TargetNavigatorServer.js");
var import_MediaInputServer = require("../../../behavior/definitions/media-input/MediaInputServer.js");
var import_LowPowerServer = require("../../../behavior/definitions/low-power/LowPowerServer.js");
var import_AudioOutputServer = require("../../../behavior/definitions/audio-output/AudioOutputServer.js");
var import_ApplicationLauncherServer = require("../../../behavior/definitions/application-launcher/ApplicationLauncherServer.js");
var import_AccountLoginServer = require("../../../behavior/definitions/account-login/AccountLoginServer.js");
var import_ContentControlServer = require("../../../behavior/definitions/content-control/ContentControlServer.js");
var import_MessagesServer = require("../../../behavior/definitions/messages/MessagesServer.js");
var import_MutableEndpoint = require("../../type/MutableEndpoint.js");
var import_SupportedBehaviors = require("../../properties/SupportedBehaviors.js");
/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var CastingVideoPlayerRequirements;
((CastingVideoPlayerRequirements2) => {
  CastingVideoPlayerRequirements2.OnOffServer = import_OnOffServer.OnOffServer;
  CastingVideoPlayerRequirements2.MediaPlaybackServer = import_MediaPlaybackServer.MediaPlaybackServer;
  CastingVideoPlayerRequirements2.KeypadInputServer = import_KeypadInputServer.KeypadInputServer;
  CastingVideoPlayerRequirements2.ContentLauncherServer = import_ContentLauncherServer.ContentLauncherServer;
  CastingVideoPlayerRequirements2.WakeOnLanServer = import_WakeOnLanServer.WakeOnLanServer;
  CastingVideoPlayerRequirements2.ChannelServer = import_ChannelServer.ChannelServer;
  CastingVideoPlayerRequirements2.TargetNavigatorServer = import_TargetNavigatorServer.TargetNavigatorServer;
  CastingVideoPlayerRequirements2.MediaInputServer = import_MediaInputServer.MediaInputServer;
  CastingVideoPlayerRequirements2.LowPowerServer = import_LowPowerServer.LowPowerServer;
  CastingVideoPlayerRequirements2.AudioOutputServer = import_AudioOutputServer.AudioOutputServer;
  CastingVideoPlayerRequirements2.ApplicationLauncherServer = import_ApplicationLauncherServer.ApplicationLauncherServer.with("ApplicationPlatform");
  CastingVideoPlayerRequirements2.AccountLoginServer = import_AccountLoginServer.AccountLoginServer;
  CastingVideoPlayerRequirements2.ContentControlServer = import_ContentControlServer.ContentControlServer;
  CastingVideoPlayerRequirements2.MessagesServer = import_MessagesServer.MessagesServer;
  CastingVideoPlayerRequirements2.server = {
    mandatory: {
      OnOff: CastingVideoPlayerRequirements2.OnOffServer,
      MediaPlayback: CastingVideoPlayerRequirements2.MediaPlaybackServer,
      KeypadInput: CastingVideoPlayerRequirements2.KeypadInputServer,
      ContentLauncher: CastingVideoPlayerRequirements2.ContentLauncherServer
    },
    optional: {
      WakeOnLan: CastingVideoPlayerRequirements2.WakeOnLanServer,
      Channel: CastingVideoPlayerRequirements2.ChannelServer,
      TargetNavigator: CastingVideoPlayerRequirements2.TargetNavigatorServer,
      MediaInput: CastingVideoPlayerRequirements2.MediaInputServer,
      LowPower: CastingVideoPlayerRequirements2.LowPowerServer,
      AudioOutput: CastingVideoPlayerRequirements2.AudioOutputServer,
      ApplicationLauncher: CastingVideoPlayerRequirements2.ApplicationLauncherServer,
      AccountLogin: CastingVideoPlayerRequirements2.AccountLoginServer,
      ContentControl: CastingVideoPlayerRequirements2.ContentControlServer,
      Messages: CastingVideoPlayerRequirements2.MessagesServer
    }
  };
})(CastingVideoPlayerRequirements || (CastingVideoPlayerRequirements = {}));
const CastingVideoPlayerDeviceDefinition = (0, import_MutableEndpoint.MutableEndpoint)({
  name: "CastingVideoPlayer",
  deviceType: 35,
  deviceRevision: 2,
  requirements: CastingVideoPlayerRequirements,
  behaviors: (0, import_SupportedBehaviors.SupportedBehaviors)(
    CastingVideoPlayerRequirements.server.mandatory.OnOff,
    CastingVideoPlayerRequirements.server.mandatory.MediaPlayback,
    CastingVideoPlayerRequirements.server.mandatory.KeypadInput,
    CastingVideoPlayerRequirements.server.mandatory.ContentLauncher
  )
});
const CastingVideoPlayerDevice = CastingVideoPlayerDeviceDefinition;
//# sourceMappingURL=CastingVideoPlayerDevice.js.map
