{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/LaundryWasherDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport {\n    OperationalStateServer as BaseOperationalStateServer\n} from \"../../../behavior/definitions/operational-state/OperationalStateServer.js\";\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport {\n    LaundryWasherModeServer as BaseLaundryWasherModeServer\n} from \"../../../behavior/definitions/laundry-washer-mode/LaundryWasherModeServer.js\";\nimport { OnOffServer as BaseOnOffServer } from \"../../../behavior/definitions/on-off/OnOffServer.js\";\nimport {\n    LaundryWasherControlsServer as BaseLaundryWasherControlsServer\n} from \"../../../behavior/definitions/laundry-washer-controls/LaundryWasherControlsServer.js\";\nimport {\n    TemperatureControlServer as BaseTemperatureControlServer\n} from \"../../../behavior/definitions/temperature-control/TemperatureControlServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * A Laundry Washer represents a device that is capable of laundering consumer items. Any laundry washer product may\n * utilize this device type.\n *\n * A Laundry Washer shall be composed of at least one endpoint with the Laundry Washer device type.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 13.1\n */\nexport interface LaundryWasherDevice extends Identity<typeof LaundryWasherDeviceDefinition> {}\n\nexport namespace LaundryWasherRequirements {\n    /**\n     * The OperationalState cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link OperationalStateServer} for convenience.\n     */\n    export const OperationalStateServer = BaseOperationalStateServer;\n\n    /**\n     * The Identify cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * The LaundryWasherMode cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link LaundryWasherModeServer} for convenience.\n     */\n    export const LaundryWasherModeServer = BaseLaundryWasherModeServer;\n\n    /**\n     * The OnOff cluster is optional per the Matter specification.\n     *\n     * This version of {@link OnOffServer} is specialized per the specification.\n     */\n    export const OnOffServer = BaseOnOffServer.with(\"DeadFrontBehavior\");\n\n    /**\n     * The LaundryWasherControls cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link LaundryWasherControlsServer} for convenience.\n     */\n    export const LaundryWasherControlsServer = BaseLaundryWasherControlsServer;\n\n    /**\n     * The TemperatureControl cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link TemperatureControlServer} for convenience.\n     */\n    export const TemperatureControlServer = BaseTemperatureControlServer;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = {\n        mandatory: { OperationalState: OperationalStateServer },\n\n        optional: {\n            Identify: IdentifyServer,\n            LaundryWasherMode: LaundryWasherModeServer,\n            OnOff: OnOffServer,\n            LaundryWasherControls: LaundryWasherControlsServer,\n            TemperatureControl: TemperatureControlServer\n        }\n    };\n}\n\nexport const LaundryWasherDeviceDefinition = MutableEndpoint({\n    name: \"LaundryWasher\",\n    deviceType: 0x73,\n    deviceRevision: 1,\n    requirements: LaundryWasherRequirements,\n    behaviors: SupportedBehaviors(LaundryWasherRequirements.server.mandatory.OperationalState)\n});\n\nexport const LaundryWasherDevice: LaundryWasherDevice = LaundryWasherDeviceDefinition;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,oCAEO;AACP,4BAAqD;AACrD,qCAEO;AACP,yBAA+C;AAC/C,yCAEO;AACP,sCAEO;AACP,6BAAgC;AAChC,gCAAmC;AAvBnC;AAAA;AAAA;AAAA;AAAA;AAoCO,IAAU;AAAA,CAAV,CAAUA,+BAAV;AAMI,EAAMA,2BAAA,yBAAyB,8BAAAC;AAO/B,EAAMD,2BAAA,iBAAiB,sBAAAE;AAOvB,EAAMF,2BAAA,0BAA0B,+BAAAG;AAOhC,EAAMH,2BAAA,cAAc,mBAAAI,YAAgB,KAAK,mBAAmB;AAO5D,EAAMJ,2BAAA,8BAA8B,mCAAAK;AAOpC,EAAML,2BAAA,2BAA2B,gCAAAM;AAKjC,EAAMN,2BAAA,SAAS;AAAA,IAClB,WAAW,EAAE,kBAAkBA,2BAAA,uBAAuB;AAAA,IAEtD,UAAU;AAAA,MACN,UAAUA,2BAAA;AAAA,MACV,mBAAmBA,2BAAA;AAAA,MACnB,OAAOA,2BAAA;AAAA,MACP,uBAAuBA,2BAAA;AAAA,MACvB,oBAAoBA,2BAAA;AAAA,IACxB;AAAA,EACJ;AAAA,GAxDa;AA2DV,MAAM,oCAAgC,wCAAgB;AAAA,EACzD,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAW,8CAAmB,0BAA0B,OAAO,UAAU,gBAAgB;AAC7F,CAAC;AAEM,MAAM,sBAA2C;",
  "names": ["LaundryWasherRequirements", "BaseOperationalStateServer", "BaseIdentifyServer", "BaseLaundryWasherModeServer", "BaseOnOffServer", "BaseLaundryWasherControlsServer", "BaseTemperatureControlServer"]
}
