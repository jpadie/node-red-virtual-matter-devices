{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/FanDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport { GroupsServer as BaseGroupsServer } from \"../../../behavior/definitions/groups/GroupsServer.js\";\nimport { FanControlServer as BaseFanControlServer } from \"../../../behavior/definitions/fan-control/FanControlServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * A Fan device is typically standalone or mounted on a ceiling or wall and is used to circulate air in a room.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 9.2\n */\nexport interface FanDevice extends Identity<typeof FanDeviceDefinition> {}\n\nexport namespace FanRequirements {\n    /**\n     * The Identify cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * The Groups cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link GroupsServer} for convenience.\n     */\n    export const GroupsServer = BaseGroupsServer;\n\n    /**\n     * The FanControl cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link FanControlServer} for convenience.\n     */\n    export const FanControlServer = BaseFanControlServer;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = { mandatory: { Identify: IdentifyServer, Groups: GroupsServer, FanControl: FanControlServer } };\n}\n\nexport const FanDeviceDefinition = MutableEndpoint({\n    name: \"Fan\",\n    deviceType: 0x2b,\n    deviceRevision: 2,\n    requirements: FanRequirements,\n    behaviors: SupportedBehaviors(\n        FanRequirements.server.mandatory.Identify,\n        FanRequirements.server.mandatory.Groups,\n        FanRequirements.server.mandatory.FanControl\n    )\n});\n\nexport const FanDevice: FanDevice = FanDeviceDefinition;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,4BAAqD;AACrD,0BAAiD;AACjD,8BAAyD;AACzD,6BAAgC;AAChC,gCAAmC;AAZnC;AAAA;AAAA;AAAA;AAAA;AAsBO,IAAU;AAAA,CAAV,CAAUA,qBAAV;AAMI,EAAMA,iBAAA,iBAAiB,sBAAAC;AAOvB,EAAMD,iBAAA,eAAe,oBAAAE;AAOrB,EAAMF,iBAAA,mBAAmB,wBAAAG;AAKzB,EAAMH,iBAAA,SAAS,EAAE,WAAW,EAAE,UAAUA,iBAAA,gBAAgB,QAAQA,iBAAA,cAAc,YAAYA,iBAAA,iBAAiB,EAAE;AAAA,GAzBvG;AA4BV,MAAM,0BAAsB,wCAAgB;AAAA,EAC/C,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAW;AAAA,IACP,gBAAgB,OAAO,UAAU;AAAA,IACjC,gBAAgB,OAAO,UAAU;AAAA,IACjC,gBAAgB,OAAO,UAAU;AAAA,EACrC;AACJ,CAAC;AAEM,MAAM,YAAuB;",
  "names": ["FanRequirements", "BaseIdentifyServer", "BaseGroupsServer", "BaseFanControlServer"]
}
