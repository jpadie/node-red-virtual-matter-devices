{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/GenericSwitchDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport { SwitchServer as BaseSwitchServer } from \"../../../behavior/definitions/switch/SwitchServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * This defines conformance for the Generic Switch device type.\n *\n * GenericSwitchDevice requires Switch cluster but Switch is not added by default because you must select the features\n * your device supports. You can add manually using GenericSwitchDevice.with().\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 6.6\n */\nexport interface GenericSwitchDevice extends Identity<typeof GenericSwitchDeviceDefinition> {}\n\nexport namespace GenericSwitchRequirements {\n    /**\n     * The Identify cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * The Switch cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link SwitchServer} for convenience.\n     */\n    export const SwitchServer = BaseSwitchServer;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = { mandatory: { Identify: IdentifyServer, Switch: SwitchServer } };\n}\n\nexport const GenericSwitchDeviceDefinition = MutableEndpoint({\n    name: \"GenericSwitch\",\n    deviceType: 0xf,\n    deviceRevision: 3,\n    requirements: GenericSwitchRequirements,\n    behaviors: SupportedBehaviors(GenericSwitchRequirements.server.mandatory.Identify)\n});\n\nexport const GenericSwitchDevice: GenericSwitchDevice = GenericSwitchDeviceDefinition;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,4BAAqD;AACrD,0BAAiD;AACjD,6BAAgC;AAChC,gCAAmC;AAXnC;AAAA;AAAA;AAAA;AAAA;AAwBO,IAAU;AAAA,CAAV,CAAUA,+BAAV;AAMI,EAAMA,2BAAA,iBAAiB,sBAAAC;AAOvB,EAAMD,2BAAA,eAAe,oBAAAE;AAKrB,EAAMF,2BAAA,SAAS,EAAE,WAAW,EAAE,UAAUA,2BAAA,gBAAgB,QAAQA,2BAAA,aAAa,EAAE;AAAA,GAlBzE;AAqBV,MAAM,oCAAgC,wCAAgB;AAAA,EACzD,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAW,8CAAmB,0BAA0B,OAAO,UAAU,QAAQ;AACrF,CAAC;AAEM,MAAM,sBAA2C;",
  "names": ["GenericSwitchRequirements", "BaseIdentifyServer", "BaseSwitchServer"]
}
