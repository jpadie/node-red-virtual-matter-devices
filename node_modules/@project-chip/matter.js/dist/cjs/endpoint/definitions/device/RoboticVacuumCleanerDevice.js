"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var RoboticVacuumCleanerDevice_exports = {};
__export(RoboticVacuumCleanerDevice_exports, {
  RoboticVacuumCleanerDevice: () => RoboticVacuumCleanerDevice,
  RoboticVacuumCleanerDeviceDefinition: () => RoboticVacuumCleanerDeviceDefinition,
  RoboticVacuumCleanerRequirements: () => RoboticVacuumCleanerRequirements
});
module.exports = __toCommonJS(RoboticVacuumCleanerDevice_exports);
var import_IdentifyServer = require("../../../behavior/definitions/identify/IdentifyServer.js");
var import_RvcRunModeServer = require("../../../behavior/definitions/rvc-run-mode/RvcRunModeServer.js");
var import_RvcOperationalStateServer = require("../../../behavior/definitions/rvc-operational-state/RvcOperationalStateServer.js");
var import_RvcCleanModeServer = require("../../../behavior/definitions/rvc-clean-mode/RvcCleanModeServer.js");
var import_MutableEndpoint = require("../../type/MutableEndpoint.js");
var import_SupportedBehaviors = require("../../properties/SupportedBehaviors.js");
/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var RoboticVacuumCleanerRequirements;
((RoboticVacuumCleanerRequirements2) => {
  RoboticVacuumCleanerRequirements2.IdentifyServer = import_IdentifyServer.IdentifyServer;
  RoboticVacuumCleanerRequirements2.RvcRunModeServer = import_RvcRunModeServer.RvcRunModeServer;
  RoboticVacuumCleanerRequirements2.RvcOperationalStateServer = import_RvcOperationalStateServer.RvcOperationalStateServer;
  RoboticVacuumCleanerRequirements2.RvcCleanModeServer = import_RvcCleanModeServer.RvcCleanModeServer;
  RoboticVacuumCleanerRequirements2.server = {
    mandatory: {
      Identify: RoboticVacuumCleanerRequirements2.IdentifyServer,
      RvcRunMode: RoboticVacuumCleanerRequirements2.RvcRunModeServer,
      RvcOperationalState: RoboticVacuumCleanerRequirements2.RvcOperationalStateServer
    },
    optional: { RvcCleanMode: RoboticVacuumCleanerRequirements2.RvcCleanModeServer }
  };
})(RoboticVacuumCleanerRequirements || (RoboticVacuumCleanerRequirements = {}));
const RoboticVacuumCleanerDeviceDefinition = (0, import_MutableEndpoint.MutableEndpoint)({
  name: "RoboticVacuumCleaner",
  deviceType: 116,
  deviceRevision: 2,
  requirements: RoboticVacuumCleanerRequirements,
  behaviors: (0, import_SupportedBehaviors.SupportedBehaviors)(
    RoboticVacuumCleanerRequirements.server.mandatory.Identify,
    RoboticVacuumCleanerRequirements.server.mandatory.RvcRunMode,
    RoboticVacuumCleanerRequirements.server.mandatory.RvcOperationalState
  )
});
const RoboticVacuumCleanerDevice = RoboticVacuumCleanerDeviceDefinition;
//# sourceMappingURL=RoboticVacuumCleanerDevice.js.map
