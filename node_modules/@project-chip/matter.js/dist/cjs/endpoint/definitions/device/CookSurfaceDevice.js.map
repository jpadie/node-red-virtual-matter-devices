{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/CookSurfaceDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport {\n    TemperatureControlServer as BaseTemperatureControlServer\n} from \"../../../behavior/definitions/temperature-control/TemperatureControlServer.js\";\nimport {\n    TemperatureMeasurementServer as BaseTemperatureMeasurementServer\n} from \"../../../behavior/definitions/temperature-measurement/TemperatureMeasurementServer.js\";\nimport { OnOffServer as BaseOnOffServer } from \"../../../behavior/definitions/on-off/OnOffServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * A Cook Surface device type represents a heating object on a cooktop or other similar device. It shall only be used\n * when composed as part of another device type.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 13.7\n */\nexport interface CookSurfaceDevice extends Identity<typeof CookSurfaceDeviceDefinition> {}\n\nexport namespace CookSurfaceRequirements {\n    /**\n     * The TemperatureControl cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link TemperatureControlServer} for convenience.\n     */\n    export const TemperatureControlServer = BaseTemperatureControlServer;\n\n    /**\n     * The TemperatureMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link TemperatureMeasurementServer} for convenience.\n     */\n    export const TemperatureMeasurementServer = BaseTemperatureMeasurementServer;\n\n    /**\n     * The OnOff cluster is optional per the Matter specification.\n     *\n     * This version of {@link OnOffServer} is specialized per the specification.\n     */\n    export const OnOffServer = BaseOnOffServer.with(\"OffOnly\");\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = {\n        optional: {\n            TemperatureControl: TemperatureControlServer,\n            TemperatureMeasurement: TemperatureMeasurementServer,\n            OnOff: OnOffServer\n        },\n        mandatory: {}\n    };\n}\n\nexport const CookSurfaceDeviceDefinition = MutableEndpoint({\n    name: \"CookSurface\",\n    deviceType: 0x77,\n    deviceRevision: 1,\n    requirements: CookSurfaceRequirements,\n    behaviors: SupportedBehaviors()\n});\n\nexport const CookSurfaceDevice: CookSurfaceDevice = CookSurfaceDeviceDefinition;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,sCAEO;AACP,0CAEO;AACP,yBAA+C;AAC/C,6BAAgC;AAChC,gCAAmC;AAhBnC;AAAA;AAAA;AAAA;AAAA;AA2BO,IAAU;AAAA,CAAV,CAAUA,6BAAV;AAMI,EAAMA,yBAAA,2BAA2B,gCAAAC;AAOjC,EAAMD,yBAAA,+BAA+B,oCAAAE;AAOrC,EAAMF,yBAAA,cAAc,mBAAAG,YAAgB,KAAK,SAAS;AAKlD,EAAMH,yBAAA,SAAS;AAAA,IAClB,UAAU;AAAA,MACN,oBAAoBA,yBAAA;AAAA,MACpB,wBAAwBA,yBAAA;AAAA,MACxB,OAAOA,yBAAA;AAAA,IACX;AAAA,IACA,WAAW,CAAC;AAAA,EAChB;AAAA,GAhCa;AAmCV,MAAM,kCAA8B,wCAAgB;AAAA,EACvD,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAW,8CAAmB;AAClC,CAAC;AAEM,MAAM,oBAAuC;",
  "names": ["CookSurfaceRequirements", "BaseTemperatureControlServer", "BaseTemperatureMeasurementServer", "BaseOnOffServer"]
}
