{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/HumiditySensorDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport {\n    RelativeHumidityMeasurementServer as BaseRelativeHumidityMeasurementServer\n} from \"../../../behavior/definitions/relative-humidity-measurement/RelativeHumidityMeasurementServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * A humidity sensor (in most cases a Relative humidity sensor) reports humidity measurements.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 7.7\n */\nexport interface HumiditySensorDevice extends Identity<typeof HumiditySensorDeviceDefinition> {}\n\nexport namespace HumiditySensorRequirements {\n    /**\n     * The Identify cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * The RelativeHumidityMeasurement cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link RelativeHumidityMeasurementServer} for convenience.\n     */\n    export const RelativeHumidityMeasurementServer = BaseRelativeHumidityMeasurementServer;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = {\n        mandatory: { Identify: IdentifyServer, RelativeHumidityMeasurement: RelativeHumidityMeasurementServer }\n    };\n}\n\nexport const HumiditySensorDeviceDefinition = MutableEndpoint({\n    name: \"HumiditySensor\",\n    deviceType: 0x307,\n    deviceRevision: 2,\n    requirements: HumiditySensorRequirements,\n    behaviors: SupportedBehaviors(\n        HumiditySensorRequirements.server.mandatory.Identify,\n        HumiditySensorRequirements.server.mandatory.RelativeHumidityMeasurement\n    )\n});\n\nexport const HumiditySensorDevice: HumiditySensorDevice = HumiditySensorDeviceDefinition;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,4BAAqD;AACrD,+CAEO;AACP,6BAAgC;AAChC,gCAAmC;AAbnC;AAAA;AAAA;AAAA;AAAA;AAuBO,IAAU;AAAA,CAAV,CAAUA,gCAAV;AAMI,EAAMA,4BAAA,iBAAiB,sBAAAC;AAOvB,EAAMD,4BAAA,oCAAoC,yCAAAE;AAK1C,EAAMF,4BAAA,SAAS;AAAA,IAClB,WAAW,EAAE,UAAUA,4BAAA,gBAAgB,6BAA6BA,4BAAA,kCAAkC;AAAA,EAC1G;AAAA,GApBa;AAuBV,MAAM,qCAAiC,wCAAgB;AAAA,EAC1D,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAW;AAAA,IACP,2BAA2B,OAAO,UAAU;AAAA,IAC5C,2BAA2B,OAAO,UAAU;AAAA,EAChD;AACJ,CAAC;AAEM,MAAM,uBAA6C;",
  "names": ["HumiditySensorRequirements", "BaseIdentifyServer", "BaseRelativeHumidityMeasurementServer"]
}
