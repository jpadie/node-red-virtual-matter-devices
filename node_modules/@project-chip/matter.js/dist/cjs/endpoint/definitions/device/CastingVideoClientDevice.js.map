{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/CastingVideoClientDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport {\n    ContentAppObserverServer as BaseContentAppObserverServer\n} from \"../../../behavior/definitions/content-app-observer/ContentAppObserverServer.js\";\nimport { OnOffBehavior as BaseOnOffBehavior } from \"../../../behavior/definitions/on-off/OnOffBehavior.js\";\nimport {\n    KeypadInputBehavior as BaseKeypadInputBehavior\n} from \"../../../behavior/definitions/keypad-input/KeypadInputBehavior.js\";\nimport {\n    ContentLauncherBehavior as BaseContentLauncherBehavior\n} from \"../../../behavior/definitions/content-launcher/ContentLauncherBehavior.js\";\nimport {\n    ApplicationBasicBehavior as BaseApplicationBasicBehavior\n} from \"../../../behavior/definitions/application-basic/ApplicationBasicBehavior.js\";\nimport {\n    LevelControlBehavior as BaseLevelControlBehavior\n} from \"../../../behavior/definitions/level-control/LevelControlBehavior.js\";\nimport { WakeOnLanBehavior as BaseWakeOnLanBehavior } from \"../../../behavior/definitions/wake-on-lan/WakeOnLanBehavior.js\";\nimport { ChannelBehavior as BaseChannelBehavior } from \"../../../behavior/definitions/channel/ChannelBehavior.js\";\nimport {\n    TargetNavigatorBehavior as BaseTargetNavigatorBehavior\n} from \"../../../behavior/definitions/target-navigator/TargetNavigatorBehavior.js\";\nimport {\n    MediaPlaybackBehavior as BaseMediaPlaybackBehavior\n} from \"../../../behavior/definitions/media-playback/MediaPlaybackBehavior.js\";\nimport {\n    MediaInputBehavior as BaseMediaInputBehavior\n} from \"../../../behavior/definitions/media-input/MediaInputBehavior.js\";\nimport { LowPowerBehavior as BaseLowPowerBehavior } from \"../../../behavior/definitions/low-power/LowPowerBehavior.js\";\nimport {\n    AudioOutputBehavior as BaseAudioOutputBehavior\n} from \"../../../behavior/definitions/audio-output/AudioOutputBehavior.js\";\nimport {\n    ApplicationLauncherBehavior as BaseApplicationLauncherBehavior\n} from \"../../../behavior/definitions/application-launcher/ApplicationLauncherBehavior.js\";\nimport {\n    AccountLoginBehavior as BaseAccountLoginBehavior\n} from \"../../../behavior/definitions/account-login/AccountLoginBehavior.js\";\nimport {\n    ContentControlBehavior as BaseContentControlBehavior\n} from \"../../../behavior/definitions/content-control/ContentControlBehavior.js\";\nimport { MessagesBehavior as BaseMessagesBehavior } from \"../../../behavior/definitions/messages/MessagesBehavior.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * This defines conformance to the Casting Video Client device type.\n *\n * A Casting Video Client is a client that can launch content on a Casting Video Player, for example, a Smart Speaker\n * or a Content Provider phone app.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 10.6\n */\nexport interface CastingVideoClientDevice extends Identity<typeof CastingVideoClientDeviceDefinition> {}\n\nexport namespace CastingVideoClientRequirements {\n    /**\n     * The ContentAppObserver cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ContentAppObserverServer} for convenience.\n     */\n    export const ContentAppObserverServer = BaseContentAppObserverServer;\n\n    /**\n     * The OnOff cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link OnOffBehavior} for convenience.\n     */\n    export const OnOffBehavior = BaseOnOffBehavior;\n\n    /**\n     * The KeypadInput cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link KeypadInputBehavior} for convenience.\n     */\n    export const KeypadInputBehavior = BaseKeypadInputBehavior;\n\n    /**\n     * The ContentLauncher cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ContentLauncherBehavior} for convenience.\n     */\n    export const ContentLauncherBehavior = BaseContentLauncherBehavior;\n\n    /**\n     * The ApplicationBasic cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ApplicationBasicBehavior} for convenience.\n     */\n    export const ApplicationBasicBehavior = BaseApplicationBasicBehavior;\n\n    /**\n     * The LevelControl cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link LevelControlBehavior} for convenience.\n     */\n    export const LevelControlBehavior = BaseLevelControlBehavior;\n\n    /**\n     * The WakeOnLan cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link WakeOnLanBehavior} for convenience.\n     */\n    export const WakeOnLanBehavior = BaseWakeOnLanBehavior;\n\n    /**\n     * The Channel cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ChannelBehavior} for convenience.\n     */\n    export const ChannelBehavior = BaseChannelBehavior;\n\n    /**\n     * The TargetNavigator cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link TargetNavigatorBehavior} for convenience.\n     */\n    export const TargetNavigatorBehavior = BaseTargetNavigatorBehavior;\n\n    /**\n     * The MediaPlayback cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link MediaPlaybackBehavior} for convenience.\n     */\n    export const MediaPlaybackBehavior = BaseMediaPlaybackBehavior;\n\n    /**\n     * The MediaInput cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link MediaInputBehavior} for convenience.\n     */\n    export const MediaInputBehavior = BaseMediaInputBehavior;\n\n    /**\n     * The LowPower cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link LowPowerBehavior} for convenience.\n     */\n    export const LowPowerBehavior = BaseLowPowerBehavior;\n\n    /**\n     * The AudioOutput cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link AudioOutputBehavior} for convenience.\n     */\n    export const AudioOutputBehavior = BaseAudioOutputBehavior;\n\n    /**\n     * The ApplicationLauncher cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ApplicationLauncherBehavior} for convenience.\n     */\n    export const ApplicationLauncherBehavior = BaseApplicationLauncherBehavior;\n\n    /**\n     * The AccountLogin cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link AccountLoginBehavior} for convenience.\n     */\n    export const AccountLoginBehavior = BaseAccountLoginBehavior;\n\n    /**\n     * The ContentControl cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ContentControlBehavior} for convenience.\n     */\n    export const ContentControlBehavior = BaseContentControlBehavior;\n\n    /**\n     * The Messages cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link MessagesBehavior} for convenience.\n     */\n    export const MessagesBehavior = BaseMessagesBehavior;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = { optional: { ContentAppObserver: ContentAppObserverServer }, mandatory: {} };\n\n    /**\n     * A definition for each client cluster supported by the endpoint per the Matter specification.\n     */\n    export const client = {\n        mandatory: {\n            OnOff: OnOffBehavior,\n            KeypadInput: KeypadInputBehavior,\n            ContentLauncher: ContentLauncherBehavior,\n            ApplicationBasic: ApplicationBasicBehavior\n        },\n\n        optional: {\n            LevelControl: LevelControlBehavior,\n            WakeOnLan: WakeOnLanBehavior,\n            Channel: ChannelBehavior,\n            TargetNavigator: TargetNavigatorBehavior,\n            MediaPlayback: MediaPlaybackBehavior,\n            MediaInput: MediaInputBehavior,\n            LowPower: LowPowerBehavior,\n            AudioOutput: AudioOutputBehavior,\n            ApplicationLauncher: ApplicationLauncherBehavior,\n            AccountLogin: AccountLoginBehavior,\n            ContentControl: ContentControlBehavior,\n            Messages: MessagesBehavior\n        }\n    };\n}\n\nexport const CastingVideoClientDeviceDefinition = MutableEndpoint({\n    name: \"CastingVideoClient\",\n    deviceType: 0x29,\n    deviceRevision: 2,\n    requirements: CastingVideoClientRequirements,\n    behaviors: SupportedBehaviors()\n});\n\nexport const CastingVideoClientDevice: CastingVideoClientDevice = CastingVideoClientDeviceDefinition;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,sCAEO;AACP,2BAAmD;AACnD,iCAEO;AACP,qCAEO;AACP,sCAEO;AACP,kCAEO;AACP,+BAA2D;AAC3D,6BAAuD;AACvD,qCAEO;AACP,mCAEO;AACP,gCAEO;AACP,8BAAyD;AACzD,iCAEO;AACP,yCAEO;AACP,kCAEO;AACP,oCAEO;AACP,8BAAyD;AACzD,6BAAgC;AAChC,gCAAmC;AAlDnC;AAAA;AAAA;AAAA;AAAA;AA+DO,IAAU;AAAA,CAAV,CAAUA,oCAAV;AAMI,EAAMA,gCAAA,2BAA2B,gCAAAC;AAOjC,EAAMD,gCAAA,gBAAgB,qBAAAE;AAOtB,EAAMF,gCAAA,sBAAsB,2BAAAG;AAO5B,EAAMH,gCAAA,0BAA0B,+BAAAI;AAOhC,EAAMJ,gCAAA,2BAA2B,gCAAAK;AAOjC,EAAML,gCAAA,uBAAuB,4BAAAM;AAO7B,EAAMN,gCAAA,oBAAoB,yBAAAO;AAO1B,EAAMP,gCAAA,kBAAkB,uBAAAQ;AAOxB,EAAMR,gCAAA,0BAA0B,+BAAAS;AAOhC,EAAMT,gCAAA,wBAAwB,6BAAAU;AAO9B,EAAMV,gCAAA,qBAAqB,0BAAAW;AAO3B,EAAMX,gCAAA,mBAAmB,wBAAAY;AAOzB,EAAMZ,gCAAA,sBAAsB,2BAAAa;AAO5B,EAAMb,gCAAA,8BAA8B,mCAAAc;AAOpC,EAAMd,gCAAA,uBAAuB,4BAAAe;AAO7B,EAAMf,gCAAA,yBAAyB,8BAAAgB;AAO/B,EAAMhB,gCAAA,mBAAmB,wBAAAiB;AAKzB,EAAMjB,gCAAA,SAAS,EAAE,UAAU,EAAE,oBAAoBA,gCAAA,yBAAyB,GAAG,WAAW,CAAC,EAAE;AAK3F,EAAMA,gCAAA,SAAS;AAAA,IAClB,WAAW;AAAA,MACP,OAAOA,gCAAA;AAAA,MACP,aAAaA,gCAAA;AAAA,MACb,iBAAiBA,gCAAA;AAAA,MACjB,kBAAkBA,gCAAA;AAAA,IACtB;AAAA,IAEA,UAAU;AAAA,MACN,cAAcA,gCAAA;AAAA,MACd,WAAWA,gCAAA;AAAA,MACX,SAASA,gCAAA;AAAA,MACT,iBAAiBA,gCAAA;AAAA,MACjB,eAAeA,gCAAA;AAAA,MACf,YAAYA,gCAAA;AAAA,MACZ,UAAUA,gCAAA;AAAA,MACV,aAAaA,gCAAA;AAAA,MACb,qBAAqBA,gCAAA;AAAA,MACrB,cAAcA,gCAAA;AAAA,MACd,gBAAgBA,gCAAA;AAAA,MAChB,UAAUA,gCAAA;AAAA,IACd;AAAA,EACJ;AAAA,GAtJa;AAyJV,MAAM,yCAAqC,wCAAgB;AAAA,EAC9D,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAW,8CAAmB;AAClC,CAAC;AAEM,MAAM,2BAAqD;",
  "names": ["CastingVideoClientRequirements", "BaseContentAppObserverServer", "BaseOnOffBehavior", "BaseKeypadInputBehavior", "BaseContentLauncherBehavior", "BaseApplicationBasicBehavior", "BaseLevelControlBehavior", "BaseWakeOnLanBehavior", "BaseChannelBehavior", "BaseTargetNavigatorBehavior", "BaseMediaPlaybackBehavior", "BaseMediaInputBehavior", "BaseLowPowerBehavior", "BaseAudioOutputBehavior", "BaseApplicationLauncherBehavior", "BaseAccountLoginBehavior", "BaseContentControlBehavior", "BaseMessagesBehavior"]
}
