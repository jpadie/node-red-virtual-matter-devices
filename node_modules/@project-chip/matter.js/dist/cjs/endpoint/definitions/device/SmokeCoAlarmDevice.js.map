{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/SmokeCoAlarmDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport {\n    SmokeCoAlarmServer as BaseSmokeCoAlarmServer\n} from \"../../../behavior/definitions/smoke-co-alarm/SmokeCoAlarmServer.js\";\nimport { GroupsServer as BaseGroupsServer } from \"../../../behavior/definitions/groups/GroupsServer.js\";\nimport {\n    RelativeHumidityMeasurementServer as BaseRelativeHumidityMeasurementServer\n} from \"../../../behavior/definitions/relative-humidity-measurement/RelativeHumidityMeasurementServer.js\";\nimport {\n    TemperatureMeasurementServer as BaseTemperatureMeasurementServer\n} from \"../../../behavior/definitions/temperature-measurement/TemperatureMeasurementServer.js\";\nimport {\n    CarbonMonoxideConcentrationMeasurementServer as BaseCarbonMonoxideConcentrationMeasurementServer\n} from \"../../../behavior/definitions/carbon-monoxide-concentration-measurement/CarbonMonoxideConcentrationMeasurementServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * A Smoke CO Alarm device is capable of sensing smoke, carbon monoxide or both. It is capable of issuing a visual and\n * audible alert to indicate elevated concentration of smoke or carbon monoxide.\n *\n * Smoke CO Alarms are capable of monitoring themselves and issuing visual and audible alerts for hardware faults,\n * critical low battery conditions, and end of service. Optionally, some of the audible alerts can be temporarily\n * silenced. Smoke CO Alarms are capable of performing a self-test which performs a diagnostic of the primary sensor\n * and issuing a cycle of the audible and visual life safety alarm indications.\n *\n * Some smoke alarms may be capable of adjusting sensitivity. Smoke CO Alarm may have the ability to detect and report\n * humidity levels, temperature levels, and contamination levels.\n *\n * SmokeCoAlarmDevice requires SmokeCoAlarm cluster but SmokeCoAlarm is not added by default because you must select\n * the features your device supports. You can add manually using SmokeCoAlarmDevice.with().\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 7.9\n */\nexport interface SmokeCoAlarmDevice extends Identity<typeof SmokeCoAlarmDeviceDefinition> {}\n\nexport namespace SmokeCoAlarmRequirements {\n    /**\n     * The Identify cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * The SmokeCoAlarm cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link SmokeCoAlarmServer} for convenience.\n     */\n    export const SmokeCoAlarmServer = BaseSmokeCoAlarmServer;\n\n    /**\n     * The Groups cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link GroupsServer} for convenience.\n     */\n    export const GroupsServer = BaseGroupsServer;\n\n    /**\n     * The RelativeHumidityMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link RelativeHumidityMeasurementServer} for convenience.\n     */\n    export const RelativeHumidityMeasurementServer = BaseRelativeHumidityMeasurementServer;\n\n    /**\n     * The TemperatureMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link TemperatureMeasurementServer} for convenience.\n     */\n    export const TemperatureMeasurementServer = BaseTemperatureMeasurementServer;\n\n    /**\n     * The CarbonMonoxideConcentrationMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link CarbonMonoxideConcentrationMeasurementServer} for\n     * convenience.\n     */\n    export const CarbonMonoxideConcentrationMeasurementServer = BaseCarbonMonoxideConcentrationMeasurementServer;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = {\n        mandatory: { Identify: IdentifyServer, SmokeCoAlarm: SmokeCoAlarmServer },\n\n        optional: {\n            Groups: GroupsServer,\n            RelativeHumidityMeasurement: RelativeHumidityMeasurementServer,\n            TemperatureMeasurement: TemperatureMeasurementServer,\n            CarbonMonoxideConcentrationMeasurement: CarbonMonoxideConcentrationMeasurementServer\n        }\n    };\n}\n\nexport const SmokeCoAlarmDeviceDefinition = MutableEndpoint({\n    name: \"SmokeCoAlarm\",\n    deviceType: 0x76,\n    deviceRevision: 1,\n    requirements: SmokeCoAlarmRequirements,\n    behaviors: SupportedBehaviors(SmokeCoAlarmRequirements.server.mandatory.Identify)\n});\n\nexport const SmokeCoAlarmDevice: SmokeCoAlarmDevice = SmokeCoAlarmDeviceDefinition;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,4BAAqD;AACrD,gCAEO;AACP,0BAAiD;AACjD,+CAEO;AACP,0CAEO;AACP,0DAEO;AACP,6BAAgC;AAChC,gCAAmC;AAvBnC;AAAA;AAAA;AAAA;AAAA;AA6CO,IAAU;AAAA,CAAV,CAAUA,8BAAV;AAMI,EAAMA,0BAAA,iBAAiB,sBAAAC;AAOvB,EAAMD,0BAAA,qBAAqB,0BAAAE;AAO3B,EAAMF,0BAAA,eAAe,oBAAAG;AAOrB,EAAMH,0BAAA,oCAAoC,yCAAAI;AAO1C,EAAMJ,0BAAA,+BAA+B,oCAAAK;AAQrC,EAAML,0BAAA,+CAA+C,oDAAAM;AAKrD,EAAMN,0BAAA,SAAS;AAAA,IAClB,WAAW,EAAE,UAAUA,0BAAA,gBAAgB,cAAcA,0BAAA,mBAAmB;AAAA,IAExE,UAAU;AAAA,MACN,QAAQA,0BAAA;AAAA,MACR,6BAA6BA,0BAAA;AAAA,MAC7B,wBAAwBA,0BAAA;AAAA,MACxB,wCAAwCA,0BAAA;AAAA,IAC5C;AAAA,EACJ;AAAA,GAxDa;AA2DV,MAAM,mCAA+B,wCAAgB;AAAA,EACxD,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAW,8CAAmB,yBAAyB,OAAO,UAAU,QAAQ;AACpF,CAAC;AAEM,MAAM,qBAAyC;",
  "names": ["SmokeCoAlarmRequirements", "BaseIdentifyServer", "BaseSmokeCoAlarmServer", "BaseGroupsServer", "BaseRelativeHumidityMeasurementServer", "BaseTemperatureMeasurementServer", "BaseCarbonMonoxideConcentrationMeasurementServer"]
}
