"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var WaterValveDevice_exports = {};
__export(WaterValveDevice_exports, {
  WaterValveDevice: () => WaterValveDevice,
  WaterValveDeviceDefinition: () => WaterValveDeviceDefinition,
  WaterValveRequirements: () => WaterValveRequirements
});
module.exports = __toCommonJS(WaterValveDevice_exports);
var import_IdentifyServer = require("../../../behavior/definitions/identify/IdentifyServer.js");
var import_ValveConfigurationAndControlServer = require("../../../behavior/definitions/valve-configuration-and-control/ValveConfigurationAndControlServer.js");
var import_FlowMeasurementServer = require("../../../behavior/definitions/flow-measurement/FlowMeasurementServer.js");
var import_FlowMeasurementBehavior = require("../../../behavior/definitions/flow-measurement/FlowMeasurementBehavior.js");
var import_MutableEndpoint = require("../../type/MutableEndpoint.js");
var import_SupportedBehaviors = require("../../properties/SupportedBehaviors.js");
/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
var WaterValveRequirements;
((WaterValveRequirements2) => {
  WaterValveRequirements2.IdentifyServer = import_IdentifyServer.IdentifyServer;
  WaterValveRequirements2.ValveConfigurationAndControlServer = import_ValveConfigurationAndControlServer.ValveConfigurationAndControlServer;
  WaterValveRequirements2.FlowMeasurementServer = import_FlowMeasurementServer.FlowMeasurementServer;
  WaterValveRequirements2.FlowMeasurementBehavior = import_FlowMeasurementBehavior.FlowMeasurementBehavior;
  WaterValveRequirements2.server = {
    mandatory: { Identify: WaterValveRequirements2.IdentifyServer, ValveConfigurationAndControl: WaterValveRequirements2.ValveConfigurationAndControlServer },
    optional: { FlowMeasurement: WaterValveRequirements2.FlowMeasurementServer }
  };
  WaterValveRequirements2.client = { optional: { FlowMeasurement: WaterValveRequirements2.FlowMeasurementBehavior }, mandatory: {} };
})(WaterValveRequirements || (WaterValveRequirements = {}));
const WaterValveDeviceDefinition = (0, import_MutableEndpoint.MutableEndpoint)({
  name: "WaterValve",
  deviceType: 66,
  deviceRevision: 1,
  requirements: WaterValveRequirements,
  behaviors: (0, import_SupportedBehaviors.SupportedBehaviors)(
    WaterValveRequirements.server.mandatory.Identify,
    WaterValveRequirements.server.mandatory.ValveConfigurationAndControl
  )
});
const WaterValveDevice = WaterValveDeviceDefinition;
//# sourceMappingURL=WaterValveDevice.js.map
