{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/DoorLockControllerDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport {\n    TimeSynchronizationServer as BaseTimeSynchronizationServer\n} from \"../../../behavior/definitions/time-synchronization/TimeSynchronizationServer.js\";\nimport { DoorLockBehavior as BaseDoorLockBehavior } from \"../../../behavior/definitions/door-lock/DoorLockBehavior.js\";\nimport { GroupsBehavior as BaseGroupsBehavior } from \"../../../behavior/definitions/groups/GroupsBehavior.js\";\nimport {\n    ScenesManagementBehavior as BaseScenesManagementBehavior\n} from \"../../../behavior/definitions/scenes-management/ScenesManagementBehavior.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * A Door Lock Controller is a device capable of controlling a door lock.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 8.2\n */\nexport interface DoorLockControllerDevice extends Identity<typeof DoorLockControllerDeviceDefinition> {}\n\nexport namespace DoorLockControllerRequirements {\n    /**\n     * The TimeSynchronization cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link TimeSynchronizationServer} for convenience.\n     */\n    export const TimeSynchronizationServer = BaseTimeSynchronizationServer;\n\n    /**\n     * The DoorLock cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link DoorLockBehavior} for convenience.\n     */\n    export const DoorLockBehavior = BaseDoorLockBehavior;\n\n    /**\n     * The Groups cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link GroupsBehavior} for convenience.\n     */\n    export const GroupsBehavior = BaseGroupsBehavior;\n\n    /**\n     * The ScenesManagement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ScenesManagementBehavior} for convenience.\n     */\n    export const ScenesManagementBehavior = BaseScenesManagementBehavior;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = { optional: { TimeSynchronization: TimeSynchronizationServer }, mandatory: {} };\n\n    /**\n     * A definition for each client cluster supported by the endpoint per the Matter specification.\n     */\n    export const client = {\n        mandatory: { DoorLock: DoorLockBehavior },\n        optional: { Groups: GroupsBehavior, ScenesManagement: ScenesManagementBehavior }\n    };\n}\n\nexport const DoorLockControllerDeviceDefinition = MutableEndpoint({\n    name: \"DoorLockController\",\n    deviceType: 0xb,\n    deviceRevision: 3,\n    requirements: DoorLockControllerRequirements,\n    behaviors: SupportedBehaviors()\n});\n\nexport const DoorLockControllerDevice: DoorLockControllerDevice = DoorLockControllerDeviceDefinition;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,uCAEO;AACP,8BAAyD;AACzD,4BAAqD;AACrD,sCAEO;AACP,6BAAgC;AAChC,gCAAmC;AAjBnC;AAAA;AAAA;AAAA;AAAA;AA2BO,IAAU;AAAA,CAAV,CAAUA,oCAAV;AAMI,EAAMA,gCAAA,4BAA4B,iCAAAC;AAOlC,EAAMD,gCAAA,mBAAmB,wBAAAE;AAOzB,EAAMF,gCAAA,iBAAiB,sBAAAG;AAOvB,EAAMH,gCAAA,2BAA2B,gCAAAI;AAKjC,EAAMJ,gCAAA,SAAS,EAAE,UAAU,EAAE,qBAAqBA,gCAAA,0BAA0B,GAAG,WAAW,CAAC,EAAE;AAK7F,EAAMA,gCAAA,SAAS;AAAA,IAClB,WAAW,EAAE,UAAUA,gCAAA,iBAAiB;AAAA,IACxC,UAAU,EAAE,QAAQA,gCAAA,gBAAgB,kBAAkBA,gCAAA,yBAAyB;AAAA,EACnF;AAAA,GAxCa;AA2CV,MAAM,yCAAqC,wCAAgB;AAAA,EAC9D,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAW,8CAAmB;AAClC,CAAC;AAEM,MAAM,2BAAqD;",
  "names": ["DoorLockControllerRequirements", "BaseTimeSynchronizationServer", "BaseDoorLockBehavior", "BaseGroupsBehavior", "BaseScenesManagementBehavior"]
}
