{
  "version": 3,
  "sources": ["../../../src/certificate/CertificationDeclarationManager.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { PrivateKey } from \"../crypto/Key.js\";\nimport { VendorId } from \"../datatype/VendorId.js\";\nimport { ByteArray } from \"../util/ByteArray.js\";\nimport { CertificateManager, TlvCertificationDeclaration } from \"./CertificateManager.js\";\n\n// This is the private key from Appendix F of the Matter 1.1 Core Specification.\n// The specification specifies it in PEM format:\n//\n// -----BEGIN EC PRIVATE KEY-----\n// MHcCAQEEIK7zSEEW6UgexXvgRy30G/SZBk5QJK2GnspeiJgC1IB1oAoGCCqGSM49\n// AwEHoUQDQgAEPDmJIkUrVcrzicJb0bykZWlSzLkOiGkkmthHRlMBTL+V1oeWXgNr\n// UhxRA35rjO3vyh60QEZpT6CIgu7WUZ3sug==\n// -----END EC PRIVATE KEY-----\n//\n// You can extract the key using openssl:\n//\n// openssl asn1parse -in key.txt\nconst TestCMS_SignerPrivateKey = ByteArray.fromHex(\"AEF3484116E9481EC57BE0472DF41BF499064E5024AD869ECA5E889802D48075\");\n\n// You can extract the subject key identifier from the certificate in the same\n// section.  The x509 command is best for that:\n//\n// openssl x509 -in cert.txt -text\n//\n// Look for the line under \"X509v3 Subject Key Identifier:\"\nconst TestCMS_SignerSubjectKeyIdentifier = ByteArray.fromHex(\"62FA823359ACFAA9963E1CFA140ADDF504F37160\");\n\nexport class CertificationDeclarationManager {\n    static generate(vendorId: VendorId, productId: number, provisional = false) {\n        const certificationElements = TlvCertificationDeclaration.encode({\n            formatVersion: 1,\n            vendorId,\n            produceIdArray: [productId],\n            deviceTypeId: 22,\n            certificateId: \"CSA00000SWC00000-00\",\n            securityLevel: 0,\n            securityInformation: 0,\n            versionNumber: 1,\n            certificationType: provisional ? 1 : 0, // 0 = Test, 1 = Provisional/In certification, 2 = official\n        });\n\n        return CertificateManager.CertificationDeclarationToAsn1(\n            certificationElements,\n            TestCMS_SignerSubjectKeyIdentifier,\n            PrivateKey(TestCMS_SignerPrivateKey),\n        );\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,iBAA2B;AAE3B,uBAA0B;AAC1B,gCAAgE;AARhE;AAAA;AAAA;AAAA;AAAA;AAsBA,MAAM,2BAA2B,2BAAU,QAAQ,kEAAkE;AAQrH,MAAM,qCAAqC,2BAAU,QAAQ,0CAA0C;AAEhG,MAAM,gCAAgC;AAAA,EACzC,OAAO,SAAS,UAAoB,WAAmB,cAAc,OAAO;AACxE,UAAM,wBAAwB,sDAA4B,OAAO;AAAA,MAC7D,eAAe;AAAA,MACf;AAAA,MACA,gBAAgB,CAAC,SAAS;AAAA,MAC1B,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,qBAAqB;AAAA,MACrB,eAAe;AAAA,MACf,mBAAmB,cAAc,IAAI;AAAA;AAAA,IACzC,CAAC;AAED,WAAO,6CAAmB;AAAA,MACtB;AAAA,MACA;AAAA,UACA,uBAAW,wBAAwB;AAAA,IACvC;AAAA,EACJ;AACJ;",
  "names": []
}
