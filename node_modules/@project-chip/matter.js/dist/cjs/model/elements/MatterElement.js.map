{
  "version": 3,
  "sources": ["../../../../src/model/elements/MatterElement.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ElementTag, type Specification } from \"../definitions/index.js\";\nimport { AttributeElement } from \"./AttributeElement.js\";\nimport { BaseElement } from \"./BaseElement.js\";\nimport { ClusterElement } from \"./ClusterElement.js\";\nimport { DatatypeElement } from \"./DatatypeElement.js\";\nimport { DeviceTypeElement } from \"./DeviceTypeElement.js\";\nimport { FabricElement } from \"./FabricElement.js\";\nimport { FieldElement } from \"./FieldElement.js\";\nimport { NodeElement } from \"./NodeElement.js\";\nimport { SemanticNamespaceElement } from \"./SemanticNamespaceElement.js\";\n\n/**\n * The root model element.\n */\nexport type MatterElement = BaseElement & {\n    tag: `${ElementTag.Matter}`;\n    revision?: Specification.Revision;\n    children: MatterElement.Child[];\n};\n\nexport function MatterElement(definition: MatterElement.Properties) {\n    return BaseElement(MatterElement.Tag, definition) as MatterElement;\n}\n\nexport namespace MatterElement {\n    export type Tag = ElementTag.Matter;\n    export const Tag = ElementTag.Matter;\n    export type Properties = BaseElement.Properties<MatterElement>;\n    export type Child =\n        | ClusterElement\n        | DeviceTypeElement\n        | FabricElement\n        | NodeElement\n        | DatatypeElement\n        | FieldElement\n        | AttributeElement\n        | SemanticNamespaceElement;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,yBAA+C;AAE/C,yBAA4B;AAR5B;AAAA;AAAA;AAAA;AAAA;AA0BO,SAAS,cAAc,YAAsC;AAChE,aAAO,gCAAY,cAAc,KAAK,UAAU;AACpD;AAAA,CAEO,CAAUA,mBAAV;AAEI,EAAMA,eAAA,MAAM,8BAAW;AAAA,GAFjB;",
  "names": ["MatterElement"]
}
