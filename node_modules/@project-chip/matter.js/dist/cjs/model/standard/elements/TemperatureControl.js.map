{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/TemperatureControl.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    FieldElement as Field,\n    CommandElement as Command\n} from \"../../elements/index.js\";\n\nexport const TemperatureControl = Cluster({\n    name: \"TemperatureControl\", id: 0x56, classification: \"application\", pics: \"TCTL\",\n\n    details: \"This cluster provides an interface to the setpoint temperature on devices such as washers, \" +\n        \"refrigerators, and water heaters. The setpoint temperature is the temperature to which a device \" +\n        \"using this cluster would attempt to control to. This cluster does not provide access to the actual \" +\n        \"or physical temperature associated with any device using this cluster. Access to the physical \" +\n        \"temperature associated with a device using this cluster would be provided by other clusters as part \" +\n        \"of that devices device type definition.\" +\n        \"\\n\" +\n        \"The values and constraints of the attributes communicated to clients SHOULD match the controls on \" +\n        \"any physical interface on a device implementing this server. For example, the value of the Step \" +\n        \"attribute SHOULD match the incremental value by which the temperature setpoint can be changed on \" +\n        \"the physical device.\",\n\n    xref: { document: \"cluster\", section: \"8.2\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 1 }),\n\n        Attribute({\n            name: \"FeatureMap\", id: 0xfffc, type: \"FeatureMap\",\n            xref: { document: \"cluster\", section: \"8.2.4\" },\n\n            children: [\n                Field({\n                    name: \"TN\", conformance: \"O.a\", constraint: \"0\", description: \"TemperatureNumber\",\n                    details: \"For devices that use an actual temperature value for the temperature setpoint, such as some water \" +\n                        \"heaters, the feature TN shall be used. Note that this cluster provides and supports temperatures in \" +\n                        \"degrees Celsius via the temperature data type.\",\n                    xref: { document: \"cluster\", section: \"8.2.4.1\" }\n                }),\n\n                Field({\n                    name: \"TL\", conformance: \"O.a\", constraint: \"1\", description: \"TemperatureLevel\",\n                    details: \"For devices that use vendor-specific temperature levels for the temperature setpoint, such as some \" +\n                        \"washers, the feature TL shall be used.\",\n                    xref: { document: \"cluster\", section: \"8.2.4.2\" }\n                }),\n\n                Field({\n                    name: \"STEP\", conformance: \"[TN]\", constraint: \"2\", description: \"TemperatureStep\",\n                    details: \"For devices that support discrete temperature setpoints that are larger than the temperature \" +\n                        \"resolution imposed via the temperature data type, the Step feature may be used.\",\n                    xref: { document: \"cluster\", section: \"8.2.4.3\" }\n                })\n            ]\n        }),\n\n        Attribute({\n            name: \"TemperatureSetpoint\", id: 0x0, type: \"temperature\", access: \"R V\", conformance: \"TN\",\n            constraint: \"minTemperature to maxTemperature\",\n            details: \"Indicates the desired Temperature Setpoint on the device.\",\n            xref: { document: \"cluster\", section: \"8.2.5.1\" }\n        }),\n\n        Attribute({\n            name: \"MinTemperature\", id: 0x1, type: \"temperature\", access: \"R V\", conformance: \"TN\",\n            constraint: \"max (MaxTemperature - 1)\", quality: \"F\",\n            details: \"Indicates the minimum temperature to which the TemperatureSetpoint attribute may be set.\",\n            xref: { document: \"cluster\", section: \"8.2.5.2\" }\n        }),\n\n        Attribute({\n            name: \"MaxTemperature\", id: 0x2, type: \"temperature\", access: \"R V\", conformance: \"TN\",\n            constraint: \"desc\", quality: \"F\",\n            details: \"Indicates the maximum temperature to which the TemperatureSetpoint attribute may be set.\" +\n                \"\\n\" +\n                \"If the Step attribute is supported, this attribute shall be such that MaxTemperature = \" +\n                \"MinTemperature + Step * n, where n is an integer and n > 0. If the Step attribute is not supported, \" +\n                \"this attribute shall be such that MaxTemperature > MinTemperature.\",\n            xref: { document: \"cluster\", section: \"8.2.5.3\" }\n        }),\n\n        Attribute({\n            name: \"Step\", id: 0x3, type: \"temperature\", access: \"R V\", conformance: \"STEP\",\n            constraint: \"max (MaxTemperature - MinTemperature)\", quality: \"F\",\n\n            details: \"Indicates the discrete value by which the TemperatureSetpoint attribute can be changed via the \" +\n                \"SetTemperature command.\" +\n                \"\\n\" +\n                \"For example, if the value of MinTemperature is 25.00C (2500) and the Step value is 0.50C (50), \" +\n                \"valid values of the TargetTemperature field of the SetTemperature command would be 25.50C (2550), \" +\n                \"26.00C (2600), 26.50C (2650), etc.\",\n\n            xref: { document: \"cluster\", section: \"8.2.5.4\" }\n        }),\n\n        Attribute({\n            name: \"SelectedTemperatureLevel\", id: 0x4, type: \"uint8\", access: \"R V\", conformance: \"TL\",\n            constraint: \"0 to 31\",\n            details: \"Indicates the currently selected temperature level setting of the server. This attribute shall be \" +\n                \"the positional index of the list item in the SupportedTemperatureLevels list that represents the \" +\n                \"currently selected temperature level setting of the server.\",\n            xref: { document: \"cluster\", section: \"8.2.5.5\" }\n        }),\n\n        Attribute({\n            name: \"SupportedTemperatureLevels\", id: 0x5, type: \"list\", access: \"R V\", conformance: \"TL\",\n            constraint: \"max 32[max 16]\",\n\n            details: \"Indicates the list of supported temperature level settings that may be selected via the \" +\n                \"TargetTemperatureLevel field in the SetTemperature command. Each string is readable text that \" +\n                \"describes each temperature level setting in a way that can be easily understood by humans. For \" +\n                \"example, a washing machine can have temperature levels like \\\"Cold\\\", \\\"Warm\\\", and \\\"Hot\\\". Each string \" +\n                \"is specified by the manufacturer.\" +\n                \"\\n\" +\n                \"Each item in this list shall represent a unique temperature level. Each entry in this list shall \" +\n                \"have a unique value. The entries in this list shall appear in order of increasing temperature level \" +\n                \"with list item 0 being the setting with the lowest temperature level.\",\n\n            xref: { document: \"cluster\", section: \"8.2.5.6\" },\n            children: [Field({ name: \"entry\", type: \"string\" })]\n        }),\n\n        Command({\n            name: \"SetTemperature\", id: 0x0, access: \"O\", conformance: \"M\", direction: \"request\",\n            response: \"status\",\n            xref: { document: \"cluster\", section: \"8.2.6.1\" },\n\n            children: [\n                Field({\n                    name: \"TargetTemperature\", id: 0x0, type: \"temperature\", conformance: \"TN\", constraint: \"desc\",\n                    details: \"This field shall specify the desired temperature setpoint that the server is to be set to.\" +\n                        \"\\n\" +\n                        \"The TargetTemperature shall be from MinTemperature to MaxTemperature inclusive. If the Step \" +\n                        \"attribute is supported, TargetTemperature shall be such that (TargetTemperature - MinTemperature) % \" +\n                        \"Step == 0.\",\n                    xref: { document: \"cluster\", section: \"8.2.6.1.1\" }\n                }),\n\n                Field({\n                    name: \"TargetTemperatureLevel\", id: 0x1, type: \"uint8\", conformance: \"TL\", constraint: \"desc\",\n                    details: \"This field shall specify the index of the list item in the SupportedTemperatureLevels list that \" +\n                        \"represents the desired temperature level setting of the server. The value of this field shall be \" +\n                        \"between 0 and the length of the SupportedTemperatureLevels list -1.\",\n                    xref: { document: \"cluster\", section: \"8.2.6.1.2\" }\n                })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(TemperatureControl);\n"],
  "mappings": "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",
  "names": ["Cluster", "Attribute", "Field", "Command"]
}
