{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/ContentAppObserver.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    CommandElement as Command,\n    FieldElement as Field,\n    DatatypeElement as Datatype\n} from \"../../elements/index.js\";\n\nexport const ContentAppObserver = Cluster({\n    name: \"ContentAppObserver\", id: 0x510, classification: \"application\", pics: \"APPOBSERVER\",\n\n    details: \"This cluster provides an interface for sending targeted commands to an Observer of a Content App on \" +\n        \"a Video Player device such as a Streaming Media Player, Smart TV or Smart Screen.\" +\n        \"\\n\" +\n        \"The cluster server for Content App Observer is implemented by an endpoint that communicates with a \" +\n        \"Content App, such as a Casting Video Client.\" +\n        \"\\n\" +\n        \"The cluster client for Content App Observer is implemented by a Content App endpoint.\" +\n        \"\\n\" +\n        \"A Content App is informed of the NodeId of an Observer when a binding is set on the Content App. \" +\n        \"For a Content App Platform, the binding is set by the platform when a CastingVideoClient is granted \" +\n        \"access to the Content App, and the CastingVideoClient supports the Content App Observer cluster. \" +\n        \"The Content App can then send the ContentAppMessage to the Observer (server cluster), and the \" +\n        \"Observer responds with a ContentAppMessageResponse.\" +\n        \"\\n\" +\n        \"The Data and EncodingHint fields of the ContentAppMessage and ContentAppMessageResponse contain \" +\n        \"content app-specific values, the format and interpretation of which is defined by the Content App \" +\n        \"vendor, analogous to the custom message features offered by other popular casting protocols. \" +\n        \"Standardized cluster and commands are used here rather than manufacturer-specific cluster and \" +\n        \"commands because of the role that the Content App Platform plays in creating the ACLs and Bindings \" +\n        \"on both sides of the communication between the Content App Observer endpoint and the Content App \" +\n        \"endpoint.\" +\n        \"\\n\" +\n        \"By using standard cluster and commands:\" +\n        \"\\n\" +\n        \"  1. The Content App Platform is able to easily determine that a binding is needed on the Content \" +\n        \"     App endpoint because it can recognize the Content App Observer cluster implemented by a client \" +\n        \"     node.\" +\n        \"\\n\" +\n        \"  2. The Content App Platform is able to easily identify commands that are allowed to be sent by \" +\n        \"     the Content App to a client node because those commands use the Content App Observer cluster.\" +\n        \"\\n\" +\n        \"  3. The Content App is able to easily determine that a node supports the Content App Observer \" +\n        \"     cluster because it has received a binding which specifies the Content App Observer cluster.\" +\n        \"\\n\" +\n        \"  4. The Casting Video Client is able to support a single cluster for receiving commands from any \" +\n        \"     Content App and does not need to explicitly list every Content App it understands.\" +\n        \"\\n\" +\n        \"A Content App Observer SHOULD ignore the Data and EncodingHint field values in commands from a \" +\n        \"Content App it does not recognize. A Content App SHOULD ignore the Data field values in responses \" +\n        \"when the EncodingHint value is blank or not recognized.\",\n\n    xref: { document: \"cluster\", section: \"6.12\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 1 }),\n\n        Command({\n            name: \"ContentAppMessage\", id: 0x0, access: \"O\", conformance: \"M\", direction: \"request\",\n            response: \"ContentAppMessageResponse\",\n            details: \"Upon receipt, the data field may be parsed and interpreted. Message encoding is specific to the \" +\n                \"Content App. A Content App may when possible read attributes from the Basic Information Cluster on \" +\n                \"the Observer and use this to determine the Message encoding.\" +\n                \"\\n\" +\n                \"This command returns a ContentAppMessage Response.\",\n            xref: { document: \"cluster\", section: \"6.12.5.1\" },\n\n            children: [\n                Field({\n                    name: \"Data\", id: 0x0, type: \"string\", conformance: \"M\", constraint: \"max 500\",\n                    details: \"This field shall indicate content app-specific data.\",\n                    xref: { document: \"cluster\", section: \"6.12.5.1.1\" }\n                }),\n                Field({\n                    name: \"EncodingHint\", id: 0x1, type: \"string\", conformance: \"O\", constraint: \"max 100\",\n                    details: \"This optional field shall indicate a content app-specific hint to the encoding of the data.\",\n                    xref: { document: \"cluster\", section: \"6.12.5.1.2\" }\n                })\n            ]\n        }),\n\n        Command({\n            name: \"ContentAppMessageResponse\", id: 0x1, conformance: \"M\", direction: \"response\",\n            details: \"This command shall be generated in response to ContentAppMessage command.\",\n            xref: { document: \"cluster\", section: \"6.12.5.2\" },\n\n            children: [\n                Field({\n                    name: \"Status\", id: 0x0, type: \"StatusEnum\", conformance: \"M\",\n                    details: \"This field shall indicate the status of the command which resulted in this response.\",\n                    xref: { document: \"cluster\", section: \"6.12.5.2.1\" }\n                }),\n                Field({\n                    name: \"Data\", id: 0x1, type: \"string\", conformance: \"O\", constraint: \"max 500\",\n                    details: \"This optional field shall indicate content app-specific data.\",\n                    xref: { document: \"cluster\", section: \"6.12.5.2.2\" }\n                }),\n                Field({\n                    name: \"EncodingHint\", id: 0x2, type: \"string\", conformance: \"O\", constraint: \"max 100\",\n                    details: \"This optional field shall indicate a content app-specific hint to the encoding of the data.\",\n                    xref: { document: \"cluster\", section: \"6.12.5.2.3\" }\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"StatusEnum\", type: \"enum8\",\n            xref: { document: \"cluster\", section: \"6.12.4.1\" },\n\n            children: [\n                Field({ name: \"Success\", id: 0x0, conformance: \"M\", description: \"Command succeeded\" }),\n                Field({\n                    name: \"UnexpectedData\", id: 0x1, conformance: \"M\",\n                    description: \"Data field in command was not understood by the Observer\"\n                })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(ContentAppObserver);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,oBAAuB;AACvB,sBAMO;AAfP;AAAA;AAAA;AAAA;AAAA;AAiBO,MAAM,yBAAqB,gBAAAA,gBAAQ;AAAA,EACtC,MAAM;AAAA,EAAsB,IAAI;AAAA,EAAO,gBAAgB;AAAA,EAAe,MAAM;AAAA,EAE5E,SAAS;AAAA,EAyCT,MAAM,EAAE,UAAU,WAAW,SAAS,OAAO;AAAA,EAE7C,UAAU;AAAA,QACN,gBAAAC,kBAAU,EAAE,MAAM,mBAAmB,IAAI,OAAQ,MAAM,mBAAmB,SAAS,EAAE,CAAC;AAAA,QAEtF,gBAAAC,gBAAQ;AAAA,MACJ,MAAM;AAAA,MAAqB,IAAI;AAAA,MAAK,QAAQ;AAAA,MAAK,aAAa;AAAA,MAAK,WAAW;AAAA,MAC9E,UAAU;AAAA,MACV,SAAS;AAAA,MAKT,MAAM,EAAE,UAAU,WAAW,SAAS,WAAW;AAAA,MAEjD,UAAU;AAAA,YACN,gBAAAC,cAAM;AAAA,UACF,MAAM;AAAA,UAAQ,IAAI;AAAA,UAAK,MAAM;AAAA,UAAU,aAAa;AAAA,UAAK,YAAY;AAAA,UACrE,SAAS;AAAA,UACT,MAAM,EAAE,UAAU,WAAW,SAAS,aAAa;AAAA,QACvD,CAAC;AAAA,YACD,gBAAAA,cAAM;AAAA,UACF,MAAM;AAAA,UAAgB,IAAI;AAAA,UAAK,MAAM;AAAA,UAAU,aAAa;AAAA,UAAK,YAAY;AAAA,UAC7E,SAAS;AAAA,UACT,MAAM,EAAE,UAAU,WAAW,SAAS,aAAa;AAAA,QACvD,CAAC;AAAA,MACL;AAAA,IACJ,CAAC;AAAA,QAED,gBAAAD,gBAAQ;AAAA,MACJ,MAAM;AAAA,MAA6B,IAAI;AAAA,MAAK,aAAa;AAAA,MAAK,WAAW;AAAA,MACzE,SAAS;AAAA,MACT,MAAM,EAAE,UAAU,WAAW,SAAS,WAAW;AAAA,MAEjD,UAAU;AAAA,YACN,gBAAAC,cAAM;AAAA,UACF,MAAM;AAAA,UAAU,IAAI;AAAA,UAAK,MAAM;AAAA,UAAc,aAAa;AAAA,UAC1D,SAAS;AAAA,UACT,MAAM,EAAE,UAAU,WAAW,SAAS,aAAa;AAAA,QACvD,CAAC;AAAA,YACD,gBAAAA,cAAM;AAAA,UACF,MAAM;AAAA,UAAQ,IAAI;AAAA,UAAK,MAAM;AAAA,UAAU,aAAa;AAAA,UAAK,YAAY;AAAA,UACrE,SAAS;AAAA,UACT,MAAM,EAAE,UAAU,WAAW,SAAS,aAAa;AAAA,QACvD,CAAC;AAAA,YACD,gBAAAA,cAAM;AAAA,UACF,MAAM;AAAA,UAAgB,IAAI;AAAA,UAAK,MAAM;AAAA,UAAU,aAAa;AAAA,UAAK,YAAY;AAAA,UAC7E,SAAS;AAAA,UACT,MAAM,EAAE,UAAU,WAAW,SAAS,aAAa;AAAA,QACvD,CAAC;AAAA,MACL;AAAA,IACJ,CAAC;AAAA,QAED,gBAAAC,iBAAS;AAAA,MACL,MAAM;AAAA,MAAc,MAAM;AAAA,MAC1B,MAAM,EAAE,UAAU,WAAW,SAAS,WAAW;AAAA,MAEjD,UAAU;AAAA,YACN,gBAAAD,cAAM,EAAE,MAAM,WAAW,IAAI,GAAK,aAAa,KAAK,aAAa,oBAAoB,CAAC;AAAA,YACtF,gBAAAA,cAAM;AAAA,UACF,MAAM;AAAA,UAAkB,IAAI;AAAA,UAAK,aAAa;AAAA,UAC9C,aAAa;AAAA,QACjB,CAAC;AAAA,MACL;AAAA,IACJ,CAAC;AAAA,EACL;AACJ,CAAC;AAED,qBAAO,SAAS,KAAK,kBAAkB;",
  "names": ["Cluster", "Attribute", "Command", "Field", "Datatype"]
}
