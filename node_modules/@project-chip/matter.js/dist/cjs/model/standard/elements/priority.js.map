{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/priority.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport { DatatypeElement as Datatype, FieldElement as Field } from \"../../elements/index.js\";\n\nexport const priority = Datatype({\n    name: \"priority\", type: \"enum8\", description: \"Priority\", isSeed: true,\n    details: \"This is an enumeration of priority used to tag events and possibly other data. The data type does \" +\n        \"not define any particular ordering among the values. Specific uses of the data type may assign \" +\n        \"semantics to the values that imply an ordering relationship.\",\n    xref: { document: \"core\", section: \"7.18.2.17\" },\n\n    children: [\n        Field({ name: \"Debug\", id: 0x0, description: \"Information for engineering debugging/troubleshooting\" }),\n        Field({\n            name: \"Info\", id: 0x1,\n            description: \"Information that either drives customer facing features or provides insights into device functions that are used to drive analytics use cases\"\n        }),\n        Field({\n            name: \"Critical\", id: 0x2,\n            description: \"Information or notification that impacts safety, a critical function, or ongoing reliable operation of the node or application supported on an endpoint.\"\n        })\n    ]\n});\n\nMatter.children.push(priority);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,oBAAuB;AACvB,sBAAmE;AATnE;AAAA;AAAA;AAAA;AAAA;AAWO,MAAM,eAAW,gBAAAA,iBAAS;AAAA,EAC7B,MAAM;AAAA,EAAY,MAAM;AAAA,EAAS,aAAa;AAAA,EAAY,QAAQ;AAAA,EAClE,SAAS;AAAA,EAGT,MAAM,EAAE,UAAU,QAAQ,SAAS,YAAY;AAAA,EAE/C,UAAU;AAAA,QACN,gBAAAC,cAAM,EAAE,MAAM,SAAS,IAAI,GAAK,aAAa,wDAAwD,CAAC;AAAA,QACtG,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAAQ,IAAI;AAAA,MAClB,aAAa;AAAA,IACjB,CAAC;AAAA,QACD,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAAY,IAAI;AAAA,MACtB,aAAa;AAAA,IACjB,CAAC;AAAA,EACL;AACJ,CAAC;AAED,qBAAO,SAAS,KAAK,QAAQ;",
  "names": ["Datatype", "Field"]
}
