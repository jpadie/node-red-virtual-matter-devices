{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/WildcardPathFlagsBitmap.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport { DatatypeElement as Datatype, FieldElement as Field } from \"../../elements/index.js\";\n\nexport const WildcardPathFlagsBitmap = Datatype({\n    name: \"WildcardPathFlagsBitmap\", type: \"map8\",\n    details: \"The WildcardPathFlagsBitmap indicates flags that apply to the path, affecting wildcard expansion. \" +\n        \"The following flags are defined:\",\n    xref: { document: \"core\", section: \"8.9.2.3\" },\n\n    children: [\n        Field({\n            name: \"WildcardSkipRootNode\", constraint: \"0\",\n            description: \"Skip the Root Node endpoint (endpoint 0) during wildcard expansion.\"\n        }),\n        Field({\n            name: \"WildcardSkipGlobalAttributes\", constraint: \"1\",\n            description: \"Skip several large global attributes during wildcard expansion.\"\n        }),\n        Field({\n            name: \"WildcardSkipAttributeList\", constraint: \"2\",\n            description: \"Skip the AttributeList global attribute during wildcard expansion.\"\n        }),\n        Field({\n            name: \"WildcardSkipEventList\", constraint: \"3\",\n            description: \"Skip the EventList global attribute during wildcard expansion.\"\n        }),\n        Field({\n            name: \"WildcardSkipCommandLists\", constraint: \"4\",\n            description: \"Skip the AcceptedCommandList and GeneratedCommandList global attributes during wildcard expansion.\"\n        }),\n        Field({\n            name: \"WildcardSkipCustomElements\", constraint: \"5\",\n            description: \"Skip any manufacturer-specific clusters or attributes during wildcard expansion.\"\n        }),\n        Field({\n            name: \"WildcardSkipFixedAttributes\", constraint: \"6\",\n            description: \"Skip any Fixed (F) quality attributes during wildcard expansion.\"\n        }),\n        Field({\n            name: \"WildcardSkipChangesOmittedAttributes\", constraint: \"7\",\n            description: \"Skip any Changes Omitted (C) quality attributes during wildcard expansion.\"\n        }),\n        Field({\n            name: \"WildcardSkipDiagnosticsClusters\", constraint: \"8\",\n            description: \"Skip all clusters with the Diagnostics (K) quality during wildcard expansion.\"\n        })\n    ]\n});\n\nMatter.children.push(WildcardPathFlagsBitmap);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,oBAAuB;AACvB,sBAAmE;AATnE;AAAA;AAAA;AAAA;AAAA;AAWO,MAAM,8BAA0B,gBAAAA,iBAAS;AAAA,EAC5C,MAAM;AAAA,EAA2B,MAAM;AAAA,EACvC,SAAS;AAAA,EAET,MAAM,EAAE,UAAU,QAAQ,SAAS,UAAU;AAAA,EAE7C,UAAU;AAAA,QACN,gBAAAC,cAAM;AAAA,MACF,MAAM;AAAA,MAAwB,YAAY;AAAA,MAC1C,aAAa;AAAA,IACjB,CAAC;AAAA,QACD,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAAgC,YAAY;AAAA,MAClD,aAAa;AAAA,IACjB,CAAC;AAAA,QACD,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAA6B,YAAY;AAAA,MAC/C,aAAa;AAAA,IACjB,CAAC;AAAA,QACD,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAAyB,YAAY;AAAA,MAC3C,aAAa;AAAA,IACjB,CAAC;AAAA,QACD,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAA4B,YAAY;AAAA,MAC9C,aAAa;AAAA,IACjB,CAAC;AAAA,QACD,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAA8B,YAAY;AAAA,MAChD,aAAa;AAAA,IACjB,CAAC;AAAA,QACD,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAA+B,YAAY;AAAA,MACjD,aAAa;AAAA,IACjB,CAAC;AAAA,QACD,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAAwC,YAAY;AAAA,MAC1D,aAAa;AAAA,IACjB,CAAC;AAAA,QACD,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAAmC,YAAY;AAAA,MACrD,aAAa;AAAA,IACjB,CAAC;AAAA,EACL;AACJ,CAAC;AAED,qBAAO,SAAS,KAAK,uBAAuB;",
  "names": ["Datatype", "Field"]
}
