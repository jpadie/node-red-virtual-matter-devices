{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/EnergyEvseMode.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    DatatypeElement as Datatype,\n    FieldElement as Field\n} from \"../../elements/index.js\";\n\nexport const EnergyEvseMode = Cluster({\n    name: \"EnergyEvseMode\", id: 0x9d, type: \"ModeBase\", classification: \"application\", pics: \"EEVSEM\",\n    details: \"This cluster is derived from the Mode Base cluster which also defines a namespace for the operation \" +\n        \"of EVSE devices.\",\n    xref: { document: \"cluster\", section: \"9.4\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 1 }),\n\n        Datatype({\n            name: \"ModeTag\", type: \"enum16\",\n\n            children: [\n                Field({\n                    name: \"Manual\", id: 0x4000,\n                    details: \"While in this mode, the EVSE needs to be sent an EnableEvseCharging or EnableEvseDischarging \" +\n                        \"command to make the EVSE start charging or discharging.\",\n                    xref: { document: \"cluster\", section: \"9.4.4.1.1\" }\n                }),\n\n                Field({\n                    name: \"TimeOfUse\", id: 0x4001,\n                    details: \"While in this mode, the EVSE will attempt to automatically start charging based on the user\u2019s \" +\n                        \"charging targets and a Time of Use tariff to charge at the cheapest times of the day.\",\n                    xref: { document: \"cluster\", section: \"9.4.4.1.2\" }\n                }),\n\n                Field({\n                    name: \"SolarCharging\", id: 0x4002,\n                    details: \"While in this mode, the EVSE will attempt to automatically start charging based on available excess \" +\n                        \"solar PV generation, limiting the charging power to avoid imported energy from the grid.\",\n                    xref: { document: \"cluster\", section: \"9.4.4.1.3\" }\n                })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(EnergyEvseMode);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,oBAAuB;AACvB,sBAKO;AAdP;AAAA;AAAA;AAAA;AAAA;AAgBO,MAAM,qBAAiB,gBAAAA,gBAAQ;AAAA,EAClC,MAAM;AAAA,EAAkB,IAAI;AAAA,EAAM,MAAM;AAAA,EAAY,gBAAgB;AAAA,EAAe,MAAM;AAAA,EACzF,SAAS;AAAA,EAET,MAAM,EAAE,UAAU,WAAW,SAAS,MAAM;AAAA,EAE5C,UAAU;AAAA,QACN,gBAAAC,kBAAU,EAAE,MAAM,mBAAmB,IAAI,OAAQ,MAAM,mBAAmB,SAAS,EAAE,CAAC;AAAA,QAEtF,gBAAAC,iBAAS;AAAA,MACL,MAAM;AAAA,MAAW,MAAM;AAAA,MAEvB,UAAU;AAAA,YACN,gBAAAC,cAAM;AAAA,UACF,MAAM;AAAA,UAAU,IAAI;AAAA,UACpB,SAAS;AAAA,UAET,MAAM,EAAE,UAAU,WAAW,SAAS,YAAY;AAAA,QACtD,CAAC;AAAA,YAED,gBAAAA,cAAM;AAAA,UACF,MAAM;AAAA,UAAa,IAAI;AAAA,UACvB,SAAS;AAAA,UAET,MAAM,EAAE,UAAU,WAAW,SAAS,YAAY;AAAA,QACtD,CAAC;AAAA,YAED,gBAAAA,cAAM;AAAA,UACF,MAAM;AAAA,UAAiB,IAAI;AAAA,UAC3B,SAAS;AAAA,UAET,MAAM,EAAE,UAAU,WAAW,SAAS,YAAY;AAAA,QACtD,CAAC;AAAA,MACL;AAAA,IACJ,CAAC;AAAA,EACL;AACJ,CAAC;AAED,qBAAO,SAAS,KAAK,cAAc;",
  "names": ["Cluster", "Attribute", "Datatype", "Field"]
}
