{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/OccupancySensing.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    DatatypeElement as Datatype,\n    FieldElement as Field\n} from \"../../elements/index.js\";\n\nexport const OccupancySensing = Cluster({\n    name: \"OccupancySensing\", id: 0x406, classification: \"application\", pics: \"OCC\",\n    details: \"The server cluster provides an interface to occupancy sensing functionality, including \" +\n        \"configuration and provision of notifications of occupancy status.\",\n    xref: { document: \"cluster\", section: \"2.7\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 4 }),\n\n        Attribute({\n            name: \"Occupancy\", id: 0x0, type: \"OccupancyBitmap\", access: \"R V\", conformance: \"M\",\n            constraint: \"0 to 1\", quality: \"P\",\n            details: \"This attribute indicates the sensed (processed) status of occupancy.\",\n            xref: { document: \"cluster\", section: \"2.7.5.1\" }\n        }),\n\n        Attribute({\n            name: \"OccupancySensorType\", id: 0x1, type: \"OccupancySensorTypeEnum\", access: \"R V\",\n            conformance: \"M\", constraint: \"desc\",\n            details: \"This attribute specifies the type of the occupancy sensor.\",\n            xref: { document: \"cluster\", section: \"2.7.5.2\" }\n        }),\n\n        Attribute({\n            name: \"OccupancySensorTypeBitmap\", id: 0x2, type: \"OccupancySensorTypeBitmap\", access: \"R V\",\n            conformance: \"M\", constraint: \"0 to 7\",\n            details: \"This attribute specifies the types of the occupancy sensor. Each bit position, if set, indicates \" +\n                \"the corresponding sensing capability is implemented.\" +\n                \"\\n\" +\n                \"The value of the OccupancySensorType shall be aligned to the value of the OccupancySensorTypeBitmap \" +\n                \"attribute as defined below.\",\n            xref: { document: \"cluster\", section: \"2.7.5.3\" }\n        }),\n\n        Attribute({\n            name: \"PirOccupiedToUnoccupiedDelay\", id: 0x10, type: \"uint16\", access: \"RW VM\", conformance: \"O\",\n            default: 0,\n            details: \"This attribute specifies the time delay, in seconds, before the PIR sensor changes to its \" +\n                \"unoccupied state after the last detection of movement in the sensed area.\",\n            xref: { document: \"cluster\", section: \"2.7.5.4\" }\n        }),\n\n        Attribute({\n            name: \"PirUnoccupiedToOccupiedDelay\", id: 0x11, type: \"uint16\", access: \"RW VM\",\n            conformance: \"PirUnoccupiedToOccupiedThreshold, O\", default: 0,\n            details: \"This attribute specifies the time delay, in seconds, before the PIR sensor changes to its occupied \" +\n                \"state after the detection of movement in the sensed area.\",\n            xref: { document: \"cluster\", section: \"2.7.5.5\" }\n        }),\n\n        Attribute({\n            name: \"PirUnoccupiedToOccupiedThreshold\", id: 0x12, type: \"uint8\", access: \"RW VM\",\n            conformance: \"PirUnoccupiedToOccupiedDelay, O\", constraint: \"1 to 254\", default: 1,\n            details: \"This attribute specifies the number of movement detection events that must occur in the period \" +\n                \"PIRUnoccupiedToOccupiedDelay, before the PIR sensor changes to its occupied state.\",\n            xref: { document: \"cluster\", section: \"2.7.5.6\" }\n        }),\n\n        Attribute({\n            name: \"UltrasonicOccupiedToUnoccupiedDelay\", id: 0x20, type: \"uint16\", access: \"RW VM\",\n            conformance: \"O\", default: 0,\n            details: \"This attribute specifies the time delay, in seconds, before the Ultrasonic sensor changes to its \" +\n                \"unoccupied state after the last detection of movement in the sensed area.\",\n            xref: { document: \"cluster\", section: \"2.7.5.7\" }\n        }),\n\n        Attribute({\n            name: \"UltrasonicUnoccupiedToOccupiedDelay\", id: 0x21, type: \"uint16\", access: \"RW VM\",\n            conformance: \"UltrasonicUnoccupiedToOccupiedThreshold, O\", default: 0,\n            details: \"This attribute specifies the time delay, in seconds, before the Ultrasonic sensor changes to its \" +\n                \"occupied state after the detection of movement in the sensed area.\",\n            xref: { document: \"cluster\", section: \"2.7.5.8\" }\n        }),\n\n        Attribute({\n            name: \"UltrasonicUnoccupiedToOccupiedThreshold\", id: 0x22, type: \"uint8\", access: \"RW VM\",\n            conformance: \"UltrasonicUnoccupiedToOccupiedDelay, O\", constraint: \"1 to 254\", default: 1,\n            details: \"This attribute specifies the number of movement detection events that must occur in the period \" +\n                \"UltrasonicUnoccupiedToOccupiedDelay, before the Ultrasonic sensor changes to its occupied state.\",\n            xref: { document: \"cluster\", section: \"2.7.5.9\" }\n        }),\n\n        Attribute({\n            name: \"PhysicalContactOccupiedToUnoccupiedDelay\", id: 0x30, type: \"uint16\", access: \"RW VM\",\n            conformance: \"O\", default: 0,\n            details: \"This attribute specifies the time delay, in seconds, before the physical contact occupancy sensor \" +\n                \"changes to its unoccupied state after detecting the unoccupied event.\",\n            xref: { document: \"cluster\", section: \"2.7.5.10\" }\n        }),\n\n        Attribute({\n            name: \"PhysicalContactUnoccupiedToOccupiedDelay\", id: 0x31, type: \"uint16\", access: \"RW VM\",\n            conformance: \"O\", default: 0,\n            details: \"This attribute specifies the time delay, in seconds, before the physical contact sensor changes to \" +\n                \"its occupied state after the detection of the occupied event.\",\n            xref: { document: \"cluster\", section: \"2.7.5.11\" }\n        }),\n\n        Attribute({\n            name: \"PhysicalContactUnoccupiedToOccupiedThreshold\", id: 0x32, type: \"uint8\", access: \"RW VM\",\n            conformance: \"PhysicalContactUnoccupiedToOccupiedDelay, O\", constraint: \"1 to 254\", default: 1,\n            details: \"This attribute specifies the number of movement detection events that must occur in the period \" +\n                \"PhysicalContactUnoccupiedToOccupiedDelay, before the PhysicalContact sensor changes to its occupied \" +\n                \"state.\",\n            xref: { document: \"cluster\", section: \"2.7.5.12\" }\n        }),\n\n        Datatype({\n            name: \"OccupancyBitmap\", type: \"map8\",\n            xref: { document: \"cluster\", section: \"2.7.4.1\" },\n\n            children: [Field({\n                name: \"Occupied\", constraint: \"0\", description: \"Indicates the sensed occupancy state\",\n                details: \"If this bit is set, it shall indicate the occupied state else if the bit if not set, it shall \" +\n                    \"indicate the unoccupied state.\",\n                xref: { document: \"cluster\", section: \"2.7.4.1.1\" }\n            })]\n        }),\n\n        Datatype({\n            name: \"OccupancySensorTypeBitmap\", type: \"map8\",\n            xref: { document: \"cluster\", section: \"2.7.4.2\" },\n            children: [\n                Field({ name: \"Pir\", constraint: \"0\", description: \"Indicates a passive infrared sensor.\" }),\n                Field({ name: \"Ultrasonic\", constraint: \"1\", description: \"Indicates a ultrasonic sensor.\" }),\n                Field({ name: \"PhysicalContact\", constraint: \"2\", description: \"Indicates a physical contact sensor.\" })\n            ]\n        }),\n\n        Datatype({\n            name: \"OccupancySensorTypeEnum\", type: \"enum8\",\n            xref: { document: \"cluster\", section: \"2.7.4.3\" },\n\n            children: [\n                Field({ name: \"Pir\", id: 0x0, conformance: \"M\", description: \"Indicates a passive infrared sensor.\" }),\n                Field({ name: \"Ultrasonic\", id: 0x1, conformance: \"M\", description: \"Indicates a ultrasonic sensor.\" }),\n                Field({\n                    name: \"PirAndUltrasonic\", id: 0x2, conformance: \"M\",\n                    description: \"Indicates a passive infrared and ultrasonic sensor.\"\n                }),\n                Field({\n                    name: \"PhysicalContact\", id: 0x3, conformance: \"M\",\n                    description: \"Indicates a physical contact sensor.\"\n                })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(OccupancySensing);\n"],
  "mappings": "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",
  "names": ["Cluster", "Attribute", "Datatype", "Field"]
}
