{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/FanControl.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    FieldElement as Field,\n    CommandElement as Command,\n    DatatypeElement as Datatype\n} from \"../../elements/index.js\";\n\nexport const FanControl = Cluster({\n    name: \"FanControl\", id: 0x202, classification: \"application\", pics: \"FAN\",\n    details: \"This cluster specifies an interface to control the speed of a fan.\",\n    xref: { document: \"cluster\", section: \"4.4\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 4 }),\n\n        Attribute({\n            name: \"FeatureMap\", id: 0xfffc, type: \"FeatureMap\",\n            xref: { document: \"cluster\", section: \"4.4.4\" },\n\n            children: [\n                Field({\n                    name: \"SPD\", constraint: \"0\", description: \"MultiSpeed\",\n\n                    details: \"Legacy Fan Control cluster revision 0-1 defined 3 speeds (low, medium and high) plus automatic \" +\n                        \"speed control but left it up to the implementer to decide what was supported. Therefore, it is \" +\n                        \"assumed that legacy client implementations are capable of determining, from the server, the number \" +\n                        \"of speeds supported between 1, 2, or 3, and whether automatic speed control is supported.\" +\n                        \"\\n\" +\n                        \"The MultiSpeed feature includes new attributes that support a running fan speed value from 0 to \" +\n                        \"SpeedMax, which has a maximum of 100.\" +\n                        \"\\n\" +\n                        \"See Speed Rules for more details.\",\n\n                    xref: { document: \"cluster\", section: \"4.4.4.1\" }\n                }),\n\n                Field({\n                    name: \"AUT\", constraint: \"1\", description: \"Auto\",\n                    details: \"Automatic mode supported for fan speed\"\n                }),\n                Field({ name: \"RCK\", constraint: \"2\", description: \"Rocking\", details: \"Rocking movement supported\" }),\n                Field({ name: \"WND\", constraint: \"3\", description: \"Wind\", details: \"Wind emulation supported\" }),\n                Field({ name: \"STEP\", constraint: \"4\", description: \"Step\", details: \"Step command supported\" }),\n                Field({\n                    name: \"DIR\", constraint: \"5\", description: \"AirflowDirection\",\n                    details: \"Airflow Direction attribute is supported\"\n                })\n            ]\n        }),\n\n        Attribute({\n            name: \"FanMode\", id: 0x0, type: \"FanModeEnum\", access: \"RW VO\", conformance: \"M\",\n            constraint: \"0 to 6\", default: 0, quality: \"N\",\n\n            details: \"Indicates the current speed mode of the fan. This attribute may be written by the client to request \" +\n                \"a different fan mode. A server shall return INVALID_IN_STATE to indicate that the fan is not in a \" +\n                \"state where the FanMode can be changed to the requested value. A server may have FanMode values \" +\n                \"that it can never be set to. For example, where this cluster appears on the same or another \" +\n                \"endpoint as other clusters with a system dependency, for example the Thermostat cluster, attempting \" +\n                \"to set the FanMode attribute of this cluster to Off may not be allowed by the system.\" +\n                \"\\n\" +\n                \"This attribute shall be set to one of the values in FanModeEnum.\" +\n                \"\\n\" +\n                \"When the FanMode attribute is successfully written to, the PercentSetting and SpeedSetting (if \" +\n                \"present) attributes shall be set to appropriate values, as defined by the Percent Rules and Speed \" +\n                \"Rules respectively, unless otherwise specified below.\" +\n                \"\\n\" +\n                \"When the FanMode attribute is set to any given mode, the PercentCurrent and SpeedCurrent (if \" +\n                \"present) shall indicate the actual currently operating fan speed, unless otherwise specified below.\",\n\n            xref: { document: \"cluster\", section: \"4.4.6.1\" }\n        }),\n\n        Attribute({\n            name: \"FanModeSequence\", id: 0x1, type: \"FanModeSequenceEnum\", access: \"R V\", conformance: \"M\",\n            constraint: \"0 to 5\", quality: \"F\",\n            details: \"This attribute indicates the fan speed ranges that shall be supported.\",\n            xref: { document: \"cluster\", section: \"4.4.6.2\" }\n        }),\n\n        Attribute({\n            name: \"PercentSetting\", id: 0x2, type: \"percent\", access: \"RW VO\", conformance: \"M\",\n            constraint: \"0 to 100\", default: 0, quality: \"X\",\n\n            details: \"Indicates the speed setting for the fan. This attribute may be written by the client to indicate a \" +\n                \"new fan speed. If the client writes null to this attribute, the attribute value shall NOT change. A \" +\n                \"server shall return INVALID_IN_STATE to indicate that the fan is not in a state where the \" +\n                \"PercentSetting can be changed to the requested value.\" +\n                \"\\n\" +\n                \"If this is successfully written to 0, the server shall set the FanMode attribute value to Off.\",\n\n            xref: { document: \"cluster\", section: \"4.4.6.3\" }\n        }),\n\n        Attribute({\n            name: \"PercentCurrent\", id: 0x3, type: \"percent\", access: \"R V\", conformance: \"M\",\n            constraint: \"0 to 100\",\n            details: \"Indicates the actual currently operating fan speed, or zero to indicate that the fan is off. There \" +\n                \"may be a temporary mismatch between the value of this attribute and the value of the PercentSetting \" +\n                \"attribute due to other system requirements that would not allow the fan to operate at the requested \" +\n                \"setting. See Percent Rules for more details.\",\n            xref: { document: \"cluster\", section: \"4.4.6.4\" }\n        }),\n\n        Attribute({\n            name: \"SpeedMax\", id: 0x4, type: \"uint8\", access: \"R V\", conformance: \"SPD\", constraint: \"1 to 100\",\n            quality: \"F\",\n            details: \"Indicates that the fan has one speed (value of 1) or the maximum speed, if the fan is capable of \" +\n                \"multiple speeds.\",\n            xref: { document: \"cluster\", section: \"4.4.6.5\" }\n        }),\n\n        Attribute({\n            name: \"SpeedSetting\", id: 0x5, type: \"uint8\", access: \"RW VO\", conformance: \"SPD\",\n            constraint: \"0 to speedMax\", default: 0, quality: \"X\",\n\n            details: \"Indicates the speed setting for the fan. This attribute may be written by the client to indicate a \" +\n                \"new fan speed. If the client writes null to this attribute, the attribute value shall NOT change. A \" +\n                \"server shall return INVALID_IN_STATE to indicate that the fan is not in a state where the \" +\n                \"SpeedSetting can be changed to the requested value.\" +\n                \"\\n\" +\n                \"If this is successfully written to 0, the server shall set the FanMode attribute value to Off. \" +\n                \"Please see the Speed Rules for details on other values.\",\n\n            xref: { document: \"cluster\", section: \"4.4.6.6\" }\n        }),\n\n        Attribute({\n            name: \"SpeedCurrent\", id: 0x6, type: \"uint8\", access: \"R V\", conformance: \"SPD\",\n            constraint: \"0 to speedMax\", quality: \"P\",\n            details: \"Indicates the actual currently operating fan speed, or zero to indicate that the fan is off. There \" +\n                \"may be a temporary mismatch between the value of this attribute and the value of the SpeedSetting \" +\n                \"attribute due to other system requirements that would not allow the fan to operate at the requested \" +\n                \"setting.\",\n            xref: { document: \"cluster\", section: \"4.4.6.7\" }\n        }),\n\n        Attribute({\n            name: \"RockSupport\", id: 0x7, type: \"RockBitmap\", access: \"R V\", conformance: \"RCK\",\n            constraint: \"desc\", default: 0, quality: \"F\",\n            details: \"This attribute is a bitmap that indicates what rocking motions the server supports.\",\n            xref: { document: \"cluster\", section: \"4.4.6.8\" }\n        }),\n\n        Attribute({\n            name: \"RockSetting\", id: 0x8, type: \"RockBitmap\", access: \"RW VO\", conformance: \"RCK\",\n            constraint: \"desc\", default: 0, quality: \"P\",\n\n            details: \"This attribute is a bitmap that indicates the current active fan rocking motion settings. Each bit \" +\n                \"shall only be set to 1, if the corresponding bit in the RockSupport attribute is set to 1, \" +\n                \"otherwise a status code of CONSTRAINT_ERROR shall be returned.\" +\n                \"\\n\" +\n                \"If a combination of supported bits is set by the client, and the server does not support the \" +\n                \"combination, the lowest supported single bit in the combination shall be set and active, and all \" +\n                \"other bits shall indicate zero.\" +\n                \"\\n\" +\n                \"For example: If RockUpDown and RockRound are both set, but this combination is not possible, then \" +\n                \"only RockUpDown becomes active.\",\n\n            xref: { document: \"cluster\", section: \"4.4.6.9\" }\n        }),\n\n        Attribute({\n            name: \"WindSupport\", id: 0x9, type: \"WindBitmap\", access: \"R V\", conformance: \"WND\",\n            constraint: \"desc\", default: 0, quality: \"F\",\n            details: \"This attribute is a bitmap that indicates what wind modes the server supports. At least one wind \" +\n                \"mode bit shall be set.\",\n            xref: { document: \"cluster\", section: \"4.4.6.10\" }\n        }),\n\n        Attribute({\n            name: \"WindSetting\", id: 0xa, type: \"WindBitmap\", access: \"RW VO\", conformance: \"WND\",\n            constraint: \"desc\", default: 0, quality: \"P\",\n\n            details: \"This attribute is a bitmap that indicates the current active fan wind feature settings. Each bit \" +\n                \"shall only be set to 1, if the corresponding bit in the WindSupport attribute is set to 1, \" +\n                \"otherwise a status code of CONSTRAINT_ERROR shall be returned.\" +\n                \"\\n\" +\n                \"If a combination of supported bits is set by the client, and the server does not support the \" +\n                \"combination, the lowest supported single bit in the combination shall be set and active, and all \" +\n                \"other bits shall indicate zero.\" +\n                \"\\n\" +\n                \"For example: If Sleep Wind and Natural Wind are set, but this combination is not possible, then \" +\n                \"only Sleep Wind becomes active.\",\n\n            xref: { document: \"cluster\", section: \"4.4.6.11\" }\n        }),\n\n        Attribute({\n            name: \"AirflowDirection\", id: 0xb, type: \"AirflowDirectionEnum\", access: \"RW VO\",\n            conformance: \"DIR\", constraint: \"desc\", default: 0, quality: \"P\",\n            details: \"Indicates the current airflow direction of the fan. This attribute may be written by the client to \" +\n                \"indicate a new airflow direction for the fan. This attribute shall be set to one of the values in \" +\n                \"the AirflowDirectionEnum table.\",\n            xref: { document: \"cluster\", section: \"4.4.6.12\" }\n        }),\n\n        Command({\n            name: \"Step\", id: 0x0, access: \"O\", conformance: \"STEP\", direction: \"request\", response: \"status\",\n\n            details: \"This command speeds up or slows down the fan, in steps, without the client having to know the fan \" +\n                \"speed. This command supports, for example, a user operated wall switch, where the user provides the \" +\n                \"feedback or control to stop sending this command when the proper speed is reached. The step speed \" +\n                \"values are implementation specific. How many step speeds are implemented is implementation specific.\" +\n                \"\\n\" +\n                \"This command supports these fields:\",\n\n            xref: { document: \"cluster\", section: \"4.4.7.1\" },\n\n            children: [\n                Field({\n                    name: \"Direction\", id: 0x0, type: \"StepDirectionEnum\", conformance: \"M\", default: 0,\n                    details: \"This field shall indicate whether the fan speed increases or decreases to the next step value.\",\n                    xref: { document: \"cluster\", section: \"4.4.7.1.1\" }\n                }),\n                Field({\n                    name: \"Wrap\", id: 0x1, type: \"bool\", conformance: \"O\", default: false,\n                    details: \"This field shall indicate if the fan speed wraps between highest and lowest step value.\",\n                    xref: { document: \"cluster\", section: \"4.4.7.1.2\" }\n                }),\n                Field({\n                    name: \"LowestOff\", id: 0x2, type: \"bool\", conformance: \"O\", default: true,\n                    details: \"This field shall indicate that the fan being off (speed value 0) is included as a step value.\",\n                    xref: { document: \"cluster\", section: \"4.4.7.1.3\" }\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"RockBitmap\", type: \"map8\",\n            xref: { document: \"cluster\", section: \"4.4.5.1\" },\n            children: [\n                Field({ name: \"RockLeftRight\", constraint: \"0\", description: \"Indicate rock left to right\" }),\n                Field({ name: \"RockUpDown\", constraint: \"1\", description: \"Indicate rock up and down\" }),\n                Field({ name: \"RockRound\", constraint: \"2\", description: \"Indicate rock around\" })\n            ]\n        }),\n\n        Datatype({\n            name: \"WindBitmap\", type: \"map8\",\n            xref: { document: \"cluster\", section: \"4.4.5.2\" },\n            children: [\n                Field({ name: \"SleepWind\", constraint: \"0\", description: \"Indicate sleep wind\" }),\n                Field({ name: \"NaturalWind\", constraint: \"1\", description: \"Indicate natural wind\" })\n            ]\n        }),\n\n        Datatype({\n            name: \"StepDirectionEnum\", type: \"enum8\",\n            xref: { document: \"cluster\", section: \"4.4.5.3\" },\n            children: [\n                Field({ name: \"Increase\", id: 0x0, conformance: \"M\", description: \"Step moves in increasing direction\" }),\n                Field({ name: \"Decrease\", id: 0x1, conformance: \"M\", description: \"Step moves in decreasing direction\" })\n            ]\n        }),\n\n        Datatype({\n            name: \"AirflowDirectionEnum\", type: \"enum8\",\n            xref: { document: \"cluster\", section: \"4.4.5.4\" },\n            children: [\n                Field({ name: \"Forward\", id: 0x0, conformance: \"M\", description: \"Airflow is in the forward direction\" }),\n                Field({ name: \"Reverse\", id: 0x1, conformance: \"M\", description: \"Airflow is in the reverse direction\" })\n            ]\n        }),\n\n        Datatype({\n            name: \"FanModeEnum\", type: \"enum8\",\n            xref: { document: \"cluster\", section: \"4.4.5.5\" },\n\n            children: [\n                Field({ name: \"Off\", id: 0x0, conformance: \"M\", description: \"Fan is off\" }),\n\n                Field({\n                    name: \"Low\", id: 0x1, conformance: \"desc\", description: \"Fan using low speed\",\n                    details: \"If the fan supports 2 or more speeds, the Low value shall be supported.\" +\n                        \"\\n\" +\n                        \"The Low value shall be supported if and only if the FanModeSequence attribute value is less than 4.\",\n                    xref: { document: \"cluster\", section: \"4.4.5.5.1\" }\n                }),\n\n                Field({\n                    name: \"Medium\", id: 0x2, conformance: \"desc\", description: \"Fan using medium speed\",\n                    details: \"If the fan supports 3 or more speeds, the Medium value shall be supported.\" +\n                        \"\\n\" +\n                        \"The Medium value shall be supported if and only if the FanModeSequence attribute value is 0 or 2.\",\n                    xref: { document: \"cluster\", section: \"4.4.5.5.2\" }\n                }),\n\n                Field({ name: \"High\", id: 0x3, conformance: \"M\", description: \"Fan using high speed\" }),\n                Field({ name: \"On\", id: 0x4, conformance: \"D\" }),\n                Field({ name: \"Auto\", id: 0x5, conformance: \"AUT\", description: \"Fan is using auto mode\" }),\n                Field({ name: \"Smart\", id: 0x6, conformance: \"D\", description: \"Fan is using smart mode\" })\n            ]\n        }),\n\n        Datatype({\n            name: \"FanModeSequenceEnum\", type: \"enum8\",\n            xref: { document: \"cluster\", section: \"4.4.5.6\" },\n\n            children: [\n                Field({\n                    name: \"OffLowMedHigh\", id: 0x0, conformance: \"[!AUT].a\",\n                    description: \"Fan is capable of off, low, medium and high modes\"\n                }),\n                Field({\n                    name: \"OffLowHigh\", id: 0x1, conformance: \"[!AUT].a\",\n                    description: \"Fan is capable of off, low and high modes\"\n                }),\n                Field({\n                    name: \"OffLowMedHighAuto\", id: 0x2, conformance: \"[AUT].a\",\n                    description: \"Fan is capable of off, low, medium, high and auto modes\"\n                }),\n                Field({\n                    name: \"OffLowHighAuto\", id: 0x3, conformance: \"[AUT].a\",\n                    description: \"Fan is capable of off, low, high and auto modes\"\n                }),\n                Field({\n                    name: \"OffHighAuto\", id: 0x4, conformance: \"[AUT].a\",\n                    description: \"Fan is capable of off, high and auto modes\"\n                }),\n                Field({\n                    name: \"OffHigh\", id: 0x5, conformance: \"[!AUT].a\",\n                    description: \"Fan is capable of off and high modes\"\n                })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(FanControl);\n"],
  "mappings": "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",
  "names": ["Cluster", "Attribute", "Field", "Command", "Datatype"]
}
