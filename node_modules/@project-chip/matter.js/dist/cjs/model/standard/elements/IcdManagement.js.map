{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/IcdManagement.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    FieldElement as Field,\n    CommandElement as Command,\n    DatatypeElement as Datatype\n} from \"../../elements/index.js\";\n\nexport const IcdManagement = Cluster({\n    name: \"IcdManagement\", id: 0x46, classification: \"node\", pics: \"ICDM\",\n\n    details: \"ICD Management Cluster enables configuration of the ICD\u2019s behavior and ensuring that listed clients \" +\n        \"can be notified when an intermittently connected device, ICD, is available for communication.\" +\n        \"\\n\" +\n        \"The cluster implements the requirements of the Check-In Protocol that enables the ICD Check-In use \" +\n        \"case.\" +\n        \"\\n\" +\n        \"NOTE This feature is provisional.\",\n\n    xref: { document: \"core\", section: \"9.17\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 2 }),\n\n        Attribute({\n            name: \"FeatureMap\", id: 0xfffc, type: \"FeatureMap\",\n            xref: { document: \"core\", section: \"9.17.4\" },\n\n            children: [\n                Field({\n                    name: \"CIP\", conformance: \"P, LITS, O\", constraint: \"0\", description: \"CheckInProtocolSupport\",\n                    details: \"When this feature is supported, the device shall support all the associated commands and attributes \" +\n                        \"to properly support the Check-In Protocol.\",\n                    xref: { document: \"core\", section: \"9.17.4.1\" }\n                }),\n\n                Field({\n                    name: \"UAT\", conformance: \"P, LITS, O\", constraint: \"1\", description: \"UserActiveModeTrigger\",\n                    details: \"This feature is supported if and only if the device has a user active mode trigger.\",\n                    xref: { document: \"core\", section: \"9.17.4.2\" }\n                }),\n\n                Field({\n                    name: \"LITS\", conformance: \"P, O\", constraint: \"2\", description: \"LongIdleTimeSupport\",\n                    details: \"This feature is supported if and only the device is a Long Idle Time ICD.\" +\n                        \"\\n\" +\n                        \"NOTE In this version of the specification, the support for the feature is provisional.\",\n                    xref: { document: \"core\", section: \"9.17.4.3\" }\n                })\n            ]\n        }),\n\n        Attribute({\n            name: \"IdleModeDuration\", id: 0x0, type: \"uint32\", access: \"R V\", conformance: \"M\",\n            constraint: \"1 to 64800\", default: 1, quality: \"F\",\n            details: \"Indicates the maximum interval in seconds the server can stay in idle mode. The IdleModeDuration \" +\n                \"shall NOT be smaller than the ActiveModeDuration.\",\n            xref: { document: \"core\", section: \"9.17.6.1\" }\n        }),\n\n        Attribute({\n            name: \"ActiveModeDuration\", id: 0x1, type: \"uint32\", access: \"R V\", conformance: \"M\", default: 300,\n            quality: \"F\",\n            details: \"Indicates the minimum interval in milliseconds the server typically will stay in active mode after \" +\n                \"initial transition out of idle mode. The ActiveModeDuration does not include the \" +\n                \"ActiveModeThreshold.\",\n            xref: { document: \"core\", section: \"9.17.6.2\" }\n        }),\n\n        Attribute({\n            name: \"ActiveModeThreshold\", id: 0x2, type: \"uint16\", access: \"R V\", conformance: \"M\", default: 300,\n            quality: \"F\",\n            details: \"Indicates the minimum amount of time in milliseconds the server typically will stay active after \" +\n                \"network activity when in active mode.\",\n            xref: { document: \"core\", section: \"9.17.6.3\" }\n        }),\n\n        Attribute({\n            name: \"RegisteredClients\", id: 0x3, type: \"list\", access: \"R F A\", conformance: \"CIP\",\n            constraint: \"desc\", default: [], quality: \"N\",\n            details: \"This attribute shall contain all clients registered to receive notification if their subscription \" +\n                \"is lost. The maximum number of entries that can be in the list shall be ClientsSupportedPerFabric \" +\n                \"for each fabric supported on the server, as indicated by the value of the SupportedFabrics \" +\n                \"attribute in the Operational Credentials cluster.\",\n            xref: { document: \"core\", section: \"9.17.6.4\" },\n            children: [Field({ name: \"entry\", type: \"MonitoringRegistrationStruct\" })]\n        }),\n\n        Attribute({\n            name: \"IcdCounter\", id: 0x4, type: \"uint32\", access: \"R A\", conformance: \"CIP\", default: 0,\n            quality: \"N C\",\n            details: \"This attribute returns the value of the ICD Counter.\",\n            xref: { document: \"core\", section: \"9.17.6.5\" }\n        }),\n\n        Attribute({\n            name: \"ClientsSupportedPerFabric\", id: 0x5, type: \"uint16\", access: \"R V\", conformance: \"CIP\",\n            constraint: \"min 1\", default: 1, quality: \"F\",\n            details: \"Indicates the maximum number of entries that the server is able to store for each fabric in the \" +\n                \"RegisteredClients attribute.\",\n            xref: { document: \"core\", section: \"9.17.6.6\" }\n        }),\n\n        Attribute({\n            name: \"UserActiveModeTriggerHint\", id: 0x6, type: \"UserActiveModeTriggerBitmap\", access: \"R V\",\n            conformance: \"P, UAT\", constraint: \"desc\", default: 0, quality: \"F\",\n\n            details: \"Indicates which user action(s) will trigger the ICD to switch to Active mode. If the attribute \" +\n                \"indicates support for a trigger that is dependent on the UserActiveModeTriggerInstruction in the \" +\n                \"UserActiveModeTriggerHint table, the UserActiveModeTriggerInstruction attribute shall be \" +\n                \"implemented and shall provide the required information, unless specified otherwise in the \" +\n                \"requirement column of the UserActiveModeTriggerHint table.\" +\n                \"\\n\" +\n                \"ActuateSensorLightsBlink, ResetButtonLightsBlink and SetupButtonLightsBlink (i.e. bits 7, 9 and 14) \" +\n                \"have a dependency on the UserActiveModeTriggerInstruction attribute but do not require the \" +\n                \"attribute to be present.\" +\n                \"\\n\" +\n                \"An ICD can indicate multiple ways of being put into Active Mode by setting multiple bits in the \" +\n                \"bitmap at the same time. However, a device shall NOT set more than one bit which has a dependency \" +\n                \"on the UserActiveModeTriggerInstruction attribute.\",\n\n            xref: { document: \"core\", section: \"9.17.6.7\" }\n        }),\n\n        Attribute({\n            name: \"UserActiveModeTriggerInstruction\", id: 0x7, type: \"string\", access: \"R V\",\n            conformance: \"P, desc\", constraint: \"max 128\", default: \"\", quality: \"F\",\n\n            details: \"The meaning of the attribute is dependent upon the UserActiveModeTriggerHint attribute value, and \" +\n                \"the conformance is in indicated in the \\\"dependency\\\" column in UserActiveModeTriggerHint table. The \" +\n                \"UserActiveModeTriggerInstruction attribute may give additional information on how to transition the \" +\n                \"device to Active Mode. If the attribute is present, the value shall be encoded as a valid UTF-8 \" +\n                \"string with a maximum length of 128 bytes. If the UserActiveModeTriggerHint has the \" +\n                \"ActuateSensorSeconds, ActuateSensorTimes, ResetButtonSeconds, ResetButtonTimes, SetupButtonSeconds \" +\n                \"or SetupButtonTimes set, the string shall consist solely of an encoding of N as a decimal\" +\n                \"\\n\" +\n                \"unsigned integer using the ASCII digits 0-9, and without leading zeros.\" +\n                \"\\n\" +\n                \"For example, given UserActiveModeTriggerHint=\\\"2048\\\", ResetButtonTimes is set which indicates \\\"Press \" +\n                \"Reset Button for N seconds\\\". Therefore, a value of UserActiveModeTriggerInstruction=\\\"10\\\" would \" +\n                \"indicate that N is 10 in that context.\" +\n                \"\\n\" +\n                \"When CustomInstruction is set by the UserActiveModeTriggerHint attribute, indicating presence of a \" +\n                \"custom string, the ICD SHOULD perform localization (translation to user\u2019s preferred language, as \" +\n                \"indicated in the Device\u2019s currently configured locale). The Custom Instruction option SHOULD NOT be \" +\n                \"used by an ICD that does not have knowledge of the user\u2019s language preference.\" +\n                \"\\n\" +\n                \"### When the UserActiveModeTriggerHint key indicates a light to blink (ActuateSensorLightsBlink, \" +\n                \"ResetButtonLightsBlink or SetupButtonLightsBlink), information on color of light may be made \" +\n                \"available via the UserActiveModeTriggerInstruction attribute. When using such color indication in \" +\n                \"the UserActiveModeTriggerInstruction attribute, only basic primary and secondary colors that could \" +\n                \"unambiguously be decoded by a commissioner and understood by an end-user, but without worry of \" +\n                \"localization, SHOULD be used, e.g. white, red, green, blue, orange, yellow, purple. The length of \" +\n                \"the attribute SHOULD be kept small.\",\n\n            xref: { document: \"core\", section: \"9.17.6.8\" }\n        }),\n\n        Attribute({\n            name: \"OperatingMode\", id: 0x8, type: \"OperatingModeEnum\", access: \"R V\", conformance: \"P, LITS\",\n            details: \"Indicates the operating mode of the ICD as specified in the OperatingModeEnum.\" +\n                \"\\n\" +\n                \"  \u2022 If the ICD is operating as a LIT ICD, OperatingMode shall be LIT.\" +\n                \"\\n\" +\n                \"  \u2022 If the ICD is operating as a SIT ICD, OperatingMode shall be SIT.\",\n            xref: { document: \"core\", section: \"9.17.6.9\" }\n        }),\n\n        Command({\n            name: \"RegisterClient\", id: 0x0, access: \"F M\", conformance: \"CIP\", direction: \"request\",\n            response: \"RegisterClientResponse\",\n            details: \"This command allows a client to register itself with the ICD to be notified when the device is \" +\n                \"available for communication.\",\n            xref: { document: \"core\", section: \"9.17.7.1\" },\n\n            children: [\n                Field({\n                    name: \"CheckInNodeId\", id: 0x0, type: \"node-id\", conformance: \"M\",\n                    details: \"This field shall provide the node ID to which a Check-In message will be sent if there are no \" +\n                        \"active subscriptions matching MonitoredSubject.\",\n                    xref: { document: \"core\", section: \"9.17.7.1.1\" }\n                }),\n\n                Field({\n                    name: \"MonitoredSubject\", id: 0x1, type: \"subject-id\", conformance: \"M\",\n                    details: \"This field shall provide the monitored subject ID.\",\n                    xref: { document: \"core\", section: \"9.17.7.1.2\" }\n                }),\n\n                Field({\n                    name: \"Key\", id: 0x2, type: \"octstr\", conformance: \"M\", constraint: \"16\",\n                    details: \"This field shall provide the shared secret between the client and the ICD to encrypt the Check-In \" +\n                        \"message.\",\n                    xref: { document: \"core\", section: \"9.17.7.1.3\" }\n                }),\n\n                Field({\n                    name: \"VerificationKey\", id: 0x3, type: \"octstr\", conformance: \"O\", constraint: \"16\",\n\n                    details: \"This field shall provide the verification key. The verification key represents the key already \" +\n                        \"stored on the server. The verification key provided in this field shall be used by the server to \" +\n                        \"guarantee that a client with manage permissions can only modify entries that contain a Key equal to \" +\n                        \"the verification key. The verification key shall be provided for clients with manage permissions. \" +\n                        \"The verification key SHOULD NOT be provided by clients with administrator permissions for the \" +\n                        \"server cluster. The verification key shall be ignored by the server if it is provided by a client \" +\n                        \"with administrator permissions for the server cluster.\",\n\n                    xref: { document: \"core\", section: \"9.17.7.1.4\" }\n                })\n            ]\n        }),\n\n        Command({\n            name: \"RegisterClientResponse\", id: 0x1, conformance: \"CIP\", direction: \"response\",\n            details: \"This command shall be sent by the ICD Management Cluster server in response to a successful \" +\n                \"RegisterClient command.\",\n            xref: { document: \"core\", section: \"9.17.7.2\" },\n            children: [Field({ name: \"IcdCounter\", id: 0x0, type: \"uint32\", conformance: \"M\" })]\n        }),\n\n        Command({\n            name: \"UnregisterClient\", id: 0x2, access: \"F M\", conformance: \"CIP\", direction: \"request\",\n            response: \"status\",\n            details: \"This command allows a client to unregister itself with the ICD. Example: a client that is leaving \" +\n                \"the network (e.g. running on a phone which is leaving the home) can (and should) remove its \" +\n                \"subscriptions and send this UnregisterClient command before leaving to prevent the burden on the \" +\n                \"ICD of an absent client.\",\n            xref: { document: \"core\", section: \"9.17.7.3\" },\n\n            children: [\n                Field({\n                    name: \"CheckInNodeId\", id: 0x0, type: \"node-id\", conformance: \"M\",\n                    details: \"This field shall provide the registered client node ID to remove from storage.\",\n                    xref: { document: \"core\", section: \"9.17.7.3.1\" }\n                }),\n\n                Field({\n                    name: \"VerificationKey\", id: 0x1, type: \"octstr\", conformance: \"O\", constraint: \"16\",\n\n                    details: \"This field shall provide the verification key associated with the CheckInNodeID to remove from \" +\n                        \"storage. The verification key represents the key already stored on the server. The verification key \" +\n                        \"provided in this field shall be used by the server to guarantee that a client with manage \" +\n                        \"permissions can only remove entries that contain a Key equal to the stored key. The verification \" +\n                        \"key shall be provided for clients with manage permissions. The verification key SHOULD NOT be \" +\n                        \"provided by clients with administrator permissions for the server cluster. The verification key \" +\n                        \"shall be ignored by the server if it is provided by a client with administrator permissions for the \" +\n                        \"server cluster.\",\n\n                    xref: { document: \"core\", section: \"9.17.7.3.2\" }\n                })\n            ]\n        }),\n\n        Command({\n            name: \"StayActiveRequest\", id: 0x3, access: \"O\", conformance: \"LITS, O\", direction: \"request\",\n            response: \"StayActiveResponse\",\n\n            details: \"This command allows a client to request that the server stays in active mode for at least a given \" +\n                \"time duration (in milliseconds) from when this command is received.\" +\n                \"\\n\" +\n                \"This StayActiveDuration may be longer than the ActiveModeThreshold value and would, typically, be \" +\n                \"used by the client to request the server to stay active and responsive for this period to allow a \" +\n                \"sequence of message exchanges during that period. The client may slightly overestimate the duration \" +\n                \"it wants the ICD to be active for, in order to account for network delays.\",\n\n            xref: { document: \"core\", section: \"9.17.7.4\" },\n            children: [Field({ name: \"StayActiveDuration\", id: 0x0, type: \"uint32\", conformance: \"M\" })]\n        }),\n\n        Command({\n            name: \"StayActiveResponse\", id: 0x4, conformance: \"LITS, O\", direction: \"response\",\n            details: \"This message shall be sent by the ICD in response to the StayActiveRequest command and shall \" +\n                \"contain the computed duration (in milliseconds) that the ICD intends to stay active for.\",\n            xref: { document: \"core\", section: \"9.17.7.5\" },\n\n            children: [Field({\n                name: \"PromisedActiveDuration\", id: 0x0, type: \"uint32\", conformance: \"M\", constraint: \"desc\",\n\n                details: \"This field shall provide the actual duration that the ICD server can stay active from the time it \" +\n                    \"receives the StayActiveRequest command.\" +\n                    \"\\n\" +\n                    \"### Minimum Value for PromisedActiveDuration\" +\n                    \"\\n\" +\n                    \"The minimum value of the PromisedActiveDuration field shall be equal to either 30000 milliseconds \" +\n                    \"or StayActiveDuration (from the received StayActiveRequest command), whichever is smaller.\",\n\n                xref: { document: \"core\", section: \"9.17.7.5.1\" }\n            })]\n        }),\n\n        Datatype({\n            name: \"UserActiveModeTriggerBitmap\", type: \"map32\",\n            details: \"See the UserActiveModeTriggerHint table for requirements associated to each bit.\",\n            xref: { document: \"core\", section: \"9.17.5.1\" },\n\n            children: [\n                Field({\n                    name: \"PowerCycle\", constraint: \"0\",\n                    description: \"Power Cycle to transition the device to ActiveMode\"\n                }),\n                Field({\n                    name: \"SettingsMenu\", constraint: \"1\",\n                    description: \"Settings menu on the device informs how to transition the device to ActiveMode\"\n                }),\n                Field({\n                    name: \"CustomInstruction\", constraint: \"2\",\n                    description: \"Custom Instruction on how to transition the device to ActiveMode\"\n                }),\n                Field({\n                    name: \"DeviceManual\", constraint: \"3\",\n                    description: \"Device Manual informs how to transition the device to ActiveMode\"\n                }),\n                Field({\n                    name: \"ActuateSensor\", constraint: \"4\",\n                    description: \"Actuate Sensor to transition the device to ActiveMode\"\n                }),\n                Field({\n                    name: \"ActuateSensorSeconds\", constraint: \"5\",\n                    description: \"Actuate Sensor for N seconds to transition the device to ActiveMode\"\n                }),\n                Field({\n                    name: \"ActuateSensorTimes\", constraint: \"6\",\n                    description: \"Actuate Sensor N times to transition the device to ActiveMode\"\n                }),\n                Field({\n                    name: \"ActuateSensorLightsBlink\", constraint: \"7\",\n                    description: \"Actuate Sensor until light blinks to transition the device to ActiveMode\"\n                }),\n                Field({\n                    name: \"ResetButton\", constraint: \"8\",\n                    description: \"Press Reset Button to transition the device to ActiveMode\"\n                }),\n                Field({\n                    name: \"ResetButtonLightsBlink\", constraint: \"9\",\n                    description: \"Press Reset Button until light blinks to transition the device to ActiveMode\"\n                }),\n                Field({\n                    name: \"ResetButtonSeconds\", constraint: \"10\",\n                    description: \"Press Reset Button for N seconds to transition the device to ActiveMode\"\n                }),\n                Field({\n                    name: \"ResetButtonTimes\", constraint: \"11\",\n                    description: \"Press Reset Button N times to transition the device to ActiveMode\"\n                }),\n                Field({\n                    name: \"SetupButton\", constraint: \"12\",\n                    description: \"Press Setup Button to transition the device to ActiveMode\"\n                }),\n                Field({\n                    name: \"SetupButtonSeconds\", constraint: \"13\",\n                    description: \"Press Setup Button for N seconds to transition the device to ActiveMode\"\n                }),\n                Field({\n                    name: \"SetupButtonLightsBlink\", constraint: \"14\",\n                    description: \"Press Setup Button until light blinks to transition the device to ActiveMode\"\n                }),\n                Field({\n                    name: \"SetupButtonTimes\", constraint: \"15\",\n                    description: \"Press Setup Button N times to transition the device to ActiveMode\"\n                }),\n                Field({\n                    name: \"AppDefinedButton\", constraint: \"16\",\n                    description: \"Press the N Button to transition the device to ActiveMode\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"MonitoringRegistrationStruct\", type: \"struct\",\n            xref: { document: \"core\", section: \"9.17.5.2\" },\n\n            children: [\n                Field({\n                    name: \"CheckInNodeId\", id: 0x1, type: \"node-id\", access: \"S\", conformance: \"M\", quality: \"N\",\n                    details: \"This field shall indicate the NodeID of the Node to which Check-In messages will be sent when the \" +\n                        \"MonitoredSubject is not subscribed.\",\n                    xref: { document: \"core\", section: \"9.17.5.2.1\" }\n                }),\n\n                Field({\n                    name: \"MonitoredSubject\", id: 0x2, type: \"subject-id\", access: \"S\", conformance: \"M\", quality: \"N\",\n\n                    details: \"This field shall indicate the monitored Subject ID. This field shall be used to determine if a \" +\n                        \"particular client has an active subscription for the given entry. The MonitoredSubject, when it is \" +\n                        \"a NodeID, may be the same as the CheckInNodeID. The MonitoredSubject gives the registering client \" +\n                        \"the flexibility of having a different CheckInNodeID from the MonitoredSubject. A subscription shall \" +\n                        \"count as an active subscription for this entry if:\" +\n                        \"\\n\" +\n                        \"  \u2022 It is on the associated fabric of this entry, and\" +\n                        \"\\n\" +\n                        \"  \u2022 The subject of this entry matches the ISD of the SubscriptionRequest message that created the \" +\n                        \"    subscription. Matching shall be determined using the subject_matches function defined in the \" +\n                        \"    Access Control Privilege Granting Algorithm.\" +\n                        \"\\n\" +\n                        \"For example, if the MonitoredSubject is Node ID 0x1111_2222_3333_AAAA, and one of the subscribers \" +\n                        \"to the server on the entry\u2019s associated fabric bears that Node ID, then the entry matches.\" +\n                        \"\\n\" +\n                        \"Another example is if the MonitoredSubject has the value 0xFFFF_FFFD_AA12_0002, and one of the \" +\n                        \"subscribers to the server on the entry\u2019s associated fabric bears the CASE Authenticated TAG value \" +\n                        \"0xAA12 and the version 0x0002 or higher within its NOC, then the entry matches.\",\n\n                    xref: { document: \"core\", section: \"9.17.5.2.2\" }\n                }),\n\n                Field({ name: \"Key\", id: 0x3, access: \"F\", conformance: \"D\" }),\n                Field({ name: \"FabricIndex\", id: 0xfe, type: \"FabricIndex\" })\n            ]\n        }),\n\n        Datatype({\n            name: \"OperatingModeEnum\", type: \"enum8\",\n            xref: { document: \"core\", section: \"9.17.5.3\" },\n\n            children: [\n                Field({\n                    name: \"Sit\", id: 0x0, conformance: \"M\", description: \"ICD is operating as a Short Idle Time ICD.\"\n                }),\n                Field({ name: \"Lit\", id: 0x1, conformance: \"M\", description: \"ICD is operating as a Long Idle Time ICD.\" })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(IcdManagement);\n"],
  "mappings": "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",
  "names": ["Cluster", "Attribute", "Field", "Command", "Datatype"]
}
