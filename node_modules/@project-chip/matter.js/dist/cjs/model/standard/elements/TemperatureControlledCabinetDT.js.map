{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/TemperatureControlledCabinetDT.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    DeviceTypeElement as DeviceType,\n    RequirementElement as Requirement,\n    FieldElement as Field\n} from \"../../elements/index.js\";\n\nexport const TemperatureControlledCabinetDt = DeviceType({\n    name: \"TemperatureControlledCabinet\", id: 0x71, category: \"Appliances\", classification: \"simple\",\n    details: \"A Temperature Controlled Cabinet only exists composed as part of another device type. It represents \" +\n        \"a single cabinet that is capable of having its temperature controlled. Such a cabinet may be \" +\n        \"chilling or freezing food, for example as part of a refrigerator, freezer, wine chiller, or other \" +\n        \"similar device. Equally, such a cabinet may be warming or heating food, for example as part of an \" +\n        \"oven, range, or similar device.\",\n    xref: { document: \"device\", section: \"13.4\" },\n\n    children: [\n        Requirement({\n            name: \"Descriptor\", id: 0x1d, element: \"serverCluster\",\n            children: [Requirement({ name: \"DeviceTypeList\", default: [ { deviceType: 113, revision: 2 } ], element: \"attribute\" })]\n        }),\n        Requirement({\n            name: \"TemperatureControl\", id: 0x56, conformance: \"M\", element: \"serverCluster\",\n            xref: { document: \"device\", section: \"13.4.4\" }\n        }),\n        Requirement({\n            name: \"TemperatureMeasurement\", id: 0x402, conformance: \"O\", element: \"serverCluster\",\n            xref: { document: \"device\", section: \"13.4.4\" }\n        }),\n\n        Requirement({\n            name: \"RefrigeratorAndTemperatureControlledCabinetMode\", id: 0x52, conformance: \"[Cooler]\",\n            element: \"serverCluster\",\n            xref: { document: \"device\", section: \"13.4.4\" },\n            children: [\n                Requirement({ name: \"StartUpMode\", conformance: \"X\", element: \"attribute\" }),\n                Requirement({ name: \"ONOFF\", conformance: \"X\", element: \"feature\" })\n            ]\n        }),\n\n        Requirement({\n            name: \"OvenMode\", id: 0x49, conformance: \"[Heater]\", element: \"serverCluster\",\n            xref: { document: \"device\", section: \"13.4.4\" },\n            children: [\n                Requirement({ name: \"StartUpMode\", conformance: \"X\", element: \"attribute\" }),\n                Requirement({ name: \"ONOFF\", conformance: \"X\", element: \"feature\" })\n            ]\n        }),\n\n        Requirement({\n            name: \"OvenCavityOperationalState\", id: 0x48, conformance: \"[Heater]\", element: \"serverCluster\",\n            xref: { document: \"device\", section: \"13.4.4\" },\n            children: [\n                Requirement({ name: \"Pause\", conformance: \"X\", element: \"command\" }),\n                Requirement({ name: \"Resume\", conformance: \"X\", element: \"command\" })\n            ]\n        }),\n\n        Field({\n            name: \"conditions\", type: \"enum8\",\n\n            children: [\n                Field({\n                    name: \"Cooler\", description: \"The device has cooling functionality.\",\n                    xref: { document: \"device\", section: \"13.4.3\" }\n                }),\n                Field({\n                    name: \"Heater\", description: \"The device has heating functionality.\",\n                    xref: { document: \"device\", section: \"13.4.3\" }\n                })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(TemperatureControlledCabinetDt);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,oBAAuB;AACvB,sBAIO;AAbP;AAAA;AAAA;AAAA;AAAA;AAeO,MAAM,qCAAiC,gBAAAA,mBAAW;AAAA,EACrD,MAAM;AAAA,EAAgC,IAAI;AAAA,EAAM,UAAU;AAAA,EAAc,gBAAgB;AAAA,EACxF,SAAS;AAAA,EAKT,MAAM,EAAE,UAAU,UAAU,SAAS,OAAO;AAAA,EAE5C,UAAU;AAAA,QACN,gBAAAC,oBAAY;AAAA,MACR,MAAM;AAAA,MAAc,IAAI;AAAA,MAAM,SAAS;AAAA,MACvC,UAAU,KAAC,gBAAAA,oBAAY,EAAE,MAAM,kBAAkB,SAAS,CAAE,EAAE,YAAY,KAAK,UAAU,EAAE,CAAE,GAAG,SAAS,YAAY,CAAC,CAAC;AAAA,IAC3H,CAAC;AAAA,QACD,gBAAAA,oBAAY;AAAA,MACR,MAAM;AAAA,MAAsB,IAAI;AAAA,MAAM,aAAa;AAAA,MAAK,SAAS;AAAA,MACjE,MAAM,EAAE,UAAU,UAAU,SAAS,SAAS;AAAA,IAClD,CAAC;AAAA,QACD,gBAAAA,oBAAY;AAAA,MACR,MAAM;AAAA,MAA0B,IAAI;AAAA,MAAO,aAAa;AAAA,MAAK,SAAS;AAAA,MACtE,MAAM,EAAE,UAAU,UAAU,SAAS,SAAS;AAAA,IAClD,CAAC;AAAA,QAED,gBAAAA,oBAAY;AAAA,MACR,MAAM;AAAA,MAAmD,IAAI;AAAA,MAAM,aAAa;AAAA,MAChF,SAAS;AAAA,MACT,MAAM,EAAE,UAAU,UAAU,SAAS,SAAS;AAAA,MAC9C,UAAU;AAAA,YACN,gBAAAA,oBAAY,EAAE,MAAM,eAAe,aAAa,KAAK,SAAS,YAAY,CAAC;AAAA,YAC3E,gBAAAA,oBAAY,EAAE,MAAM,SAAS,aAAa,KAAK,SAAS,UAAU,CAAC;AAAA,MACvE;AAAA,IACJ,CAAC;AAAA,QAED,gBAAAA,oBAAY;AAAA,MACR,MAAM;AAAA,MAAY,IAAI;AAAA,MAAM,aAAa;AAAA,MAAY,SAAS;AAAA,MAC9D,MAAM,EAAE,UAAU,UAAU,SAAS,SAAS;AAAA,MAC9C,UAAU;AAAA,YACN,gBAAAA,oBAAY,EAAE,MAAM,eAAe,aAAa,KAAK,SAAS,YAAY,CAAC;AAAA,YAC3E,gBAAAA,oBAAY,EAAE,MAAM,SAAS,aAAa,KAAK,SAAS,UAAU,CAAC;AAAA,MACvE;AAAA,IACJ,CAAC;AAAA,QAED,gBAAAA,oBAAY;AAAA,MACR,MAAM;AAAA,MAA8B,IAAI;AAAA,MAAM,aAAa;AAAA,MAAY,SAAS;AAAA,MAChF,MAAM,EAAE,UAAU,UAAU,SAAS,SAAS;AAAA,MAC9C,UAAU;AAAA,YACN,gBAAAA,oBAAY,EAAE,MAAM,SAAS,aAAa,KAAK,SAAS,UAAU,CAAC;AAAA,YACnE,gBAAAA,oBAAY,EAAE,MAAM,UAAU,aAAa,KAAK,SAAS,UAAU,CAAC;AAAA,MACxE;AAAA,IACJ,CAAC;AAAA,QAED,gBAAAC,cAAM;AAAA,MACF,MAAM;AAAA,MAAc,MAAM;AAAA,MAE1B,UAAU;AAAA,YACN,gBAAAA,cAAM;AAAA,UACF,MAAM;AAAA,UAAU,aAAa;AAAA,UAC7B,MAAM,EAAE,UAAU,UAAU,SAAS,SAAS;AAAA,QAClD,CAAC;AAAA,YACD,gBAAAA,cAAM;AAAA,UACF,MAAM;AAAA,UAAU,aAAa;AAAA,UAC7B,MAAM,EAAE,UAAU,UAAU,SAAS,SAAS;AAAA,QAClD,CAAC;AAAA,MACL;AAAA,IACJ,CAAC;AAAA,EACL;AACJ,CAAC;AAED,qBAAO,SAAS,KAAK,8BAA8B;",
  "names": ["DeviceType", "Requirement", "Field"]
}
