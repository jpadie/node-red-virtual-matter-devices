{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/IlluminanceMeasurement.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    DatatypeElement as Datatype,\n    FieldElement as Field\n} from \"../../elements/index.js\";\n\nexport const IlluminanceMeasurement = Cluster({\n    name: \"IlluminanceMeasurement\", id: 0x400, classification: \"application\", pics: \"ILL\",\n    details: \"The Illuminance Measurement cluster provides an interface to illuminance measurement functionality, \" +\n        \"including configuration and provision of notifications of illuminance measurements.\",\n    xref: { document: \"cluster\", section: \"2.2\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 3 }),\n\n        Attribute({\n            name: \"MeasuredValue\", id: 0x0, type: \"uint16\", access: \"R V\", conformance: \"M\",\n            constraint: \"0, minMeasuredValue to maxMeasuredValue\", default: 0, quality: \"X P\",\n\n            details: \"The MeasuredValue attribute represents the illuminance in Lux (symbol lx) as follows:\" +\n                \"\\n\" +\n                \"  \u2022 MeasuredValue = 10,000 x log10(illuminance) + 1,\" +\n                \"\\n\" +\n                \"where 1 lx <= illuminance <= 3.576 Mlx, corresponding to a MeasuredValue in the range 1 to 0xFFFE. \" +\n                \"The MeasuredValue attribute can take the following values:\" +\n                \"\\n\" +\n                \"  \u2022 0 indicates a value of illuminance that is too low to be measured,\" +\n                \"\\n\" +\n                \"  \u2022 MinMeasuredValue <= MeasuredValue <= MaxMeasuredValue under normal circumstances,\" +\n                \"\\n\" +\n                \"  \u2022 null indicates that the illuminance measurement is invalid.\" +\n                \"\\n\" +\n                \"The MeasuredValue attribute is updated continuously as new measurements are made.\",\n\n            xref: { document: \"cluster\", section: \"2.2.5.1\" }\n        }),\n\n        Attribute({\n            name: \"MinMeasuredValue\", id: 0x1, type: \"uint16\", access: \"R V\", conformance: \"M\",\n            constraint: \"1 to maxMeasuredValue1\", quality: \"X\",\n            details: \"The MinMeasuredValue attribute indicates the minimum value of MeasuredValue that can be measured. A \" +\n                \"value of null indicates that this attribute is not defined. See Measured Value for more details.\",\n            xref: { document: \"cluster\", section: \"2.2.5.2\" }\n        }),\n\n        Attribute({\n            name: \"MaxMeasuredValue\", id: 0x2, type: \"uint16\", access: \"R V\", conformance: \"M\",\n            constraint: \"minMeasuredValue1 to 65534\", quality: \"X\",\n            details: \"The MaxMeasuredValue attribute indicates the maximum value of MeasuredValue that can be measured. A \" +\n                \"value of null indicates that this attribute is not defined. See Measured Value for more details.\",\n            xref: { document: \"cluster\", section: \"2.2.5.3\" }\n        }),\n\n        Attribute({\n            name: \"Tolerance\", id: 0x3, type: \"uint16\", access: \"R V\", conformance: \"O\",\n            constraint: \"0 to 2048\",\n            details: \"See Measured Value.\",\n            xref: { document: \"cluster\", section: \"2.2.5.4\" }\n        }),\n\n        Attribute({\n            name: \"LightSensorType\", id: 0x4, type: \"uint8\", access: \"R V\", conformance: \"O\", default: null,\n            quality: \"X\",\n            details: \"The LightSensorType attribute specifies the electronic type of the light sensor. This attribute \" +\n                \"shall be set to one of the non-reserved values listed in LightSensorTypeEnum or null in case the \" +\n                \"sensor type is unknown.\",\n            xref: { document: \"cluster\", section: \"2.2.5.5\" }\n        }),\n\n        Datatype({\n            name: \"LightSensorTypeEnum\", type: \"enum8\",\n            xref: { document: \"cluster\", section: \"2.2.4.1\" },\n            children: [\n                Field({ name: \"Photodiode\", id: 0x0, conformance: \"M\", description: \"Indicates photodiode sensor type\" }),\n                Field({ name: \"Cmos\", id: 0x1, conformance: \"M\", description: \"Indicates CMOS sensor type\" })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(IlluminanceMeasurement);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,oBAAuB;AACvB,sBAKO;AAdP;AAAA;AAAA;AAAA;AAAA;AAgBO,MAAM,6BAAyB,gBAAAA,gBAAQ;AAAA,EAC1C,MAAM;AAAA,EAA0B,IAAI;AAAA,EAAO,gBAAgB;AAAA,EAAe,MAAM;AAAA,EAChF,SAAS;AAAA,EAET,MAAM,EAAE,UAAU,WAAW,SAAS,MAAM;AAAA,EAE5C,UAAU;AAAA,QACN,gBAAAC,kBAAU,EAAE,MAAM,mBAAmB,IAAI,OAAQ,MAAM,mBAAmB,SAAS,EAAE,CAAC;AAAA,QAEtF,gBAAAA,kBAAU;AAAA,MACN,MAAM;AAAA,MAAiB,IAAI;AAAA,MAAK,MAAM;AAAA,MAAU,QAAQ;AAAA,MAAO,aAAa;AAAA,MAC5E,YAAY;AAAA,MAA2C,SAAS;AAAA,MAAG,SAAS;AAAA,MAE5E,SAAS;AAAA,MAeT,MAAM,EAAE,UAAU,WAAW,SAAS,UAAU;AAAA,IACpD,CAAC;AAAA,QAED,gBAAAA,kBAAU;AAAA,MACN,MAAM;AAAA,MAAoB,IAAI;AAAA,MAAK,MAAM;AAAA,MAAU,QAAQ;AAAA,MAAO,aAAa;AAAA,MAC/E,YAAY;AAAA,MAA0B,SAAS;AAAA,MAC/C,SAAS;AAAA,MAET,MAAM,EAAE,UAAU,WAAW,SAAS,UAAU;AAAA,IACpD,CAAC;AAAA,QAED,gBAAAA,kBAAU;AAAA,MACN,MAAM;AAAA,MAAoB,IAAI;AAAA,MAAK,MAAM;AAAA,MAAU,QAAQ;AAAA,MAAO,aAAa;AAAA,MAC/E,YAAY;AAAA,MAA8B,SAAS;AAAA,MACnD,SAAS;AAAA,MAET,MAAM,EAAE,UAAU,WAAW,SAAS,UAAU;AAAA,IACpD,CAAC;AAAA,QAED,gBAAAA,kBAAU;AAAA,MACN,MAAM;AAAA,MAAa,IAAI;AAAA,MAAK,MAAM;AAAA,MAAU,QAAQ;AAAA,MAAO,aAAa;AAAA,MACxE,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,MAAM,EAAE,UAAU,WAAW,SAAS,UAAU;AAAA,IACpD,CAAC;AAAA,QAED,gBAAAA,kBAAU;AAAA,MACN,MAAM;AAAA,MAAmB,IAAI;AAAA,MAAK,MAAM;AAAA,MAAS,QAAQ;AAAA,MAAO,aAAa;AAAA,MAAK,SAAS;AAAA,MAC3F,SAAS;AAAA,MACT,SAAS;AAAA,MAGT,MAAM,EAAE,UAAU,WAAW,SAAS,UAAU;AAAA,IACpD,CAAC;AAAA,QAED,gBAAAC,iBAAS;AAAA,MACL,MAAM;AAAA,MAAuB,MAAM;AAAA,MACnC,MAAM,EAAE,UAAU,WAAW,SAAS,UAAU;AAAA,MAChD,UAAU;AAAA,YACN,gBAAAC,cAAM,EAAE,MAAM,cAAc,IAAI,GAAK,aAAa,KAAK,aAAa,mCAAmC,CAAC;AAAA,YACxG,gBAAAA,cAAM,EAAE,MAAM,QAAQ,IAAI,GAAK,aAAa,KAAK,aAAa,6BAA6B,CAAC;AAAA,MAChG;AAAA,IACJ,CAAC;AAAA,EACL;AACJ,CAAC;AAED,qBAAO,SAAS,KAAK,sBAAsB;",
  "names": ["Cluster", "Attribute", "Datatype", "Field"]
}
