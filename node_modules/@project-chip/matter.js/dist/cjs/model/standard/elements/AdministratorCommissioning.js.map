{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/AdministratorCommissioning.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    FieldElement as Field,\n    CommandElement as Command,\n    DatatypeElement as Datatype\n} from \"../../elements/index.js\";\n\nexport const AdministratorCommissioning = Cluster({\n    name: \"AdministratorCommissioning\", id: 0x3c, classification: \"node\", pics: \"CADMIN\",\n\n    details: \"This cluster is used to trigger a Node to allow a new Administrator to commission it. It defines \" +\n        \"Attributes, Commands and Responses needed for this purpose.\" +\n        \"\\n\" +\n        \"There are two methods of commissioning, Basic Commissioning which may be supported and is described \" +\n        \"in Section 5.6.2, \u201CBasic Commissioning Method (BCM)\u201D and Enhanced Commissioning which shall be \" +\n        \"supported and is described in Section 5.6.3, \u201CEnhanced Commissioning Method (ECM)\u201D.\" +\n        \"\\n\" +\n        \"For the management of Operational Credentials and Trusted Root Certificates, the Node Operational \" +\n        \"Credentials cluster is used.\",\n\n    xref: { document: \"core\", section: \"11.19\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 1 }),\n\n        Attribute({\n            name: \"FeatureMap\", id: 0xfffc, type: \"FeatureMap\",\n            xref: { document: \"core\", section: \"11.19.4\" },\n            children: [Field({\n                name: \"BC\", constraint: \"0\", description: \"Basic\",\n                details: \"Node supports Basic Commissioning Method.\"\n            })]\n        }),\n\n        Attribute({\n            name: \"WindowStatus\", id: 0x0, type: \"CommissioningWindowStatusEnum\", access: \"R V\",\n            conformance: \"M\",\n\n            details: \"Indicates whether a new Commissioning window has been opened by an Administrator, using either the \" +\n                \"OCW command or the OBCW command.\" +\n                \"\\n\" +\n                \"This attribute shall revert to WindowNotOpen upon expiry of a commissioning window.\" +\n                \"\\n\" +\n                \"Note that an initial commissioning window is not opened using either the OCW command or the OBCW \" +\n                \"command, and therefore this attribute shall be set to WindowNotOpen on initial commissioning.\",\n\n            xref: { document: \"core\", section: \"11.19.7.1\" }\n        }),\n\n        Attribute({\n            name: \"AdminFabricIndex\", id: 0x1, type: \"fabric-idx\", access: \"R V\", conformance: \"M\",\n            quality: \"X\",\n\n            details: \"When the WindowStatus attribute is not set to WindowNotOpen, this attribute shall indicate the \" +\n                \"FabricIndex associated with the Fabric scoping of the Administrator that opened the window. This \" +\n                \"may be used to cross-reference in the Fabrics attribute of the Node Operational Credentials cluster.\" +\n                \"\\n\" +\n                \"If, during an open commissioning window, the fabric for the Administrator that opened the window is \" +\n                \"removed, then this attribute shall be set to null.\" +\n                \"\\n\" +\n                \"When the WindowStatus attribute is set to WindowNotOpen, this attribute shall be set to null.\",\n\n            xref: { document: \"core\", section: \"11.19.7.2\" }\n        }),\n\n        Attribute({\n            name: \"AdminVendorId\", id: 0x2, type: \"vendor-id\", access: \"R V\", conformance: \"M\", quality: \"X\",\n\n            details: \"When the WindowStatus attribute is not set to WindowNotOpen, this attribute shall indicate the \" +\n                \"Vendor ID associated with the Fabric scoping of the Administrator that opened the window. This \" +\n                \"field shall match the VendorID field of the Fabrics attribute list entry associated with the \" +\n                \"Administrator having opened the window, at the time of window opening. If the fabric for the \" +\n                \"Administrator that opened the window is removed from the node while the commissioning window is \" +\n                \"still open, this attribute shall NOT be updated.\" +\n                \"\\n\" +\n                \"When the WindowStatus attribute is set to WindowNotOpen, this attribute shall be set to null.\",\n\n            xref: { document: \"core\", section: \"11.19.7.3\" }\n        }),\n\n        Command({\n            name: \"OpenCommissioningWindow\", id: 0x0, access: \"A T\", conformance: \"M\", direction: \"request\",\n            response: \"status\",\n\n            details: \"This command is used by a current Administrator to instruct a Node to go into commissioning mode. \" +\n                \"The Enhanced Commissioning Method specifies a window of time during which an already commissioned \" +\n                \"Node accepts PASE sessions. The current Administrator MUST specify a timeout value for the duration \" +\n                \"of OCW.\" +\n                \"\\n\" +\n                \"When OCW expires or commissioning completes, the Node shall remove the Passcode by deleting the \" +\n                \"PAKE passcode verifier as well as stop publishing the DNS-SD record corresponding to this command \" +\n                \"as described in Section 4.3.1, \u201CCommissionable Node Discovery\u201D. The commissioning into a new Fabric \" +\n                \"completes when the Node successfully receives a CommissioningComplete command, see Section 5.5, \" +\n                \"\u201CCommissioning Flows\u201D.\" +\n                \"\\n\" +\n                \"The parameters for OpenCommissioningWindow command are as follows:\" +\n                \"\\n\" +\n                \"A current Administrator may invoke this command to put a node in commissioning mode for the next \" +\n                \"Administrator. On completion, the command shall return a cluster specific status code from the \" +\n                \"Section 11.19.6, \u201CStatus Codes\u201D below reflecting success or reasons for failure of the operation. \" +\n                \"The new Administrator shall discover the Node on the IP network using DNS-based Service Discovery \" +\n                \"(DNS-SD) for commissioning.\" +\n                \"\\n\" +\n                \"If any format or validity errors related to the PAKEPasscodeVerifier, Iterations or Salt arguments \" +\n                \"arise, this command shall fail with a cluster specific status code of PAKEParameterError.\" +\n                \"\\n\" +\n                \"If a commissioning window is already currently open, this command shall fail with a cluster \" +\n                \"specific status code of Busy.\" +\n                \"\\n\" +\n                \"If the fail-safe timer is currently armed, this command shall fail with a cluster specific status \" +\n                \"code of Busy, since it is likely that concurrent commissioning operations from multiple separate \" +\n                \"Commissioners are about to take place.\" +\n                \"\\n\" +\n                \"In case of any other parameter error, this command shall fail with a status code of COMMAND_INVALID.\",\n\n            xref: { document: \"core\", section: \"11.19.8.1\" },\n\n            children: [\n                Field({\n                    name: \"CommissioningTimeout\", id: 0x0, type: \"uint16\", conformance: \"M\", constraint: \"desc\",\n\n                    details: \"This field shall specify the time in seconds during which commissioning session establishment is \" +\n                        \"allowed by the Node. This is known as Open Commissioning Window (OCW). This timeout value shall \" +\n                        \"follow guidance as specified in the initial Announcement Duration. The CommissioningTimeout applies \" +\n                        \"only to cessation of any announcements and to accepting of new commissioning sessions; it does not \" +\n                        \"apply to abortion of connections, i.e., a commissioning session SHOULD NOT abort prematurely upon \" +\n                        \"expiration of this timeout.\",\n\n                    xref: { document: \"core\", section: \"11.19.8.1.1\" }\n                }),\n\n                Field({\n                    name: \"PakePasscodeVerifier\", id: 0x1, type: \"octstr\", conformance: \"M\", constraint: \"97\",\n\n                    details: \"This field shall specify an ephemeral PAKE passcode verifier (see Section 3.10, \" +\n                        \"\u201CPassword-Authenticated Key Exchange (PAKE)\u201D) computed by the existing Administrator to be used for \" +\n                        \"this commissioning. The field is concatenation of two values (w0 || L) shall be \" +\n                        \"(CRYPTO_GROUP_SIZE_BYTES + CRYPTO_PUBLIC_KEY_SIZE_BYTES)-octets long as detailed in \" +\n                        \"Crypto_PAKEValues_Responder. It shall be derived from an ephemeral passcode (See PAKE). It shall be \" +\n                        \"deleted by the Node at the end of commissioning or expiration of OCW, and shall be deleted by the \" +\n                        \"existing Administrator after sending it to the Node(s).\",\n\n                    xref: { document: \"core\", section: \"11.19.8.1.2\" }\n                }),\n\n                Field({\n                    name: \"Discriminator\", id: 0x2, type: \"uint16\", conformance: \"M\", constraint: \"0 to 4095\",\n                    details: \"This field shall be used by the Node as the long discriminator for DNS-SD advertisement (see \" +\n                        \"Commissioning Discriminator) for discovery by the new Administrator. The new Administrator can find \" +\n                        \"and filter DNS-SD records by long discriminator to locate and initiate commissioning with the \" +\n                        \"appropriate Node.\",\n                    xref: { document: \"core\", section: \"11.19.8.1.3\" }\n                }),\n\n                Field({\n                    name: \"Iterations\", id: 0x3, type: \"uint32\", conformance: \"M\", constraint: \"1000 to 100000\",\n\n                    details: \"This field shall be used by the Node as the PAKE iteration count associated with the ephemeral PAKE \" +\n                        \"passcode verifier to be used for this commissioning, which shall be sent by the Node to the new \" +\n                        \"Administrator\u2019s software as response to the PBKDFParamRequest during PASE negotiation.\" +\n                        \"\\n\" +\n                        \"The permitted range of values shall match the range specified in Section 3.9, \u201CPassword-Based Key \" +\n                        \"Derivation Function (PBKDF)\u201D, within the definition of the Crypto_PBKDFParameterSet.\",\n\n                    xref: { document: \"core\", section: \"11.19.8.1.4\" }\n                }),\n\n                Field({\n                    name: \"Salt\", id: 0x4, type: \"octstr\", conformance: \"M\", constraint: \"16 to 32\",\n\n                    details: \"This field shall be used by the Node as the PAKE Salt associated with the ephemeral PAKE passcode \" +\n                        \"verifier to be used for this commissioning, which shall be sent by the Node to the new \" +\n                        \"Administrator\u2019s software as response to the PBKDFParamRequest during PASE negotiation. The \" +\n                        \"constraints on the value shall match those specified in Section 3.9, \u201CPassword-Based Key Derivation \" +\n                        \"Function (PBKDF)\u201D, within the definition of the Crypto_PBKDFParameterSet.\" +\n                        \"\\n\" +\n                        \"When a Node receives the Open Commissioning Window command, it shall begin advertising on DNS-SD as \" +\n                        \"described in Section 4.3.1, \u201CCommissionable Node Discovery\u201D and for a time period as described in \" +\n                        \"Section 11.19.8.1.1, \u201CCommissioningTimeout Field\u201D. When the command is received by a ICD, it shall \" +\n                        \"enter into active mode. The ICD shall remain in Active Mode as long as one of these conditions is \" +\n                        \"met:\" +\n                        \"\\n\" +\n                        \"  \u2022 A commissioning window is open.\" +\n                        \"\\n\" +\n                        \"  \u2022 There is an armed fail-safe timer.\",\n\n                    xref: { document: \"core\", section: \"11.19.8.1.5\" }\n                })\n            ]\n        }),\n\n        Command({\n            name: \"OpenBasicCommissioningWindow\", id: 0x1, access: \"A T\", conformance: \"BC\",\n            direction: \"request\", response: \"status\",\n\n            details: \"This command may be used by a current Administrator to instruct a Node to go into commissioning \" +\n                \"mode, if the node supports the Basic Commissioning Method. The Basic Commissioning Method specifies \" +\n                \"a window of time during which an already commissioned Node accepts PASE sessions. The current \" +\n                \"Administrator shall specify a timeout value for the duration of OBCW.\" +\n                \"\\n\" +\n                \"If a commissioning window is already currently open, this command shall fail with a cluster \" +\n                \"specific status code of Busy.\" +\n                \"\\n\" +\n                \"If the fail-safe timer is currently armed, this command shall fail with a cluster specific status \" +\n                \"code of Busy, since it is likely that concurrent commissioning operations from multiple separate \" +\n                \"Commissioners are about to take place.\" +\n                \"\\n\" +\n                \"In case of any other parameter error, this command shall fail with a status code of COMMAND_INVALID.\" +\n                \"\\n\" +\n                \"The commissioning into a new Fabric completes when the Node successfully receives a \" +\n                \"CommissioningComplete command, see Section 5.5, \u201CCommissioning Flows\u201D. The new Administrator shall \" +\n                \"discover the Node on the IP network using DNS-based Service Discovery (DNS-SD) for commissioning.\",\n\n            xref: { document: \"core\", section: \"11.19.8.2\" },\n\n            children: [Field({\n                name: \"CommissioningTimeout\", id: 0x0, type: \"uint16\", conformance: \"M\", constraint: \"desc\",\n\n                details: \"This field shall specify the time in seconds during which commissioning session establishment is \" +\n                    \"allowed by the Node. This is known as Open Basic Commissioning Window (OBCW). This timeout shall \" +\n                    \"follow guidance as specified in the initial Announcement Duration.\" +\n                    \"\\n\" +\n                    \"When a Node receives the Open Basic Commissioning Window command, it shall begin advertising on \" +\n                    \"DNS-SD as described in Section 4.3.1, \u201CCommissionable Node Discovery\u201D and for a time period as \" +\n                    \"described in Section 11.19.8.2.1, \u201CCommissioningTimeout Field\u201D. When the command is received by a \" +\n                    \"ICD, it shall enter into active mode. The ICD shall remain in Active Mode as long as one of these \" +\n                    \"conditions is met:\" +\n                    \"\\n\" +\n                    \"  \u2022 A commissioning window is open.\" +\n                    \"\\n\" +\n                    \"  \u2022 There is an armed fail-safe timer.\",\n\n                xref: { document: \"core\", section: \"11.19.8.2.1\" }\n            })]\n        }),\n\n        Command({\n            name: \"RevokeCommissioning\", id: 0x2, access: \"A T\", conformance: \"M\", direction: \"request\",\n            response: \"status\",\n\n            details: \"This command is used by a current Administrator to instruct a Node to revoke any active Open \" +\n                \"Commissioning Window or Open Basic Commissioning Window command. This is an idempotent command and \" +\n                \"the Node shall (for ECM) delete the temporary PAKEPasscodeVerifier and associated data, and stop \" +\n                \"publishing the DNS-SD record associated with the Open Commissioning Window or Open Basic \" +\n                \"Commissioning Window command, see Section 4.3.1, \u201CCommissionable Node Discovery\u201D.\" +\n                \"\\n\" +\n                \"If no commissioning window was open at time of receipt, this command shall fail with a cluster \" +\n                \"specific status code of WindowNotOpen.\" +\n                \"\\n\" +\n                \"If the commissioning window was open and the fail-safe was armed when this command is received, the \" +\n                \"device shall immediately expire the fail-safe and perform the cleanup steps outlined in Section \" +\n                \"11.10.6.2.2, \u201CBehavior on expiry of Fail-Safe timer\u201D.\",\n\n            xref: { document: \"core\", section: \"11.19.8.3\" }\n        }),\n\n        Datatype({\n            name: \"CommissioningWindowStatusEnum\", type: \"enum8\",\n            xref: { document: \"core\", section: \"11.19.5.1\" },\n\n            children: [\n                Field({ name: \"WindowNotOpen\", id: 0x0, conformance: \"M\", description: \"Commissioning window not open\" }),\n                Field({\n                    name: \"EnhancedWindowOpen\", id: 0x1, conformance: \"M\",\n                    description: \"An Enhanced Commissioning Method window is open\"\n                }),\n                Field({\n                    name: \"BasicWindowOpen\", id: 0x2, conformance: \"BC\",\n                    description: \"A Basic Commissioning Method window is open\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"StatusCodeEnum\", type: \"enum8\",\n            xref: { document: \"core\", section: \"11.19.6.1\" },\n\n            children: [\n                Field({\n                    name: \"Busy\", id: 0x2,\n                    description: \"Could not be completed because another commissioning is in progress\"\n                }),\n                Field({\n                    name: \"PakeParameterError\", id: 0x3,\n                    description: \"Provided PAKE parameters were incorrectly formatted or otherwise invalid\"\n                }),\n                Field({ name: \"WindowNotOpen\", id: 0x4, description: \"No commissioning window was currently open\" })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(AdministratorCommissioning);\n"],
  "mappings": "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",
  "names": ["Cluster", "Attribute", "Field", "Command", "Datatype"]
}
