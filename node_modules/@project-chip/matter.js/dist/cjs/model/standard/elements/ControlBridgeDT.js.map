{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/ControlBridgeDT.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport { DeviceTypeElement as DeviceType, RequirementElement as Requirement } from \"../../elements/index.js\";\n\nexport const ControlBridgeDt = DeviceType({\n    name: \"ControlBridge\", id: 0x840, category: \"Switches and Controls\", classification: \"simple\",\n    details: \"A Control Bridge is a controller device that, when bound to a lighting device such as an Extended \" +\n        \"Color Light, is capable of being used to switch the device on or off, adjust the intensity of the \" +\n        \"light being emitted and adjust the color of the light being emitted. In addition, a Control Bridge \" +\n        \"device is capable of being used for setting scenes.\",\n    xref: { document: \"device\", section: \"6.4\" },\n\n    children: [\n        Requirement({\n            name: \"Descriptor\", id: 0x1d, element: \"serverCluster\",\n            children: [Requirement({ name: \"DeviceTypeList\", default: [ { deviceType: 2112, revision: 3 } ], element: \"attribute\" })]\n        }),\n        Requirement({\n            name: \"Identify\", id: 0x3, conformance: \"M\", element: \"serverCluster\",\n            xref: { document: \"device\", section: \"6.4.4\" }\n        }),\n        Requirement({\n            name: \"Identify\", id: 0x3, conformance: \"M\", element: \"clientCluster\",\n            xref: { document: \"device\", section: \"6.4.4\" }\n        }),\n        Requirement({\n            name: \"Groups\", id: 0x4, conformance: \"M\", element: \"clientCluster\",\n            xref: { document: \"device\", section: \"6.4.4\" }\n        }),\n        Requirement({\n            name: \"ScenesManagement\", id: 0x62, conformance: \"P, M\", element: \"clientCluster\",\n            xref: { document: \"device\", section: \"6.4.4\" }\n        }),\n        Requirement({\n            name: \"OnOff\", id: 0x6, conformance: \"M\", element: \"clientCluster\",\n            xref: { document: \"device\", section: \"6.4.4\" }\n        }),\n        Requirement({\n            name: \"LevelControl\", id: 0x8, conformance: \"M\", element: \"clientCluster\",\n            xref: { document: \"device\", section: \"6.4.4\" }\n        }),\n        Requirement({\n            name: \"ColorControl\", id: 0x300, conformance: \"M\", element: \"clientCluster\",\n            xref: { document: \"device\", section: \"6.4.4\" }\n        }),\n        Requirement({\n            name: \"IlluminanceMeasurement\", id: 0x400, conformance: \"O\", element: \"clientCluster\",\n            xref: { document: \"device\", section: \"6.4.4\" }\n        }),\n        Requirement({\n            name: \"OccupancySensing\", id: 0x406, conformance: \"O\", element: \"clientCluster\",\n            xref: { document: \"device\", section: \"6.4.4\" }\n        })\n    ]\n});\n\nMatter.children.push(ControlBridgeDt);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,oBAAuB;AACvB,sBAAmF;AATnF;AAAA;AAAA;AAAA;AAAA;AAWO,MAAM,sBAAkB,gBAAAA,mBAAW;AAAA,EACtC,MAAM;AAAA,EAAiB,IAAI;AAAA,EAAO,UAAU;AAAA,EAAyB,gBAAgB;AAAA,EACrF,SAAS;AAAA,EAIT,MAAM,EAAE,UAAU,UAAU,SAAS,MAAM;AAAA,EAE3C,UAAU;AAAA,QACN,gBAAAC,oBAAY;AAAA,MACR,MAAM;AAAA,MAAc,IAAI;AAAA,MAAM,SAAS;AAAA,MACvC,UAAU,KAAC,gBAAAA,oBAAY,EAAE,MAAM,kBAAkB,SAAS,CAAE,EAAE,YAAY,MAAM,UAAU,EAAE,CAAE,GAAG,SAAS,YAAY,CAAC,CAAC;AAAA,IAC5H,CAAC;AAAA,QACD,gBAAAA,oBAAY;AAAA,MACR,MAAM;AAAA,MAAY,IAAI;AAAA,MAAK,aAAa;AAAA,MAAK,SAAS;AAAA,MACtD,MAAM,EAAE,UAAU,UAAU,SAAS,QAAQ;AAAA,IACjD,CAAC;AAAA,QACD,gBAAAA,oBAAY;AAAA,MACR,MAAM;AAAA,MAAY,IAAI;AAAA,MAAK,aAAa;AAAA,MAAK,SAAS;AAAA,MACtD,MAAM,EAAE,UAAU,UAAU,SAAS,QAAQ;AAAA,IACjD,CAAC;AAAA,QACD,gBAAAA,oBAAY;AAAA,MACR,MAAM;AAAA,MAAU,IAAI;AAAA,MAAK,aAAa;AAAA,MAAK,SAAS;AAAA,MACpD,MAAM,EAAE,UAAU,UAAU,SAAS,QAAQ;AAAA,IACjD,CAAC;AAAA,QACD,gBAAAA,oBAAY;AAAA,MACR,MAAM;AAAA,MAAoB,IAAI;AAAA,MAAM,aAAa;AAAA,MAAQ,SAAS;AAAA,MAClE,MAAM,EAAE,UAAU,UAAU,SAAS,QAAQ;AAAA,IACjD,CAAC;AAAA,QACD,gBAAAA,oBAAY;AAAA,MACR,MAAM;AAAA,MAAS,IAAI;AAAA,MAAK,aAAa;AAAA,MAAK,SAAS;AAAA,MACnD,MAAM,EAAE,UAAU,UAAU,SAAS,QAAQ;AAAA,IACjD,CAAC;AAAA,QACD,gBAAAA,oBAAY;AAAA,MACR,MAAM;AAAA,MAAgB,IAAI;AAAA,MAAK,aAAa;AAAA,MAAK,SAAS;AAAA,MAC1D,MAAM,EAAE,UAAU,UAAU,SAAS,QAAQ;AAAA,IACjD,CAAC;AAAA,QACD,gBAAAA,oBAAY;AAAA,MACR,MAAM;AAAA,MAAgB,IAAI;AAAA,MAAO,aAAa;AAAA,MAAK,SAAS;AAAA,MAC5D,MAAM,EAAE,UAAU,UAAU,SAAS,QAAQ;AAAA,IACjD,CAAC;AAAA,QACD,gBAAAA,oBAAY;AAAA,MACR,MAAM;AAAA,MAA0B,IAAI;AAAA,MAAO,aAAa;AAAA,MAAK,SAAS;AAAA,MACtE,MAAM,EAAE,UAAU,UAAU,SAAS,QAAQ;AAAA,IACjD,CAAC;AAAA,QACD,gBAAAA,oBAAY;AAAA,MACR,MAAM;AAAA,MAAoB,IAAI;AAAA,MAAO,aAAa;AAAA,MAAK,SAAS;AAAA,MAChE,MAAM,EAAE,UAAU,UAAU,SAAS,QAAQ;AAAA,IACjD,CAAC;AAAA,EACL;AACJ,CAAC;AAED,qBAAO,SAAS,KAAK,eAAe;",
  "names": ["DeviceType", "Requirement"]
}
