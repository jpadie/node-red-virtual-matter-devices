{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/OperationalCredentials.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    FieldElement as Field,\n    CommandElement as Command,\n    DatatypeElement as Datatype\n} from \"../../elements/index.js\";\n\nexport const OperationalCredentials = Cluster({\n    name: \"OperationalCredentials\", id: 0x3e, classification: \"node\", pics: \"OPCREDS\",\n    details: \"This cluster is used to add or remove Node Operational credentials on a Commissionee or Node, as \" +\n        \"well as manage the associated Fabrics.\",\n    xref: { document: \"core\", section: \"11.18\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 1 }),\n\n        Attribute({\n            name: \"Nocs\", id: 0x0, type: \"list\", access: \"R F A\", conformance: \"M\",\n            constraint: \"max supportedFabrics\", quality: \"N C\",\n\n            details: \"This attribute contains all NOCs applicable to this Node, encoded as a read-only list of NOCStruct.\" +\n                \"\\n\" +\n                \"Operational Certificates shall be added through the AddNOC command, and shall be removed through \" +\n                \"the RemoveFabric command.\" +\n                \"\\n\" +\n                \"Upon Factory Data Reset, this attribute shall be set to a default value of an empty list.\" +\n                \"\\n\" +\n                \"The number of entries in this list shall match the number of entries in the Fabrics attribute.\",\n\n            xref: { document: \"core\", section: \"11.18.5.1\" },\n            children: [Field({ name: \"entry\", type: \"NOCStruct\" })]\n        }),\n\n        Attribute({\n            name: \"Fabrics\", id: 0x1, type: \"list\", access: \"R F V\", conformance: \"M\",\n            constraint: \"max supportedFabrics\", quality: \"N\",\n\n            details: \"This attribute describes all fabrics to which this Node is commissioned, encoded as a read-only \" +\n                \"list of FabricDescriptorStruct. This information may be computed directly from the NOCs attribute.\" +\n                \"\\n\" +\n                \"Upon Factory Data Reset, this attribute shall be set to a default value of an empty list.\" +\n                \"\\n\" +\n                \"The number of entries in this list shall match the number of entries in the NOCs attribute.\",\n\n            xref: { document: \"core\", section: \"11.18.5.2\" },\n            children: [Field({ name: \"entry\", type: \"FabricDescriptorStruct\" })]\n        }),\n\n        Attribute({\n            name: \"SupportedFabrics\", id: 0x2, type: \"uint8\", access: \"R V\", conformance: \"M\",\n            constraint: \"5 to 254\", quality: \"F\",\n            details: \"This attribute contains the number of Fabrics that are supported by the device. This value is fixed \" +\n                \"for a particular device.\",\n            xref: { document: \"core\", section: \"11.18.5.3\" }\n        }),\n\n        Attribute({\n            name: \"CommissionedFabrics\", id: 0x3, type: \"uint8\", access: \"R V\", conformance: \"M\",\n            constraint: \"max supportedFabrics\", quality: \"N\",\n\n            details: \"This attribute contains the number of Fabrics to which the device is currently commissioned. This \" +\n                \"attribute shall be equal to the following:\" +\n                \"\\n\" +\n                \"  \u2022 The number of entries in the NOCs attribute.\" +\n                \"\\n\" +\n                \"  \u2022 The number of entries in the Fabrics attribute.\" +\n                \"\\n\" +\n                \"Upon Factory Data Reset, this attribute shall be set to a default value of 0.\",\n\n            xref: { document: \"core\", section: \"11.18.5.4\" }\n        }),\n\n        Attribute({\n            name: \"TrustedRootCertificates\", id: 0x4, type: \"list\", access: \"R V\", conformance: \"M\",\n            constraint: \"max supportedFabrics[max 400]\", quality: \"N C\",\n\n            details: \"This attribute shall contain a read-only list of Trusted Root CA Certificates installed on the \" +\n                \"Node, as octet strings containing their Matter Certificate Encoding representation.\" +\n                \"\\n\" +\n                \"These certificates are installed through the AddTrustedRootCertificate command.\" +\n                \"\\n\" +\n                \"Depending on the method of storage employed by the server, either shared storage for identical root \" +\n                \"certificates shared by many fabrics, or individually stored root certificate per fabric, multiple \" +\n                \"identical root certificates may legally appear within the list.\" +\n                \"\\n\" +\n                \"To match a root with a given fabric, the root certificate\u2019s subject and subject public key need to \" +\n                \"be cross-referenced with the NOC or ICAC certificates that appear in the NOCs attribute for a given \" +\n                \"fabric.\" +\n                \"\\n\" +\n                \"Upon Factory Data Reset, this attribute shall be set to a default value whereby the list is empty.\",\n\n            xref: { document: \"core\", section: \"11.18.5.5\" },\n            children: [Field({ name: \"entry\", type: \"octstr\" })]\n        }),\n\n        Attribute({\n            name: \"CurrentFabricIndex\", id: 0x5, type: \"fabric-idx\", access: \"R V\", conformance: \"M\",\n            default: 0,\n            details: \"This attribute shall contain accessing fabric index.\" +\n                \"\\n\" +\n                \"This attribute is useful to contextualize Fabric-Scoped entries obtained from response commands or \" +\n                \"attribute reads, since a given Fabric may be referenced by a different Fabric Index locally on a \" +\n                \"remote Node.\",\n            xref: { document: \"core\", section: \"11.18.5.6\" }\n        }),\n\n        Command({\n            name: \"AttestationRequest\", id: 0x0, access: \"A\", conformance: \"M\", direction: \"request\",\n            response: \"AttestationResponse\",\n            details: \"This command shall be generated to request the Attestation Information, in the form of an \" +\n                \"AttestationResponse Command. If the AttestationNonce that is provided in the command is malformed, \" +\n                \"a recipient shall fail the command with a Status Code of INVALID_COMMAND. The AttestationNonce \" +\n                \"field shall be used in the computation of the Attestation Information.\",\n            xref: { document: \"core\", section: \"11.18.6.1\" },\n            children: [Field({ name: \"AttestationNonce\", id: 0x0, type: \"octstr\", conformance: \"M\", constraint: \"32\" })]\n        }),\n\n        Command({\n            name: \"AttestationResponse\", id: 0x1, conformance: \"M\", direction: \"response\",\n\n            details: \"This command shall be generated in response to an Attestation Request command.\" +\n                \"\\n\" +\n                \"See Section 11.18.4.7, \u201CAttestation Information\u201D for details about the generation of the fields \" +\n                \"within this response command.\" +\n                \"\\n\" +\n                \"See Section F.2, \u201CDevice Attestation Response test vector\u201D for an example computation of an \" +\n                \"AttestationResponse.\",\n\n            xref: { document: \"core\", section: \"11.18.6.2\" },\n\n            children: [\n                Field({\n                    name: \"AttestationElements\", id: 0x0, type: \"octstr\", conformance: \"M\", constraint: \"max 900\",\n                    details: \"This field shall contain the octet string of the serialized attestation_elements_message.\",\n                    xref: { document: \"core\", section: \"11.18.6.2.1\" }\n                }),\n\n                Field({\n                    name: \"AttestationSignature\", id: 0x1, type: \"octstr\", conformance: \"M\", constraint: \"64\",\n                    details: \"This field shall contain the octet string of the necessary attestation_signature as described in \" +\n                        \"Section 11.18.4.7, \u201CAttestation Information\u201D.\",\n                    xref: { document: \"core\", section: \"11.18.6.2.2\" }\n                })\n            ]\n        }),\n\n        Command({\n            name: \"CertificateChainRequest\", id: 0x2, access: \"A\", conformance: \"M\", direction: \"request\",\n            response: \"CertificateChainResponse\",\n            details: \"If the CertificateType is not a valid value per CertificateChainTypeEnum then the command shall \" +\n                \"fail with a Status Code of INVALID_COMMAND.\",\n            xref: { document: \"core\", section: \"11.18.6.3\" },\n            children: [Field({\n                name: \"CertificateType\", id: 0x0, type: \"CertificateChainTypeEnum\", conformance: \"M\",\n                constraint: \"desc\"\n            })]\n        }),\n\n        Command({\n            name: \"CertificateChainResponse\", id: 0x3, conformance: \"M\", direction: \"response\",\n            details: \"This command shall be generated in response to a CertificateChainRequest command.\",\n            xref: { document: \"core\", section: \"11.18.6.4\" },\n\n            children: [Field({\n                name: \"Certificate\", id: 0x0, type: \"octstr\", conformance: \"M\", constraint: \"max 600\",\n                details: \"This field shall be the DER encoded certificate corresponding to the CertificateType field in the \" +\n                    \"CertificateChainRequest command.\",\n                xref: { document: \"core\", section: \"11.18.6.4.1\" }\n            })]\n        }),\n\n        Command({\n            name: \"CsrRequest\", id: 0x4, access: \"A\", conformance: \"M\", direction: \"request\",\n            response: \"CsrResponse\",\n\n            details: \"This command shall be generated to execute the Node Operational CSR Procedure and subsequently \" +\n                \"return the NOCSR Information, in the form of a CSRResponse Command.\" +\n                \"\\n\" +\n                \"The CSRNonce field shall be used in the computation of the NOCSR Information. If the CSRNonce is \" +\n                \"malformed, then this command shall fail with an INVALID_COMMAND status code.\" +\n                \"\\n\" +\n                \"If the IsForUpdateNOC field is present and set to true, but the command was received over a PASE \" +\n                \"session, the command shall fail with an INVALID_COMMAND status code, as it would never be possible \" +\n                \"to use a resulting subsequent certificate issued from the CSR with the UpdateNOC command, which is \" +\n                \"forbidden over PASE sessions.\" +\n                \"\\n\" +\n                \"If the IsForUpdateNOC field is present and set to true, the internal state of the CSR associated \" +\n                \"keypair shall be tagged as being for a subsequent UpdateNOC, otherwise the internal state of the \" +\n                \"CSR shall be tagged as being for a subsequent AddNOC. See AddNOC and UpdateNOC for details about \" +\n                \"the processing.\" +\n                \"\\n\" +\n                \"If this command is received without an armed fail-safe context (see Section 11.10.6.2, \u201CArmFailSafe \" +\n                \"Command\u201D), then this command shall fail with a FAILSAFE_REQUIRED status code sent back to the \" +\n                \"initiator.\" +\n                \"\\n\" +\n                \"If a prior UpdateNOC or AddNOC command was successfully executed within the fail-safe timer period, \" +\n                \"then this command shall fail with a CONSTRAINT_ERROR status code sent back to the initiator.\" +\n                \"\\n\" +\n                \"If the Node Operational Key Pair generated during processing of the Node Operational CSR Procedure \" +\n                \"is found to collide with an existing key pair already previously generated and installed, and that \" +\n                \"check had been executed, then this command shall fail with a FAILURE status code sent back to the \" +\n                \"initiator.\",\n\n            xref: { document: \"core\", section: \"11.18.6.5\" },\n            children: [\n                Field({ name: \"CsrNonce\", id: 0x0, type: \"octstr\", conformance: \"M\", constraint: \"32\" }),\n                Field({ name: \"IsForUpdateNoc\", id: 0x1, type: \"bool\", conformance: \"O\", default: false })\n            ]\n        }),\n\n        Command({\n            name: \"CsrResponse\", id: 0x5, conformance: \"M\", direction: \"response\",\n\n            details: \"This command shall be generated in response to a CSRRequest Command.\" +\n                \"\\n\" +\n                \"See Section 11.18.4.9, \u201CNOCSR Information\u201D for details about the generation of the fields within \" +\n                \"this response command.\" +\n                \"\\n\" +\n                \"See Section F.3, \u201CNode Operational CSR Response test vector\u201D for an example computation of a \" +\n                \"CSRResponse.\",\n\n            xref: { document: \"core\", section: \"11.18.6.6\" },\n\n            children: [\n                Field({\n                    name: \"NocsrElements\", id: 0x0, type: \"octstr\", conformance: \"M\", constraint: \"max 900\",\n                    details: \"This field shall contain the octet string of the serialized nocsr_elements_message.\",\n                    xref: { document: \"core\", section: \"11.18.6.6.1\" }\n                }),\n\n                Field({\n                    name: \"AttestationSignature\", id: 0x1, type: \"octstr\", conformance: \"M\", constraint: \"64\",\n                    details: \"This field shall contain the octet string of the necessary attestation_signature as described in \" +\n                        \"Section 11.18.4.9, \u201CNOCSR Information\u201D.\",\n                    xref: { document: \"core\", section: \"11.18.6.6.2\" }\n                })\n            ]\n        }),\n\n        Command({\n            name: \"AddNoc\", id: 0x6, access: \"A\", conformance: \"M\", direction: \"request\",\n            response: \"NocResponse\",\n\n            details: \"This command shall add a new NOC chain to the device and commission a new Fabric association upon \" +\n                \"successful validation of all arguments and preconditions.\" +\n                \"\\n\" +\n                \"The new value shall immediately be reflected in the NOCs list attribute.\" +\n                \"\\n\" +\n                \"A Commissioner or Administrator shall issue this command after issuing the CSRRequest command and \" +\n                \"receiving its response.\" +\n                \"\\n\" +\n                \"A Commissioner or Administrator SHOULD issue this command after performing the Attestation \" +\n                \"Procedure.\",\n\n            xref: { document: \"core\", section: \"11.18.6.8\" },\n\n            children: [\n                Field({ name: \"NocValue\", id: 0x0, type: \"octstr\", conformance: \"M\", constraint: \"max 400\" }),\n                Field({ name: \"IcacValue\", id: 0x1, type: \"octstr\", conformance: \"O\", constraint: \"max 400\" }),\n\n                Field({\n                    name: \"IpkValue\", id: 0x2, type: \"octstr\", conformance: \"M\", constraint: \"16\",\n\n                    details: \"This field shall contain the value of the Epoch Key for the Identity Protection Key (IPK) to set \" +\n                        \"for the Fabric which is to be added. This is needed to bootstrap a necessary configuration value \" +\n                        \"for subsequent CASE to succeed. See Section 4.14.2.6.1, \u201CIdentity Protection Key (IPK)\u201D for details.\" +\n                        \"\\n\" +\n                        \"The IPK shall be provided as an octet string of length CRYPTO_SYMMETRIC_KEY_LENGTH_BYTES.\" +\n                        \"\\n\" +\n                        \"On successful execution of the AddNOC command, the side-effect of having provided this field shall \" +\n                        \"be equivalent to having done a GroupKeyManagement cluster KeySetWrite command invocation using the \" +\n                        \"newly joined fabric as the accessing fabric and with the following argument fields (assuming \" +\n                        \"KeySetWrite allowed a GroupKeySetID set to 0):\",\n\n                    xref: { document: \"core\", section: \"11.18.6.8.1\" }\n                }),\n\n                Field({\n                    name: \"CaseAdminSubject\", id: 0x3, type: \"subject-id\", conformance: \"M\",\n\n                    details: \"If the AddNOC command succeeds according to the semantics of the following subsections, then the \" +\n                        \"Access Control SubjectID shall be used to atomically add an Access Control Entry enabling that \" +\n                        \"Subject to subsequently administer the Node whose operational identity is being added by this \" +\n                        \"command.\" +\n                        \"\\n\" +\n                        \"The format of the new Access Control Entry, created from this, shall be:\" +\n                        \"\\n\" +\n                        \"NOTE\" +\n                        \"\\n\" +\n                        \"Unless such an Access Control Entry is added atomically as described here, there would be no way \" +\n                        \"for the caller on its given Fabric to eventually add another Access Control Entry for CASE \" +\n                        \"authentication mode, to enable the new Administrator to administer the device, since the Fabric \" +\n                        \"Scoping of the Access Control List prevents the current Node from being able to write new entries \" +\n                        \"scoped to that Fabric, if the session is established from CASE. While a session established from \" +\n                        \"PASE does gain Fabric Scope of a newly-joined Fabric, this argument is made mandatory to provide \" +\n                        \"symmetry between both types of session establishment, both of which need to eventually add an \" +\n                        \"\\\"Administer Node over CASE\\\" Access Control Entry to finalize new Fabric configuration and \" +\n                        \"subsequently be able to call the CommissioningComplete command.\",\n\n                    xref: { document: \"core\", section: \"11.18.6.8.2\" }\n                }),\n\n                Field({\n                    name: \"AdminVendorId\", id: 0x4, type: \"vendor-id\", conformance: \"M\",\n\n                    details: \"This field shall be set to the Vendor ID of the entity issuing the AddNOC command. This value shall \" +\n                        \"NOT be one of the reserved Vendor ID values defined in Table 1, \u201CVendor ID Allocations\u201D.\" +\n                        \"\\n\" +\n                        \"### Effect When Received\" +\n                        \"\\n\" +\n                        \"If this command is received without an armed fail-safe context (see Section 11.10.6.2, \u201CArmFailSafe \" +\n                        \"Command\u201D), then this command shall fail with a FAILSAFE_REQUIRED status code sent back to the \" +\n                        \"initiator.\" +\n                        \"\\n\" +\n                        \"If a prior UpdateNOC or AddNOC command was successfully executed within the fail-safe timer period, \" +\n                        \"then this command shall fail with a CONSTRAINT_ERROR status code sent back to the initiator.\" +\n                        \"\\n\" +\n                        \"If the prior CSRRequest state that preceded AddNOC had the IsForUpdateNOC field indicated as true, \" +\n                        \"then this command shall fail with a CONSTRAINT_ERROR status code sent back to the initiator.\" +\n                        \"\\n\" +\n                        \"If no prior AddTrustedRootCertificate command was successfully executed within the fail-safe timer \" +\n                        \"period, then this command shall process an error by responding with a NOCResponse with a StatusCode \" +\n                        \"of InvalidNOC as described in Section 11.18.6.7.2, \u201CHandling Errors\u201D. In other words, AddNOC always \" +\n                        \"requires that the client provides the root of trust certificate within the same Fail- Safe context \" +\n                        \"as the rest of the new fabric\u2019s operational credentials, even if some other fabric already uses the \" +\n                        \"exact same root of trust certificate.\" +\n                        \"\\n\" +\n                        \"If the NOC provided in the NOCValue encodes an Operational Identifier for a <Root Public Key, Fab\" +\n                        \"\\n\" +\n                        \"ricID> pair already present on the device, then the device shall process the error by responding \" +\n                        \"with a StatusCode of FabricConflict as described in Section 11.18.6.7.2, \u201CHandling Errors\u201D.\" +\n                        \"\\n\" +\n                        \"If the device already has the CommissionedFabrics attribute equal to the SupportedFabrics \" +\n                        \"attribute, then the device\u2019s operational credentials table is considered full and the device shall \" +\n                        \"process the error by responding with a StatusCode of TableFull as described in Section 11.18.6.7.2, \" +\n                        \"\u201CHandling Errors\u201D.\" +\n                        \"\\n\" +\n                        \"If the CaseAdminSubject field is not a valid ACL subject in the context of AuthMode set to CASE, \" +\n                        \"such as not being in either the Operational or CASE Authenticated Tag range, then the device shall \" +\n                        \"process the error by responding with a StatusCode of InvalidAdminSubject as described in Section \" +\n                        \"11.18.6.7.2, \u201CHandling Errors\u201D.\" +\n                        \"\\n\" +\n                        \"Otherwise, the command is considered an addition of credentials, also known as \\\"joining a fabric\\\", \" +\n                        \"and the following shall apply:\" +\n                        \"\\n\" +\n                        \"  1. A new FabricIndex shall be allocated, taking the next valid fabric-index value in \" +\n                        \"      monotonically incrementing order, wrapping around from 254 (0xFE) to 1, since value 0 is \" +\n                        \"      reserved and using 255 (0xFF) would prevent cluster specifications from using nullable \" +\n                        \"      fabric-idx fields.\" +\n                        \"\\n\" +\n                        \"  2. An entry within the Fabrics attribute table shall be added, reflecting the matter-fabric-id \" +\n                        \"      RDN within the NOC\u2019s subject, along with the public key of the trusted root of the chain and \" +\n                        \"      the AdminVendorID field.\" +\n                        \"\\n\" +\n                        \"  3. The operational key pair associated with the incoming NOC from the NOCValue, and generated by \" +\n                        \"      the prior CSRRequest command, shall be recorded for subsequent use during CASE within the \" +\n                        \"      fail-safe timer period (see Section 5.5, \u201CCommissioning Flows\u201D).\" +\n                        \"\\n\" +\n                        \"  4. The incoming NOCValue and ICACValue (if present) shall be stored under the FabricIndex \" +\n                        \"      associated with the new Fabric Scope, along with the RootCACertificate provided with the \" +\n                        \"      prior successful AddTrustedRootCertificate command invoked in the same fail-safe period.\" +\n                        \"\\n\" +\n                        \"    a. Implementation of certificate chain storage may separate or otherwise encode the components \" +\n                        \"       of the array in implementation-specific ways, as long as they follow the correct format when \" +\n                        \"       being read from the NOCs list or used within other protocols such as CASE.\" +\n                        \"\\n\" +\n                        \"  5. The NOCs list shall reflect the incoming NOC from the NOCValue field and ICAC from the \" +\n                        \"      ICACValue field (if present).\" +\n                        \"\\n\" +\n                        \"  6. The operational discovery service record shall immediately reflect the new Operational \" +\n                        \"      Identifier, such that the Node immediately begins to exist within the Fabric and becomes \" +\n                        \"      reachable over CASE under the new operational identity.\" +\n                        \"\\n\" +\n                        \"  7. The receiver shall create and add a new Access Control Entry using the CaseAdminSubject field \" +\n                        \"      to grant subsequent Administer access to an Administrator member of the new Fabric. It is \" +\n                        \"      recommended that the Administrator presented in CaseAdminSubject exist within the same entity \" +\n                        \"      that is currently invoking the AddNOC command, within another of the Fabrics of which it is a \" +\n                        \"      member.\" +\n                        \"\\n\" +\n                        \"  8. The incoming IPKValue shall be stored in the Fabric-scoped slot within the Group Key \" +\n                        \"      Management cluster (see KeySetWrite), for subsequent use during CASE.\" +\n                        \"\\n\" +\n                        \"  9. The Fabric Index associated with the armed fail-safe context (see Section 11.10.6.2, \" +\n                        \"      \u201CArmFailSafe Command\u201D) shall be updated to match the Fabric Index just allocated.\" +\n                        \"\\n\" +\n                        \"  10. If the current secure session was established with PASE, the receiver shall:\" +\n                        \"\\n\" +\n                        \"    a. Augment the secure session context with the FabricIndex generated above, such that \" +\n                        \"       subsequent interactions have the proper accessing fabric.\" +\n                        \"\\n\" +\n                        \"  11. If the current secure session was established with CASE, subsequent configuration of the \" +\n                        \"      newly installed Fabric requires the opening of a new CASE session from the Administrator from \" +\n                        \"      the Fabric just installed. This Administrator is the one listed in the CaseAdminSubject \" +\n                        \"      argument.\" +\n                        \"\\n\" +\n                        \"Thereafter, the Node shall respond with an NOCResponse with a StatusCode of OK and a FabricIndex \" +\n                        \"field matching the FabricIndex under which the new Node Operational Certificate (NOC) is scoped.\",\n\n                    xref: { document: \"core\", section: \"11.18.6.8.3\" }\n                })\n            ]\n        }),\n\n        Command({\n            name: \"UpdateNoc\", id: 0x7, access: \"F A\", conformance: \"M\", direction: \"request\",\n            response: \"NocResponse\",\n\n            details: \"This command shall replace the NOC and optional associated ICAC (if present) scoped under the \" +\n                \"accessing fabric upon successful validation of all arguments and preconditions. The new value shall \" +\n                \"immediately be reflected in the NOCs list attribute.\" +\n                \"\\n\" +\n                \"A Commissioner or Administrator shall issue this command after issuing the CSRRequest Command and \" +\n                \"receiving its response.\" +\n                \"\\n\" +\n                \"A Commissioner or Administrator SHOULD issue this command after performing the Attestation \" +\n                \"Procedure.\" +\n                \"\\n\" +\n                \"Effect When Received\" +\n                \"\\n\" +\n                \"If this command is received without an armed fail-safe context (see Section 11.10.6.2, \u201CArmFailSafe \" +\n                \"Command\u201D), then this command shall fail with a FAILSAFE_REQUIRED status code sent back to the \" +\n                \"initiator.\" +\n                \"\\n\" +\n                \"If a prior UpdateNOC or AddNOC command was successfully executed within the fail-safe timer period, \" +\n                \"then this command shall fail with a CONSTRAINT_ERROR status code sent back to the initiator.\" +\n                \"\\n\" +\n                \"If a prior AddTrustedRootCertificate command was successfully invoked within the fail-safe timer \" +\n                \"period, then this command shall fail with a CONSTRAINT_ERROR status code sent back to the \" +\n                \"initiator, since the only valid following logical operation is invoking the AddNOC command.\" +\n                \"\\n\" +\n                \"If the prior CSRRequest state that preceded UpdateNOC had the IsForUpdateNOC field indicated as \" +\n                \"false, then this command shall fail with a CONSTRAINT_ERROR status code sent back to the initiator.\" +\n                \"\\n\" +\n                \"If any of the following conditions arise, the Node shall process an error by responding with an\" +\n                \"\\n\" +\n                \"NOCResponse with a StatusCode of InvalidNOC as described in Section 11.18.6.7.2, \u201CHandling Errors\u201D:\" +\n                \"\\n\" +\n                \"  \u2022 The NOC provided in the NOCValue does not refer in its subject to the FabricID associated with \" +\n                \"    the accessing fabric.\" +\n                \"\\n\" +\n                \"  \u2022 The ICAC provided in the ICACValue (if present) has a FabricID in its subject that does not \" +\n                \"    match the FabricID associated with the accessing fabric.\" +\n                \"\\n\" +\n                \"Otherwise, the command is considered an update of existing credentials for a given Fabric, and the \" +\n                \"following shall apply:\" +\n                \"\\n\" +\n                \"  1. The Operational Certificate under the accessing fabric index in the NOCs list shall be updated \" +\n                \"     to match the incoming NOCValue and ICACValue (if present), such that the Node\u2019s Operational \" +\n                \"     Identifier within the Fabric immediately changes.\" +\n                \"\\n\" +\n                \"    a. The operational key pair associated with the incoming NOC from the NOCValue, and generated \" +\n                \"       by the prior CSRRequest command, shall be committed to permanent storage, for subsequent use \" +\n                \"       during CASE.\" +\n                \"\\n\" +\n                \"    b. The operational discovery service record shall immediately reflect the new Operational \" +\n                \"       Identifier.\" +\n                \"\\n\" +\n                \"    c. All internal data reflecting the prior operational identifier of the Node within the Fabric \" +\n                \"       shall be revoked and removed, to an outcome equivalent to the disappearance of the prior \" +\n                \"       Node, except for the ongoing CASE session context, which shall temporarily remain valid \" +\n                \"       until the NOCResponse has been successfully delivered or until the next transport-layer \" +\n                \"       error, so that the response can be received by the Administrator invoking the command.\" +\n                \"\\n\" +\n                \"Thereafter, the Node shall respond with an NOCResponse with a StatusCode of OK and a FabricIndex \" +\n                \"field matching the FabricIndex under which the updated NOC is scoped.\",\n\n            xref: { document: \"core\", section: \"11.18.6.9\" },\n            children: [\n                Field({ name: \"NocValue\", id: 0x0, type: \"octstr\", access: \"F\", conformance: \"M\", constraint: \"max 400\" }),\n                Field({ name: \"IcacValue\", id: 0x1, type: \"octstr\", access: \"F\", conformance: \"O\", constraint: \"max 400\" }),\n                Field({ name: \"FabricIndex\", id: 0xfe, type: \"FabricIndex\" })\n            ]\n        }),\n\n        Command({\n            name: \"NocResponse\", id: 0x8, conformance: \"M\", direction: \"response\",\n\n            details: \"This command shall be generated in response to the following commands:\" +\n                \"\\n\" +\n                \"  \u2022 AddNOC\" +\n                \"\\n\" +\n                \"  \u2022 UpdateNOC\" +\n                \"\\n\" +\n                \"  \u2022 UpdateFabricLabel\" +\n                \"\\n\" +\n                \"  \u2022 RemoveFabric\" +\n                \"\\n\" +\n                \"It provides status information about the success or failure of those commands.\",\n\n            xref: { document: \"core\", section: \"11.18.6.10\" },\n\n            children: [\n                Field({\n                    name: \"StatusCode\", id: 0x0, type: \"NodeOperationalCertStatusEnum\", conformance: \"M\",\n                    details: \"This field shall contain an NOCStatus value representing the status of an operation involving a NOC.\",\n                    xref: { document: \"core\", section: \"11.18.6.10.1\" }\n                }),\n\n                Field({\n                    name: \"FabricIndex\", id: 0x1, type: \"fabric-idx\", conformance: \"O\", constraint: \"1 to 254\",\n                    details: \"This field shall be present whenever StatusCode has a value of OK. If present, it shall contain the \" +\n                        \"Fabric Index of the Fabric last added, removed or updated.\",\n                    xref: { document: \"core\", section: \"11.18.6.10.2\" }\n                }),\n\n                Field({\n                    name: \"DebugText\", id: 0x2, type: \"string\", conformance: \"O\", constraint: \"max 128\",\n                    details: \"This field may contain debugging textual information from the cluster implementation, which SHOULD \" +\n                        \"NOT be presented to user interfaces in any way. Its purpose is to help developers in \" +\n                        \"troubleshooting errors and the contents may go into logs or crash reports.\",\n                    xref: { document: \"core\", section: \"11.18.6.10.3\" }\n                })\n            ]\n        }),\n\n        Command({\n            name: \"UpdateFabricLabel\", id: 0x9, access: \"F A\", conformance: \"M\", direction: \"request\",\n            response: \"NocResponse\",\n\n            details: \"This command shall be used by an Administrator to set the user-visible Label field for a given \" +\n                \"Fabric, as reflected by entries in the Fabrics attribute. An Administrator shall use this command \" +\n                \"to set the Label to a string (possibly selected by the user themselves) that the user can recognize \" +\n                \"and relate to this Administrator\" +\n                \"\\n\" +\n                \"  \u2022 during the commissioning process, and\" +\n                \"\\n\" +\n                \"  \u2022 whenever the user chooses to update this string.\" +\n                \"\\n\" +\n                \"The Label field, along with the VendorID field in the same entry of the Fabrics attribute, SHOULD \" +\n                \"be used by Administrators to provide additional per-fabric context when operations such as \" +\n                \"RemoveFabric are considered or used.\",\n\n            xref: { document: \"core\", section: \"11.18.6.11\" },\n\n            children: [\n                Field({\n                    name: \"Label\", id: 0x0, type: \"string\", access: \"F\", conformance: \"M\", constraint: \"max 32\",\n\n                    details: \"This field shall contain the label to set for the fabric associated with the current secure session.\" +\n                        \"\\n\" +\n                        \"Effect on Receipt\" +\n                        \"\\n\" +\n                        \"If the Label field is identical to a Label already in use by a Fabric within the Fabrics list that \" +\n                        \"is not the accessing fabric, then an NOCResponse with a StatusCode of LabelConflict shall be \" +\n                        \"returned for the command and there shall NOT be any permanent changes to any Fabric data.\" +\n                        \"\\n\" +\n                        \"Otherwise, the Label field for the accessing fabric shall immediately be updated to reflect the \" +\n                        \"Label argument provided. Following the update, an NOCResponse with a StatusCode of OK shall be \" +\n                        \"returned.\" +\n                        \"\\n\" +\n                        \"If the command was invoked within a fail-safe context after a successful UpdateNOC command, then \" +\n                        \"the label update shall apply to the pending update state that will be reverted if fail-safe expires \" +\n                        \"prior to a CommissioningComplete command. In other words, label updates apply to the state of the \" +\n                        \"Fabrics Attribute as currently visible, even for an existing fabric currently in process of being \" +\n                        \"updated.\",\n\n                    xref: { document: \"core\", section: \"11.18.6.11.1\" }\n                }),\n\n                Field({ name: \"FabricIndex\", id: 0xfe, type: \"FabricIndex\" })\n            ]\n        }),\n\n        Command({\n            name: \"RemoveFabric\", id: 0xa, access: \"A\", conformance: \"M\", direction: \"request\",\n            response: \"NocResponse\",\n\n            details: \"This command is used by Administrators to remove a given Fabric and delete all associated \" +\n                \"fabric-scoped data.\" +\n                \"\\n\" +\n                \"If the given Fabric being removed is the last one to reference a given Trusted Root CA Certificate \" +\n                \"stored in the Trusted Root Certificates list, then that Trusted Root Certificate shall be removed.\" +\n                \"\\n\" +\n                \"WARNING\" +\n                \"\\n\" +\n                \"This command, if referring to an already existing Fabric not under the control of the invoking \" +\n                \"Administrator, shall ONLY be invoked after obtaining some form of explicit user consent through \" +\n                \"some method executed by the Administrator or Commissioner. This method of obtaining consent SHOULD \" +\n                \"employ as much data as possible about the existing Fabric associations within the Fabrics list, so \" +\n                \"that likelihood is as small as possible of a user removing a Fabric unwittingly. If a method exists \" +\n                \"for an Administrator or Commissioner to convey Fabric Removal to an entity related to that Fabric, \" +\n                \"whether in-band or out-of-band, then this method SHOULD be used to notify the other Administrative \" +\n                \"Domain\u2019s party of the removal. Otherwise, users may only observe the removal of a Fabric \" +\n                \"association as persistently failing attempts to reach a Node operationally.\",\n\n            xref: { document: \"core\", section: \"11.18.6.12\" },\n\n            children: [Field({\n                name: \"FabricIndex\", id: 0x0, type: \"fabric-idx\", conformance: \"M\", constraint: \"1 to 254\",\n\n                details: \"This field shall contain the Fabric Index reference (see fabric-index) associated with the Fabric \" +\n                    \"which is to be removed from the device.\" +\n                    \"\\n\" +\n                    \"Effect on Receipt\" +\n                    \"\\n\" +\n                    \"If the FabricIndex field does not match the FabricIndex of any entry within the Fabrics list, then \" +\n                    \"an NOCResponse with a StatusCode of InvalidFabricIndex shall be returned for the command and there \" +\n                    \"shall NOT be any permanent changes to any device data.\" +\n                    \"\\n\" +\n                    \"Otherwise, one of the following outcomes shall occur:\" +\n                    \"\\n\" +\n                    \"  1. If the FabricIndex matches the last remaining entry in the Fabrics list, then the device shall \" +\n                    \"     delete all Matter related data on the node which was created since it was commissioned. This\" +\n                    \"\\n\" +\n                    \"includes all Fabric-Scoped data, including Access Control List, bindings, scenes, group keys, \" +\n                    \"operational certificates, etc. All Trusted Roots shall also be removed. If a time synchronization \" +\n                    \"cluster is present on the Node, the TrustedTimeSource and DefaultNtp shall be set to null. Any \" +\n                    \"Matter related data including logs, secure sessions, exchanges and interaction model constructs \" +\n                    \"shall also be removed. Since this operation involves the removal of the secure session data that \" +\n                    \"may underpin the current set of exchanges, the Node invoking the command SHOULD NOT expect a \" +\n                    \"response before terminating its secure session with the target.\" +\n                    \"\\n\" +\n                    \"2. If the FabricIndex does not equal the accessing fabric index, then the device shall begin the \" +\n                    \"process of irrevocably deleting all associated Fabric-Scoped data, including Access Control List, \" +\n                    \"bindings, group keys, operational certificates, etc. Any remaining Trusted Roots no longer \" +\n                    \"referenced by any operational certificate shall also be removed. If a time synchronization cluster \" +\n                    \"is present on the Node, and the TrustedTimeSource FabricIndex matches the given FabricIndex, the \" +\n                    \"TrustedTimeSource shall be set to null. All secure sessions, exchanges and interaction model \" +\n                    \"constructs related to the Operational Identity under the given Fabric shall also be removed. \" +\n                    \"Following the removal, an NOCResponse with a StatusCode of OK shall be returned.\" +\n                    \"\\n\" +\n                    \"3. If the FabricIndex equals the accessing fabric index, then the device shall begin the process of \" +\n                    \"irrevocably deleting all associated Fabric-Scoped data, including Access Control Entries, bindings, \" +\n                    \"group keys, operational certificates, etc. Any remaining Trusted Roots no longer referenced by any \" +\n                    \"operational certificate shall also be removed. If a time synchronization cluster is present on the \" +\n                    \"Node, and the TrustedTimeSource FabricIndex matches the given FabricIndex, the TrustedTimeSource \" +\n                    \"shall be set to null. All secure sessions, exchanges and interaction model constructs related to \" +\n                    \"the Operational Identity under the given Fabric shall also be removed. Since this operation \" +\n                    \"involves the removal of the secure session data that may underpin the current set of exchanges, the \" +\n                    \"Node invoking the command SHOULD NOT expect a response before terminating its secure session with \" +\n                    \"the target.\",\n\n                xref: { document: \"core\", section: \"11.18.6.12.1\" }\n            })]\n        }),\n\n        Command({\n            name: \"AddTrustedRootCertificate\", id: 0xb, access: \"A\", conformance: \"M\", direction: \"request\",\n            response: \"status\",\n\n            details: \"This command shall add a Trusted Root CA Certificate, provided as its Matter Certificate Encoding \" +\n                \"representation, to the TrustedRootCertificates Attribute list and shall ensure the next AddNOC \" +\n                \"command executed uses the provided certificate as its root of trust.\" +\n                \"\\n\" +\n                \"If the certificate from the RootCACertificate field is already installed, based on exact \" +\n                \"byte-for-byte equality, then this command shall succeed with no change to the list.\" +\n                \"\\n\" +\n                \"If this command is received without an armed fail-safe context (see Section 11.10.6.2, \u201CArmFailSafe \" +\n                \"Command\u201D), then this command shall fail with a FAILSAFE_REQUIRED status code sent back to the \" +\n                \"initiator.\" +\n                \"\\n\" +\n                \"If a prior AddTrustedRootCertificate command was successfully invoked within the fail-safe timer \" +\n                \"period, which would cause the new invocation to add a second root certificate within a given fail- \" +\n                \"safe timer period, then this command shall fail with a CONSTRAINT_ERROR status code sent back to \" +\n                \"the initiator.\" +\n                \"\\n\" +\n                \"If a prior UpdateNOC or AddNOC command was successfully executed within the fail-safe timer period, \" +\n                \"then this command shall fail with a CONSTRAINT_ERROR status code sent back to the initiator.\" +\n                \"\\n\" +\n                \"If the certificate from the RootCACertificate field fails any validity checks, not fulfilling all \" +\n                \"the requirements for a valid Matter Certificate Encoding representation, including a truncated or \" +\n                \"oversize value, then this command shall fail with an INVALID_COMMAND status code sent back to the \" +\n                \"initiator.\" +\n                \"\\n\" +\n                \"Note that the only method of removing a trusted root is by removing the Fabric that uses it as its \" +\n                \"root of trust using the RemoveFabric command.\",\n\n            xref: { document: \"core\", section: \"11.18.6.13\" },\n            children: [\n                Field({ name: \"RootCaCertificate\", id: 0x0, type: \"octstr\", conformance: \"M\", constraint: \"max 400\" })\n            ]\n        }),\n\n        Datatype({\n            name: \"CertificateChainTypeEnum\", type: \"enum8\",\n            details: \"This enumeration is used by the CertificateChainRequest command to convey which certificate from \" +\n                \"the device attestation certificate chain to transmit back to the client.\",\n            xref: { document: \"core\", section: \"11.18.4.2\" },\n\n            children: [\n                Field({\n                    name: \"DacCertificate\", id: 0x1, conformance: \"M\",\n                    description: \"Request the DER- encoded DAC certificate\"\n                }),\n                Field({\n                    name: \"PaiCertificate\", id: 0x2, conformance: \"M\",\n                    description: \"Request the DER- encoded PAI certificate\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"NodeOperationalCertStatusEnum\", type: \"enum8\",\n            details: \"This enumeration is used by the NOCResponse common response command to convey detailed outcome of \" +\n                \"several of this cluster\u2019s operations.\",\n            xref: { document: \"core\", section: \"11.18.4.3\" },\n\n            children: [\n                Field({ name: \"Ok\", id: 0x0, conformance: \"M\", description: \"OK, no error\" }),\n                Field({\n                    name: \"InvalidPublicKey\", id: 0x1, conformance: \"M\",\n                    description: \"Public Key in the NOC does not match the public key in the NOCSR\"\n                }),\n                Field({\n                    name: \"InvalidNodeOpId\", id: 0x2, conformance: \"M\",\n                    description: \"The Node Operational ID in the NOC is not formatted correctly.\"\n                }),\n                Field({\n                    name: \"InvalidNoc\", id: 0x3, conformance: \"M\",\n                    description: \"Any other validation error in NOC chain\"\n                }),\n                Field({\n                    name: \"MissingCsr\", id: 0x4, conformance: \"M\",\n                    description: \"No record of prior CSR for which this NOC could match\"\n                }),\n                Field({\n                    name: \"TableFull\", id: 0x5, conformance: \"M\",\n                    description: \"NOCs table full, cannot add another one\"\n                }),\n                Field({\n                    name: \"InvalidAdminSubject\", id: 0x6, conformance: \"M\",\n                    description: \"Invalid CaseAdminSubject field for an AddNOC command.\"\n                }),\n                Field({\n                    name: \"FabricConflict\", id: 0x9, conformance: \"M\",\n                    description: \"Trying to AddNOC instead of UpdateNOC against an existing Fabric.\"\n                }),\n                Field({\n                    name: \"LabelConflict\", id: 0xa, conformance: \"M\",\n                    description: \"Label already exists on another Fabric.\"\n                }),\n                Field({\n                    name: \"InvalidFabricIndex\", id: 0xb, conformance: \"M\",\n                    description: \"FabricIndex argument is invalid.\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"NOCStruct\", type: \"struct\",\n            details: \"This encodes a fabric sensitive NOC chain, underpinning a commissioned Operational Identity for a \" +\n                \"given Node.\" +\n                \"\\n\" +\n                \"Note that the Trusted Root CA Certificate is not included in this structure. The roots are \" +\n                \"available in the TrustedRootCertificates attribute of the Node Operational Credentials cluster.\",\n            xref: { document: \"core\", section: \"11.18.4.4\" },\n\n            children: [\n                Field({\n                    name: \"Noc\", id: 0x1, type: \"octstr\", access: \"S\", conformance: \"M\", constraint: \"max 400\",\n                    details: \"This field shall contain the NOC for the struct\u2019s associated fabric, encoded using Matter \" +\n                        \"Certificate Encoding.\",\n                    xref: { document: \"core\", section: \"11.18.4.4.1\" }\n                }),\n\n                Field({\n                    name: \"Icac\", id: 0x2, type: \"octstr\", access: \"S\", conformance: \"M\", constraint: \"max 400\",\n                    quality: \"X\",\n                    details: \"This field shall contain the ICAC or the struct\u2019s associated fabric, encoded using Matter \" +\n                        \"Certificate Encoding. If no ICAC is present in the chain, this field shall be set to null.\",\n                    xref: { document: \"core\", section: \"11.18.4.4.2\" }\n                }),\n\n                Field({ name: \"FabricIndex\", id: 0xfe, type: \"FabricIndex\" })\n            ]\n        }),\n\n        Datatype({\n            name: \"FabricDescriptorStruct\", type: \"struct\",\n            details: \"This structure encodes a Fabric Reference for a fabric within which a given Node is currently \" +\n                \"commissioned.\",\n            xref: { document: \"core\", section: \"11.18.4.5\" },\n\n            children: [\n                Field({\n                    name: \"RootPublicKey\", id: 0x1, type: \"octstr\", access: \"F\", conformance: \"M\", constraint: \"65\",\n                    details: \"This field shall contain the public key for the trusted root that scopes the fabric referenced by \" +\n                        \"FabricIndex and its associated operational credential (see Section 6.4.5.3, \u201CTrusted Root CA \" +\n                        \"Certificates\u201D). The format for the key shall be the same as that used in the ec-pub-key field of \" +\n                        \"the Matter Certificate Encoding for the root in the operational certificate chain.\",\n                    xref: { document: \"core\", section: \"11.18.4.5.1\" }\n                }),\n\n                Field({\n                    name: \"VendorId\", id: 0x2, type: \"vendor-id\", access: \"F\", conformance: \"M\", constraint: \"desc\",\n                    details: \"This field shall contain the value of AdminVendorID provided in the AddNOC command that led to the \" +\n                        \"creation of this FabricDescriptorStruct. The set of allowed values is defined in AdminVendorID.\" +\n                        \"\\n\" +\n                        \"The intent is to provide some measure of user transparency about which entities have Administer \" +\n                        \"privileges on the Node.\",\n                    xref: { document: \"core\", section: \"11.18.4.5.2\" }\n                }),\n\n                Field({\n                    name: \"FabricId\", id: 0x3, type: \"fabric-id\", access: \"F\", conformance: \"M\",\n                    details: \"This field shall contain the FabricID allocated to the fabric referenced by FabricIndex. This field \" +\n                        \"shall match the value found in the matter-fabric-id field from the operational certificate \" +\n                        \"providing the operational identity under this Fabric.\",\n                    xref: { document: \"core\", section: \"11.18.4.5.3\" }\n                }),\n\n                Field({\n                    name: \"NodeId\", id: 0x4, type: \"node-id\", access: \"F\", conformance: \"M\",\n                    details: \"This field shall contain the NodeID in use within the fabric referenced by FabricIndex. This field \" +\n                        \"shall match the value found in the matter-node-id field from the operational certificate providing \" +\n                        \"this operational identity.\",\n                    xref: { document: \"core\", section: \"11.18.4.5.4\" }\n                }),\n\n                Field({\n                    name: \"Label\", id: 0x5, type: \"string\", access: \"F\", conformance: \"M\", constraint: \"max 32\",\n                    default: \"\",\n                    details: \"This field shall contain a commissioner-set label for the fabric referenced by FabricIndex. This \" +\n                        \"label is set by the UpdateFabricLabel command.\",\n                    xref: { document: \"core\", section: \"11.18.4.5.5\" }\n                }),\n\n                Field({ name: \"FabricIndex\", id: 0xfe, type: \"FabricIndex\" })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(OperationalCredentials);\n"],
  "mappings": "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",
  "names": ["Cluster", "Attribute", "Field", "Command", "Datatype"]
}
