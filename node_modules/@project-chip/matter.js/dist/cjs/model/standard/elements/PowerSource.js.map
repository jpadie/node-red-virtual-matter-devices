{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/PowerSource.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    FieldElement as Field,\n    EventElement as Event,\n    DatatypeElement as Datatype\n} from \"../../elements/index.js\";\n\nexport const PowerSource = Cluster({\n    name: \"PowerSource\", id: 0x2f, classification: \"node\", pics: \"PS\",\n    details: \"This cluster is used to describe the configuration and capabilities of a physical power source that \" +\n        \"provides power to one or more endpoints on a node. In case the node has multiple power sources, \" +\n        \"each is described by its own cluster instance. Each instance of this cluster may be associated with \" +\n        \"one or more endpoints or the entire node.\",\n    xref: { document: \"core\", section: \"11.7\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 2 }),\n\n        Attribute({\n            name: \"FeatureMap\", id: 0xfffc, type: \"FeatureMap\",\n            xref: { document: \"core\", section: \"11.7.4\" },\n\n            children: [\n                Field({\n                    name: \"WIRED\", conformance: \"O\", constraint: \"0\", description: \"Wired\",\n                    details: \"A wired power source\"\n                }),\n                Field({\n                    name: \"BAT\", conformance: \"O\", constraint: \"1\", description: \"Battery\",\n                    details: \"A battery power source\"\n                }),\n                Field({\n                    name: \"RECHG\", conformance: \"[BAT]\", constraint: \"2\", description: \"Rechargeable\",\n                    details: \"A rechargeable battery power source\"\n                }),\n                Field({\n                    name: \"REPLC\", conformance: \"[BAT]\", constraint: \"3\", description: \"Replaceable\",\n                    details: \"A replaceable battery power source\"\n                })\n            ]\n        }),\n\n        Attribute({\n            name: \"Status\", id: 0x0, type: \"PowerSourceStatusEnum\", access: \"R V\", conformance: \"M\",\n            constraint: \"desc\",\n            details: \"Indicates the participation of this power source in providing power to the Node as specified in \" +\n                \"PowerSourceStatusEnum.\",\n            xref: { document: \"core\", section: \"11.7.7.1\" }\n        }),\n\n        Attribute({\n            name: \"Order\", id: 0x1, type: \"uint8\", access: \"R V\", conformance: \"M\", quality: \"N\",\n\n            details: \"Indicates the relative preference with which the Node will select this source to provide power. A \" +\n                \"source with a lower order shall be selected by the Node to provide power before any other source \" +\n                \"with a higher order, if the lower order source is available (see Status).\" +\n                \"\\n\" +\n                \"Note, Order is read-only and therefore NOT intended to allow clients control over power source \" +\n                \"selection.\",\n\n            xref: { document: \"core\", section: \"11.7.7.2\" }\n        }),\n\n        Attribute({\n            name: \"Description\", id: 0x2, type: \"string\", access: \"R V\", conformance: \"M\", constraint: \"max 60\",\n            quality: \"F\",\n            details: \"This attribute shall provide a user-facing description of this source, used to distinguish it from \" +\n                \"other power sources, e.g. \\\"DC Power\\\", \\\"Primary Battery\\\" or \\\"Battery back-up\\\". This attribute shall \" +\n                \"NOT be used to convey information such as battery form factor, or chemistry.\",\n            xref: { document: \"core\", section: \"11.7.7.3\" }\n        }),\n\n        Attribute({\n            name: \"WiredAssessedInputVoltage\", id: 0x3, type: \"uint32\", access: \"R V\", conformance: \"[WIRED]\",\n            quality: \"X C\",\n            details: \"Indicates the assessed RMS or DC voltage currently provided by the hard-wired source, in mV \" +\n                \"(millivolts). A value of NULL shall indicate the Node is currently unable to assess the value. If \" +\n                \"the wired source is not connected, but the Node is still able to assess a value, then the assessed \" +\n                \"value may be reported.\",\n            xref: { document: \"core\", section: \"11.7.7.4\" }\n        }),\n\n        Attribute({\n            name: \"WiredAssessedInputFrequency\", id: 0x4, type: \"uint16\", access: \"R V\", conformance: \"[WIRED]\",\n            quality: \"X C\",\n            details: \"Indicates the assessed frequency of the voltage, currently provided by the hard-wired source, in \" +\n                \"Hz. A value of NULL shall indicate the Node is currently unable to assess the value. If the wired \" +\n                \"source is not connected, but the Node is still able to assess a value, then the assessed value may \" +\n                \"be reported.\",\n            xref: { document: \"core\", section: \"11.7.7.5\" }\n        }),\n\n        Attribute({\n            name: \"WiredCurrentType\", id: 0x5, type: \"WiredCurrentTypeEnum\", access: \"R V\",\n            conformance: \"WIRED\", constraint: \"desc\", quality: \"F\",\n            details: \"Indicates the type of current the Node expects to be provided by the hard- wired source as \" +\n                \"specified in WiredCurrentTypeEnum.\",\n            xref: { document: \"core\", section: \"11.7.7.6\" }\n        }),\n\n        Attribute({\n            name: \"WiredAssessedCurrent\", id: 0x6, type: \"uint32\", access: \"R V\", conformance: \"[WIRED]\",\n            quality: \"X C\",\n            details: \"Indicates the assessed instantaneous current draw of the Node on the hard- wired source, in mA \" +\n                \"(milliamps). A value of NULL shall indicate the Node is currently unable to assess the value. If \" +\n                \"the wired source is not connected, but the Node is still able to assess a value, then the assessed \" +\n                \"value may be reported.\",\n            xref: { document: \"core\", section: \"11.7.7.7\" }\n        }),\n\n        Attribute({\n            name: \"WiredNominalVoltage\", id: 0x7, type: \"uint32\", access: \"R V\", conformance: \"[WIRED]\",\n            quality: \"F\",\n            details: \"Indicates the nominal voltage, printed as part of the Node\u2019s regulatory compliance label in mV \" +\n                \"(millivolts), expected to be provided by the hard-wired source.\",\n            xref: { document: \"core\", section: \"11.7.7.8\" }\n        }),\n\n        Attribute({\n            name: \"WiredMaximumCurrent\", id: 0x8, type: \"uint32\", access: \"R V\", conformance: \"[WIRED]\",\n            quality: \"F\",\n            details: \"Indicates the maximum current, printed as part of the Node\u2019s regulatory compliance label in mA \" +\n                \"(milliamps), expected to be provided by the hard-wired source.\",\n            xref: { document: \"core\", section: \"11.7.7.9\" }\n        }),\n\n        Attribute({\n            name: \"WiredPresent\", id: 0x9, type: \"bool\", access: \"R V\", conformance: \"[WIRED]\",\n            details: \"Indicates if the Node detects that the hard-wired power source is properly connected.\",\n            xref: { document: \"core\", section: \"11.7.7.10\" }\n        }),\n\n        Attribute({\n            name: \"ActiveWiredFaults\", id: 0xa, type: \"list\", access: \"R V\", conformance: \"[WIRED]\",\n            constraint: \"max 8\",\n\n            details: \"Indicates the set of wired faults currently detected by the Node on this power source. This set is \" +\n                \"represented as a list of WiredFaultEnum. When the Node detects a fault has been raised, the \" +\n                \"appropriate WiredFaultEnum value shall be added to this list, provided it is not already present. \" +\n                \"This list shall NOT contain more than one instance of a specific WiredFaultEnum value. When the \" +\n                \"Node detects all conditions contributing to a fault have been cleared, the corresponding \" +\n                \"WiredFaultEnum value shall be removed from this list. An empty list shall indicate there are \" +\n                \"currently no active faults. The order of this list SHOULD have no significance. Clients interested \" +\n                \"in monitoring changes in active faults may subscribe to this attribute, or they may subscribe to \" +\n                \"WiredFaultChange.\",\n\n            xref: { document: \"core\", section: \"11.7.7.11\" },\n            children: [Field({ name: \"entry\", type: \"WiredFaultEnum\" })]\n        }),\n\n        Attribute({\n            name: \"BatVoltage\", id: 0xb, type: \"uint32\", access: \"R V\", conformance: \"[BAT]\", quality: \"X C\",\n            details: \"Indicates the currently measured output voltage of the battery in mV (millivolts). A value of NULL \" +\n                \"shall indicate the Node is currently unable to assess the value.\",\n            xref: { document: \"core\", section: \"11.7.7.12\" }\n        }),\n\n        Attribute({\n            name: \"BatPercentRemaining\", id: 0xc, type: \"uint8\", access: \"R V\", conformance: \"[BAT]\",\n            constraint: \"0 to 200\", quality: \"X C\",\n            details: \"Indicates the estimated percentage of battery charge remaining until the battery will no longer be \" +\n                \"able to provide power to the Node. Values are expressed in half percent units, ranging from 0 to \" +\n                \"200. E.g. a value of 48 is equivalent to 24%. A value of NULL shall indicate the Node is currently \" +\n                \"unable to assess the value.\",\n            xref: { document: \"core\", section: \"11.7.7.13\" }\n        }),\n\n        Attribute({\n            name: \"BatTimeRemaining\", id: 0xd, type: \"uint32\", access: \"R V\", conformance: \"[BAT]\",\n            quality: \"X C\",\n            details: \"Indicates the estimated time in seconds before the battery will no longer be able to provide power \" +\n                \"to the Node. A value of NULL shall indicate the Node is currently unable to assess the value.\",\n            xref: { document: \"core\", section: \"11.7.7.14\" }\n        }),\n\n        Attribute({\n            name: \"BatChargeLevel\", id: 0xe, type: \"BatChargeLevelEnum\", access: \"R V\", conformance: \"BAT\",\n            constraint: \"desc\",\n            details: \"Indicates a coarse ranking of the charge level of the battery, used to indicate when intervention \" +\n                \"is required as specified in BatChargeLevelEnum.\",\n            xref: { document: \"core\", section: \"11.7.7.15\" }\n        }),\n\n        Attribute({\n            name: \"BatReplacementNeeded\", id: 0xf, type: \"bool\", access: \"R V\", conformance: \"BAT\",\n            details: \"Indicates if the battery needs to be replaced. Replacement may be simple routine maintenance, such \" +\n                \"as with a single use, non-rechargeable cell. Replacement, however, may also indicate end of life, \" +\n                \"or serious fault with a rechargeable or even non-replaceable cell.\",\n            xref: { document: \"core\", section: \"11.7.7.16\" }\n        }),\n\n        Attribute({\n            name: \"BatReplaceability\", id: 0x10, type: \"BatReplaceabilityEnum\", access: \"R V\",\n            conformance: \"BAT\", quality: \"F\",\n            details: \"Indicates the replaceability of the battery as specified in BatReplaceabilityEnum.\",\n            xref: { document: \"core\", section: \"11.7.7.17\" }\n        }),\n\n        Attribute({\n            name: \"BatPresent\", id: 0x11, type: \"bool\", access: \"R V\", conformance: \"[BAT]\",\n            details: \"Indicates whether the Node detects that the batteries are properly installed.\",\n            xref: { document: \"core\", section: \"11.7.7.18\" }\n        }),\n\n        Attribute({\n            name: \"ActiveBatFaults\", id: 0x12, type: \"list\", access: \"R V\", conformance: \"[BAT]\",\n            constraint: \"max 8\",\n\n            details: \"Indicates the set of battery faults currently detected by the Node on this power source. This set \" +\n                \"is represented as a list of BatFaultEnum. When the Node detects a fault has been raised, the \" +\n                \"appropriate BatFaultEnum value shall be added to this list, provided it is not already present. \" +\n                \"This list shall NOT contain more than one instance of a specific BatFaultEnum value. When the Node \" +\n                \"detects all conditions contributing to a fault have been cleared, the corresponding BatFaultEnum \" +\n                \"value shall be removed from this list. An empty list shall indicate there are currently no active \" +\n                \"faults. The order of this list SHOULD have no significance. Clients interested in monitoring \" +\n                \"changes in active faults may subscribe to this attribute, or they may subscribe to BatFaultChange.\",\n\n            xref: { document: \"core\", section: \"11.7.7.19\" },\n            children: [Field({ name: \"entry\", type: \"BatFaultEnum\" })]\n        }),\n\n        Attribute({\n            name: \"BatReplacementDescription\", id: 0x13, type: \"string\", access: \"R V\", conformance: \"REPLC\",\n            constraint: \"max 60\", quality: \"F\",\n            details: \"This attribute shall provide a user-facing description of this battery, which SHOULD contain \" +\n                \"information required to identify a replacement, such as form factor, chemistry or preferred \" +\n                \"manufacturer.\",\n            xref: { document: \"core\", section: \"11.7.7.20\" }\n        }),\n\n        Attribute({\n            name: \"BatCommonDesignation\", id: 0x14, type: \"BatCommonDesignationEnum\", access: \"R V\",\n            conformance: \"[REPLC]\", constraint: \"desc\", quality: \"F\",\n            details: \"Indicates the ID of the common or colloquial designation of the battery, as specified in \" +\n                \"BatCommonDesignationEnum.\",\n            xref: { document: \"core\", section: \"11.7.7.21\" }\n        }),\n\n        Attribute({\n            name: \"BatAnsiDesignation\", id: 0x15, type: \"string\", access: \"R V\", conformance: \"[REPLC]\",\n            constraint: \"max 20\", quality: \"F\",\n            details: \"Indicates the string representing the ANSI designation for the battery as specified in ANSI C18.\",\n            xref: { document: \"core\", section: \"11.7.7.22\" }\n        }),\n\n        Attribute({\n            name: \"BatIecDesignation\", id: 0x16, type: \"string\", access: \"R V\", conformance: \"[REPLC]\",\n            constraint: \"max 20\", quality: \"F\",\n            details: \"Indicates the string representing the IEC designation for the battery as specified in IEC 60086.\",\n            xref: { document: \"core\", section: \"11.7.7.23\" }\n        }),\n\n        Attribute({\n            name: \"BatApprovedChemistry\", id: 0x17, type: \"BatApprovedChemistryEnum\", access: \"R V\",\n            conformance: \"[REPLC]\", constraint: \"desc\", quality: \"F\",\n            details: \"Indicates the ID of the preferred chemistry of the battery source as specified in \" +\n                \"BatApprovedChemistryEnum.\",\n            xref: { document: \"core\", section: \"11.7.7.24\" }\n        }),\n\n        Attribute({\n            name: \"BatCapacity\", id: 0x18, type: \"uint32\", access: \"R V\", conformance: \"[REPLC | RECHG]\",\n            quality: \"F\",\n            details: \"Indicates the preferred minimum charge capacity rating in mAh of individual, user- or \" +\n                \"factory-serviceable battery cells or packs in the battery source.\",\n            xref: { document: \"core\", section: \"11.7.7.25\" }\n        }),\n\n        Attribute({\n            name: \"BatQuantity\", id: 0x19, type: \"uint8\", access: \"R V\", conformance: \"REPLC\", quality: \"F\",\n            details: \"Indicates the quantity of individual, user- or factory-serviceable battery cells or packs in the \" +\n                \"battery source.\",\n            xref: { document: \"core\", section: \"11.7.7.26\" }\n        }),\n\n        Attribute({\n            name: \"BatChargeState\", id: 0x1a, type: \"BatChargeStateEnum\", access: \"R V\", conformance: \"RECHG\",\n            constraint: \"desc\",\n            details: \"Indicates the current state of the battery source with respect to charging as specified in \" +\n                \"BatChargeStateEnum.\",\n            xref: { document: \"core\", section: \"11.7.7.27\" }\n        }),\n\n        Attribute({\n            name: \"BatTimeToFullCharge\", id: 0x1b, type: \"uint32\", access: \"R V\", conformance: \"[RECHG]\",\n            quality: \"X C\",\n            details: \"Indicates the estimated time in seconds before the battery source will be at full charge. A value \" +\n                \"of NULL shall indicate the Node is currently unable to assess the value.\",\n            xref: { document: \"core\", section: \"11.7.7.28\" }\n        }),\n\n        Attribute({\n            name: \"BatFunctionalWhileCharging\", id: 0x1c, type: \"bool\", access: \"R V\", conformance: \"RECHG\",\n            details: \"Indicates whether the Node can remain operational while the battery source is charging.\",\n            xref: { document: \"core\", section: \"11.7.7.29\" }\n        }),\n\n        Attribute({\n            name: \"BatChargingCurrent\", id: 0x1d, type: \"uint32\", access: \"R V\", conformance: \"[RECHG]\",\n            quality: \"X C\",\n            details: \"Indicates assessed current in mA (milliamps) presently supplied to charge the battery source. A \" +\n                \"value of NULL shall indicate the Node is currently unable to assess the value.\",\n            xref: { document: \"core\", section: \"11.7.7.30\" }\n        }),\n\n        Attribute({\n            name: \"ActiveBatChargeFaults\", id: 0x1e, type: \"list\", access: \"R V\", conformance: \"[RECHG]\",\n            constraint: \"max 16\",\n\n            details: \"Indicates the set of charge faults currently detected by the Node on this power source. This set is \" +\n                \"represented as a list of BatChargeFaultEnum. When the Node detects a fault has been raised, the \" +\n                \"appropriate BatChargeFaultEnum value shall be added to this list, provided it is not already \" +\n                \"present. This list shall NOT contain more than one instance of a specific BatChargeFaultEnum value. \" +\n                \"When the Node detects all conditions contributing to a fault have been cleared, the corresponding \" +\n                \"BatChargeFaultEnum value shall be removed from this list. An empty list shall indicate there are \" +\n                \"currently no active faults. The order of this list SHOULD have no significance. Clients interested \" +\n                \"in monitoring changes in active faults may subscribe to this attribute, or they may subscribe to \" +\n                \"the BatFaultChange event.\",\n\n            xref: { document: \"core\", section: \"11.7.7.31\" },\n            children: [Field({ name: \"entry\", type: \"BatChargeFaultEnum\" })]\n        }),\n\n        Attribute({\n            name: \"EndpointList\", id: 0x1f, type: \"list\", access: \"R V\", conformance: \"M\",\n\n            details: \"Indicates a list of endpoints that are powered by the source defined by this cluster. Multiple \" +\n                \"instances of this cluster may list the same endpoint, because it is possible for power for an \" +\n                \"endpoint to come from multiple sources. In that case the Order attribute indicates their priority.\" +\n                \"\\n\" +\n                \"For each power source on a node, there shall only be one instance of this cluster.\" +\n                \"\\n\" +\n                \"A cluster instance with an empty list shall indicate that the power source is for the entire node, \" +\n                \"which includes all endpoints.\" +\n                \"\\n\" +\n                \"A cluster instance with a non-empty list shall include the endpoint, upon which the cluster \" +\n                \"instance resides.\" +\n                \"\\n\" +\n                \"The above rules allow that some endpoints can have an unknown power source, and therefore would not \" +\n                \"be indicated by any instance of this cluster.\" +\n                \"\\n\" +\n                \"Empty list examples\" +\n                \"\\n\" +\n                \"Typically, there is one power source for the node. Also common is mains power for the node with \" +\n                \"battery backup power for the node. In both these common cases, for each cluster instance described, \" +\n                \"the list is empty.\" +\n                \"\\n\" +\n                \"Populated list example\" +\n                \"\\n\" +\n                \"A node has a mains power source with Order as 0 (zero), but some application endpoints (not all) \" +\n                \"have a battery back up source with Order as 1, which means this list is empty for the Power Source \" +\n                \"cluster associated with the mains power, because it indicates the entire node, but the Power Source \" +\n                \"cluster instance associated with the battery backup would list the endpoints that have a battery \" +\n                \"backup.\",\n\n            xref: { document: \"core\", section: \"11.7.7.32\" },\n            children: [Field({ name: \"entry\", type: \"endpoint-no\" })]\n        }),\n\n        Event({\n            name: \"WiredFaultChange\", id: 0x0, access: \"V\", conformance: \"[WIRED]\", priority: \"info\",\n            details: \"The WiredFaultChange Event shall be generated when the set of wired faults currently detected by \" +\n                \"the Node on this wired power source changes. This event shall correspond to a change in value of \" +\n                \"ActiveWiredFaults.\",\n            xref: { document: \"core\", section: \"11.7.8.1\" },\n\n            children: [\n                Field({\n                    name: \"Current\", id: 0x0, type: \"list\", conformance: \"M\", constraint: \"max 8\", default: [],\n                    details: \"This field shall represent the set of faults currently detected, as per ActiveWiredFaults.\",\n                    xref: { document: \"core\", section: \"11.7.8.1.1\" },\n                    children: [Field({ name: \"entry\", type: \"WiredFaultEnum\" })]\n                }),\n\n                Field({\n                    name: \"Previous\", id: 0x1, type: \"list\", conformance: \"M\", constraint: \"max 8\", default: [],\n                    details: \"This field shall represent the set of faults detected prior to this change event, as per \" +\n                        \"ActiveWiredFaults.\",\n                    xref: { document: \"core\", section: \"11.7.8.1.2\" },\n                    children: [Field({ name: \"entry\", type: \"WiredFaultEnum\" })]\n                })\n            ]\n        }),\n\n        Event({\n            name: \"BatFaultChange\", id: 0x1, access: \"V\", conformance: \"[BAT]\", priority: \"info\",\n            details: \"The BatFaultChange Event shall be generated when the set of battery faults currently detected by \" +\n                \"the Node on this battery power source changes. This event shall correspond to a change in value of \" +\n                \"ActiveBatFaults.\",\n            xref: { document: \"core\", section: \"11.7.8.2\" },\n\n            children: [\n                Field({\n                    name: \"Current\", id: 0x0, type: \"list\", conformance: \"M\", constraint: \"max 8\", default: [],\n                    details: \"This field shall represent the set of faults currently detected, as per ActiveBatFaults.\",\n                    xref: { document: \"core\", section: \"11.7.8.2.1\" },\n                    children: [Field({ name: \"entry\", type: \"BatFaultEnum\" })]\n                }),\n\n                Field({\n                    name: \"Previous\", id: 0x1, type: \"list\", conformance: \"M\", constraint: \"max 8\", default: [],\n                    details: \"This field shall represent the set of faults detected prior to this change event, as per \" +\n                        \"ActiveBatFaults.\",\n                    xref: { document: \"core\", section: \"11.7.8.2.2\" },\n                    children: [Field({ name: \"entry\", type: \"BatFaultEnum\" })]\n                })\n            ]\n        }),\n\n        Event({\n            name: \"BatChargeFaultChange\", id: 0x2, access: \"V\", conformance: \"[RECHG]\", priority: \"info\",\n            details: \"The BatChargeFaultChange Event shall be generated when the set of charge faults currently detected \" +\n                \"by the Node on this battery power source changes. This event shall correspond to a change in value \" +\n                \"of ActiveBatChargeFaults.\",\n            xref: { document: \"core\", section: \"11.7.8.3\" },\n\n            children: [\n                Field({\n                    name: \"Current\", id: 0x0, type: \"list\", conformance: \"M\", constraint: \"max 16\", default: [],\n                    details: \"This field shall represent the set of faults currently detected, as per ActiveBatChargeFaults.\",\n                    xref: { document: \"core\", section: \"11.7.8.3.1\" },\n                    children: [Field({ name: \"entry\", type: \"BatChargeFaultEnum\" })]\n                }),\n\n                Field({\n                    name: \"Previous\", id: 0x1, type: \"list\", conformance: \"M\", constraint: \"max 16\", default: [],\n                    details: \"This field shall represent the set of faults detected prior to this change event, as per \" +\n                        \"ActiveBatChargeFaults.\",\n                    xref: { document: \"core\", section: \"11.7.8.3.2\" },\n                    children: [Field({ name: \"entry\", type: \"BatChargeFaultEnum\" })]\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"WiredFaultEnum\", type: \"enum8\",\n            xref: { document: \"core\", section: \"11.7.6.1\" },\n\n            children: [\n                Field({\n                    name: \"Unspecified\", id: 0x0, conformance: \"M\",\n                    description: \"The Node detects an unspecified fault on this wired power source.\"\n                }),\n                Field({\n                    name: \"OverVoltage\", id: 0x1, conformance: \"M\",\n                    description: \"The Node detects the supplied voltage is above maximum supported value for this wired power source.\"\n                }),\n                Field({\n                    name: \"UnderVoltage\", id: 0x2, conformance: \"M\",\n                    description: \"The Node detects the supplied voltage is below maximum supported value for this wired power source.\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"BatFaultEnum\", type: \"enum8\",\n            xref: { document: \"core\", section: \"11.7.6.2\" },\n\n            children: [\n                Field({\n                    name: \"Unspecified\", id: 0x0, conformance: \"M\",\n                    description: \"The Node detects an unspecified fault on this battery power source.\"\n                }),\n                Field({\n                    name: \"OverTemp\", id: 0x1, conformance: \"M\",\n                    description: \"The Node detects the temperature of this battery power source is above ideal operating conditions.\"\n                }),\n                Field({\n                    name: \"UnderTemp\", id: 0x2, conformance: \"M\",\n                    description: \"The Node detects the temperature of this battery power source is below ideal operating conditions.\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"BatChargeFaultEnum\", type: \"enum8\",\n            xref: { document: \"core\", section: \"11.7.6.3\" },\n\n            children: [\n                Field({\n                    name: \"Unspecified\", id: 0x0, conformance: \"M\",\n                    description: \"The Node detects an unspecified fault on this battery source.\"\n                }),\n                Field({\n                    name: \"AmbientTooHot\", id: 0x1, conformance: \"M\",\n                    description: \"The Node detects the ambient temperature is above the nominal range for this battery source.\"\n                }),\n                Field({\n                    name: \"AmbientTooCold\", id: 0x2, conformance: \"M\",\n                    description: \"The Node detects the ambient temperature is below the nominal range for this battery source.\"\n                }),\n                Field({\n                    name: \"BatteryTooHot\", id: 0x3, conformance: \"M\",\n                    description: \"The Node detects the temperature of this battery source is above the nominal range.\"\n                }),\n                Field({\n                    name: \"BatteryTooCold\", id: 0x4, conformance: \"M\",\n                    description: \"The Node detects the temperature of this battery source is below the nominal range.\"\n                }),\n                Field({\n                    name: \"BatteryAbsent\", id: 0x5, conformance: \"M\",\n                    description: \"The Node detects this battery source is not present.\"\n                }),\n                Field({\n                    name: \"BatteryOverVoltage\", id: 0x6, conformance: \"M\",\n                    description: \"The Node detects this battery source is over voltage.\"\n                }),\n                Field({\n                    name: \"BatteryUnderVoltage\", id: 0x7, conformance: \"M\",\n                    description: \"The Node detects this battery source is under voltage.\"\n                }),\n                Field({\n                    name: \"ChargerOverVoltage\", id: 0x8, conformance: \"M\",\n                    description: \"The Node detects the charger for this battery source is over voltage.\"\n                }),\n                Field({\n                    name: \"ChargerUnderVoltage\", id: 0x9, conformance: \"M\",\n                    description: \"The Node detects the charger for this battery source is under voltage.\"\n                }),\n                Field({\n                    name: \"SafetyTimeout\", id: 0xa, conformance: \"M\",\n                    description: \"The Node detects a charging safety timeout for this battery source.\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"PowerSourceStatusEnum\", type: \"enum8\",\n            xref: { document: \"core\", section: \"11.7.6.4\" },\n\n            children: [\n                Field({\n                    name: \"Unspecified\", id: 0x0, conformance: \"M\",\n                    description: \"Indicate the source status is not specified\"\n                }),\n                Field({\n                    name: \"Active\", id: 0x1, conformance: \"M\",\n                    description: \"Indicate the source is available and currently supplying power\"\n                }),\n                Field({\n                    name: \"Standby\", id: 0x2, conformance: \"M\",\n                    description: \"Indicate the source is available, but is not currently supplying power\"\n                }),\n                Field({\n                    name: \"Unavailable\", id: 0x3, conformance: \"M\",\n                    description: \"Indicate the source is not currently available to supply power\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"WiredCurrentTypeEnum\", type: \"enum8\",\n            xref: { document: \"core\", section: \"11.7.6.5\" },\n            children: [\n                Field({ name: \"Ac\", id: 0x0, conformance: \"M\", description: \"Indicates AC current\" }),\n                Field({ name: \"Dc\", id: 0x1, conformance: \"M\", description: \"Indicates DC current\" })\n            ]\n        }),\n\n        Datatype({\n            name: \"BatChargeLevelEnum\", type: \"enum8\",\n            xref: { document: \"core\", section: \"11.7.6.6\" },\n\n            children: [\n                Field({ name: \"Ok\", id: 0x0, conformance: \"M\", description: \"Charge level is nominal\" }),\n                Field({\n                    name: \"Warning\", id: 0x1, conformance: \"M\",\n                    description: \"Charge level is low, intervention may soon be required.\"\n                }),\n                Field({\n                    name: \"Critical\", id: 0x2, conformance: \"M\",\n                    description: \"Charge level is critical, immediate intervention is required\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"BatReplaceabilityEnum\", type: \"enum8\",\n            xref: { document: \"core\", section: \"11.7.6.7\" },\n\n            children: [\n                Field({\n                    name: \"Unspecified\", id: 0x0, conformance: \"M\",\n                    description: \"The replaceability is unspecified or unknown.\"\n                }),\n                Field({\n                    name: \"NotReplaceable\", id: 0x1, conformance: \"M\", description: \"The battery is not replaceable.\"\n                }),\n                Field({\n                    name: \"UserReplaceable\", id: 0x2, conformance: \"M\",\n                    description: \"The battery is replaceable by the user or customer.\"\n                }),\n                Field({\n                    name: \"FactoryReplaceable\", id: 0x3, conformance: \"M\",\n                    description: \"The battery is replaceable by an authorized factory technician.\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"BatCommonDesignationEnum\", type: \"enum16\",\n            xref: { document: \"core\", section: \"11.7.6.8\" },\n\n            children: [\n                Field({\n                    name: \"Unspecified\", id: 0x0, conformance: \"M\",\n                    description: \"Common type is unknown or unspecified\"\n                }),\n                Field({ name: \"Aaa\", id: 0x1, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Aa\", id: 0x2, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"C\", id: 0x3, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"D\", id: 0x4, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"4V5\", id: 0x5, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"6V0\", id: 0x6, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"9V0\", id: 0x7, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"12Aa\", id: 0x8, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Aaaa\", id: 0x9, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"A\", id: 0xa, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"B\", id: 0xb, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"F\", id: 0xc, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"N\", id: 0xd, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"No6\", id: 0xe, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"SubC\", id: 0xf, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"A23\", id: 0x10, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"A27\", id: 0x11, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Ba5800\", id: 0x12, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Duplex\", id: 0x13, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"4Sr44\", id: 0x14, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"523\", id: 0x15, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"531\", id: 0x16, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"15V0\", id: 0x17, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"22V5\", id: 0x18, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"30V0\", id: 0x19, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"45V0\", id: 0x1a, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"67V5\", id: 0x1b, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"J\", id: 0x1c, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Cr123A\", id: 0x1d, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Cr2\", id: 0x1e, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"2Cr5\", id: 0x1f, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"CrP2\", id: 0x20, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"CrV3\", id: 0x21, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr41\", id: 0x22, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr43\", id: 0x23, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr44\", id: 0x24, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr45\", id: 0x25, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr48\", id: 0x26, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr54\", id: 0x27, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr55\", id: 0x28, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr57\", id: 0x29, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr58\", id: 0x2a, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr59\", id: 0x2b, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr60\", id: 0x2c, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr63\", id: 0x2d, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr64\", id: 0x2e, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr65\", id: 0x2f, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr66\", id: 0x30, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr67\", id: 0x31, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr68\", id: 0x32, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr69\", id: 0x33, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr516\", id: 0x34, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr731\", id: 0x35, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Sr712\", id: 0x36, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Lr932\", id: 0x37, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"A5\", id: 0x38, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"A10\", id: 0x39, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"A13\", id: 0x3a, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"A312\", id: 0x3b, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"A675\", id: 0x3c, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Ac41E\", id: 0x3d, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"10180\", id: 0x3e, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"10280\", id: 0x3f, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"10440\", id: 0x40, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"14250\", id: 0x41, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"14430\", id: 0x42, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"14500\", id: 0x43, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"14650\", id: 0x44, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"15270\", id: 0x45, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"16340\", id: 0x46, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"Rcr123A\", id: 0x47, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"17500\", id: 0x48, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"17670\", id: 0x49, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"18350\", id: 0x4a, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"18500\", id: 0x4b, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"18650\", id: 0x4c, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"19670\", id: 0x4d, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"25500\", id: 0x4e, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"26650\", id: 0x4f, conformance: \"M\", description: \"Common type is as specified\" }),\n                Field({ name: \"32600\", id: 0x50, conformance: \"M\", description: \"Common type is as specified\" })\n            ]\n        }),\n\n        Datatype({\n            name: \"BatApprovedChemistryEnum\", type: \"enum16\",\n            xref: { document: \"core\", section: \"11.7.6.9\" },\n\n            children: [\n                Field({\n                    name: \"Unspecified\", id: 0x0, conformance: \"M\",\n                    description: \"Cell chemistry is unspecified or unknown\"\n                }),\n                Field({ name: \"Alkaline\", id: 0x1, conformance: \"M\", description: \"Cell chemistry is alkaline\" }),\n                Field({\n                    name: \"LithiumCarbonFluoride\", id: 0x2, conformance: \"M\",\n                    description: \"Cell chemistry is lithium carbon fluoride\"\n                }),\n                Field({\n                    name: \"LithiumChromiumOxide\", id: 0x3, conformance: \"M\",\n                    description: \"Cell chemistry is lithium chromium oxide\"\n                }),\n                Field({\n                    name: \"LithiumCopperOxide\", id: 0x4, conformance: \"M\",\n                    description: \"Cell chemistry is lithium copper oxide\"\n                }),\n                Field({\n                    name: \"LithiumIronDisulfide\", id: 0x5, conformance: \"M\",\n                    description: \"Cell chemistry is lithium iron disulfide\"\n                }),\n                Field({\n                    name: \"LithiumManganeseDioxide\", id: 0x6, conformance: \"M\",\n                    description: \"Cell chemistry is lithium manganese dioxide\"\n                }),\n                Field({\n                    name: \"LithiumThionylChloride\", id: 0x7, conformance: \"M\",\n                    description: \"Cell chemistry is lithium thionyl chloride\"\n                }),\n                Field({ name: \"Magnesium\", id: 0x8, conformance: \"M\", description: \"Cell chemistry is magnesium\" }),\n                Field({ name: \"MercuryOxide\", id: 0x9, conformance: \"M\", description: \"Cell chemistry is mercury oxide\" }),\n                Field({\n                    name: \"NickelOxyhydride\", id: 0xa, conformance: \"M\",\n                    description: \"Cell chemistry is nickel oxyhydride\"\n                }),\n                Field({ name: \"SilverOxide\", id: 0xb, conformance: \"M\", description: \"Cell chemistry is silver oxide\" }),\n                Field({ name: \"ZincAir\", id: 0xc, conformance: \"M\", description: \"Cell chemistry is zinc air\" }),\n                Field({ name: \"ZincCarbon\", id: 0xd, conformance: \"M\", description: \"Cell chemistry is zinc carbon\" }),\n                Field({ name: \"ZincChloride\", id: 0xe, conformance: \"M\", description: \"Cell chemistry is zinc chloride\" }),\n                Field({\n                    name: \"ZincManganeseDioxide\", id: 0xf, conformance: \"M\",\n                    description: \"Cell chemistry is zinc manganese dioxide\"\n                }),\n                Field({ name: \"LeadAcid\", id: 0x10, conformance: \"M\", description: \"Cell chemistry is lead acid\" }),\n                Field({\n                    name: \"LithiumCobaltOxide\", id: 0x11, conformance: \"M\",\n                    description: \"Cell chemistry is lithium cobalt oxide\"\n                }),\n                Field({ name: \"LithiumIon\", id: 0x12, conformance: \"M\", description: \"Cell chemistry is lithium ion\" }),\n                Field({\n                    name: \"LithiumIonPolymer\", id: 0x13, conformance: \"M\",\n                    description: \"Cell chemistry is lithium ion polymer\"\n                }),\n                Field({\n                    name: \"LithiumIronPhosphate\", id: 0x14, conformance: \"M\",\n                    description: \"Cell chemistry is lithium iron phosphate\"\n                }),\n                Field({\n                    name: \"LithiumSulfur\", id: 0x15, conformance: \"M\", description: \"Cell chemistry is lithium sulfur\"\n                }),\n                Field({\n                    name: \"LithiumTitanate\", id: 0x16, conformance: \"M\",\n                    description: \"Cell chemistry is lithium titanate\"\n                }),\n                Field({\n                    name: \"NickelCadmium\", id: 0x17, conformance: \"M\", description: \"Cell chemistry is nickel cadmium\"\n                }),\n                Field({\n                    name: \"NickelHydrogen\", id: 0x18, conformance: \"M\",\n                    description: \"Cell chemistry is nickel hydrogen\"\n                }),\n                Field({ name: \"NickelIron\", id: 0x19, conformance: \"M\", description: \"Cell chemistry is nickel iron\" }),\n                Field({\n                    name: \"NickelMetalHydride\", id: 0x1a, conformance: \"M\",\n                    description: \"Cell chemistry is nickel metal hydride\"\n                }),\n                Field({ name: \"NickelZinc\", id: 0x1b, conformance: \"M\", description: \"Cell chemistry is nickel zinc\" }),\n                Field({ name: \"SilverZinc\", id: 0x1c, conformance: \"M\", description: \"Cell chemistry is silver zinc\" }),\n                Field({ name: \"SodiumIon\", id: 0x1d, conformance: \"M\", description: \"Cell chemistry is sodium ion\" }),\n                Field({ name: \"SodiumSulfur\", id: 0x1e, conformance: \"M\", description: \"Cell chemistry is sodium sulfur\" }),\n                Field({ name: \"ZincBromide\", id: 0x1f, conformance: \"M\", description: \"Cell chemistry is zinc bromide\" }),\n                Field({ name: \"ZincCerium\", id: 0x20, conformance: \"M\", description: \"Cell chemistry is zinc cerium\" })\n            ]\n        }),\n\n        Datatype({\n            name: \"BatChargeStateEnum\", type: \"enum8\",\n            xref: { document: \"core\", section: \"11.7.6.10\" },\n\n            children: [\n                Field({\n                    name: \"Unknown\", id: 0x0, conformance: \"M\", description: \"Unable to determine the charging state\"\n                }),\n                Field({ name: \"IsCharging\", id: 0x1, conformance: \"M\", description: \"The battery is charging\" }),\n                Field({ name: \"IsAtFullCharge\", id: 0x2, conformance: \"M\", description: \"The battery is at full charge\" }),\n                Field({ name: \"IsNotCharging\", id: 0x3, conformance: \"M\", description: \"The battery is not charging\" })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(PowerSource);\n"],
  "mappings": "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",
  "names": ["Cluster", "Attribute", "Field", "Event", "Datatype"]
}
