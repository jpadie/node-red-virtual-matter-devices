{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/OtaSoftwareUpdateProvider.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    CommandElement as Command,\n    FieldElement as Field,\n    DatatypeElement as Datatype\n} from \"../../elements/index.js\";\n\nexport const OtaSoftwareUpdateProvider = Cluster({\n    name: \"OtaSoftwareUpdateProvider\", id: 0x29, classification: \"node\", pics: \"OTAP\",\n    xref: { document: \"core\", section: \"11.20.6\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 1 }),\n\n        Command({\n            name: \"QueryImage\", id: 0x0, access: \"O\", conformance: \"M\", direction: \"request\",\n            response: \"QueryImageResponse\",\n            details: \"Upon receipt, this command shall trigger an attempt to find an updated Software Image by the OTA \" +\n                \"Provider to match the OTA Requestor\u2019s constraints provided in the payload fields.\",\n            xref: { document: \"core\", section: \"11.20.6.5.1\" },\n\n            children: [\n                Field({\n                    name: \"VendorId\", id: 0x0, type: \"vendor-id\", conformance: \"M\",\n                    details: \"The value shall be the Vendor ID applying to the OTA Requestor\u2019s Node and shall match the value \" +\n                        \"reported by the Basic Information Cluster VendorID attribute.\",\n                    xref: { document: \"core\", section: \"11.20.6.5.1.1\" }\n                }),\n\n                Field({\n                    name: \"ProductId\", id: 0x1, type: \"uint16\", conformance: \"M\",\n                    details: \"The value shall be the Product ID applying to the OTA Requestor\u2019s Node and shall match the value \" +\n                        \"reported by the Basic Information Cluster ProductID attribute.\",\n                    xref: { document: \"core\", section: \"11.20.6.5.1.2\" }\n                }),\n\n                Field({\n                    name: \"SoftwareVersion\", id: 0x2, type: \"uint32\", conformance: \"M\",\n                    details: \"The SoftwareVersion included in the request payload shall provide the value representing the \" +\n                        \"current version running on the OTA Requestor invoking the command. This version shall be equal to \" +\n                        \"the Software Version attribute of the Basic Information Cluster.\",\n                    xref: { document: \"core\", section: \"11.20.6.5.1.3\" }\n                }),\n\n                Field({\n                    name: \"ProtocolsSupported\", id: 0x3, type: \"list\", conformance: \"M\", constraint: \"max 8\",\n\n                    details: \"This field shall contain a list of all download protocols supported by the OTA Requestor.\" +\n                        \"\\n\" +\n                        \"This field shall be used by the OTA Provider to generate the correct URI for the location of the \" +\n                        \"Software Image when one is found to be available. The values of BDX Synchronous and BDX \" +\n                        \"Asynchronous shall always be supported by an OTA Provider. Furthermore, OTA Providers with access \" +\n                        \"to external networking SHOULD support the HTTPS protocol. OTA Providers may support other protocols.\" +\n                        \"\\n\" +\n                        \"The algorithm to select the specific protocol to use in a given Software Image URI is \" +\n                        \"implementation-dependent, provided that the rules in Section 11.20.3.3.1, \u201CDownload Protocol \" +\n                        \"selection\u201D are followed.\" +\n                        \"\\n\" +\n                        \"See Section 11.20.3.2, \u201CQuerying the OTA Provider\u201D and Section 11.20.3.5, \u201CTransfer of OTA Software \" +\n                        \"Update images\u201D for more details about usage of this field.\",\n\n                    xref: { document: \"core\", section: \"11.20.6.5.1.4\" },\n                    children: [Field({ name: \"entry\", type: \"DownloadProtocolEnum\" })]\n                }),\n\n                Field({\n                    name: \"HardwareVersion\", id: 0x4, type: \"uint16\", conformance: \"O\",\n                    details: \"The value of this field, if present, shall contain the OTA Requestor\u2019s hardware version, and shall \" +\n                        \"be equal to the HardwareVersion attribute of the Basic Information Cluster.\",\n                    xref: { document: \"core\", section: \"11.20.6.5.1.5\" }\n                }),\n\n                Field({\n                    name: \"Location\", id: 0x5, type: \"string\", conformance: \"O\", constraint: \"2\",\n                    details: \"The location, if present, shall provide the same value as the Basic Information Cluster Location \" +\n                        \"attribute for the OTA Requestor as configured. This may be used by the OTA Provider logic to allow \" +\n                        \"per-region selection of the Software Image.\",\n                    xref: { document: \"core\", section: \"11.20.6.5.1.6\" }\n                }),\n\n                Field({\n                    name: \"RequestorCanConsent\", id: 0x6, type: \"bool\", conformance: \"O\", default: false,\n                    details: \"This field shall be set to true by an OTA Requestor that is capable of obtaining user consent for \" +\n                        \"OTA application by virtue of built-in user interface capabilities. Otherwise, it shall be false.\" +\n                        \"\\n\" +\n                        \"See Section 11.20.3.4, \u201CObtaining user consent for updating software\u201D for application details about \" +\n                        \"usage.\",\n                    xref: { document: \"core\", section: \"11.20.6.5.1.7\" }\n                }),\n\n                Field({\n                    name: \"MetadataForProvider\", id: 0x7, type: \"octstr\", conformance: \"O\", constraint: \"max 512\",\n\n                    details: \"This optional field, if present, shall consist of a top-level anonymous list; each list element \" +\n                        \"shall have a profile-specific tag encoded in fully-qualified form. Each list element shall contain \" +\n                        \"a manufacturer-specific payload, which the OTA Requestor invoking this command wants to expose to \" +\n                        \"the receiving OTA Provider. This payload may be used for any purpose and SHOULD be as small as \" +\n                        \"practical.\" +\n                        \"\\n\" +\n                        \"The use of this field SHOULD be restricted to Vendor-specific usage and shall NOT be used as a \" +\n                        \"selector required to match for the selection of a Software Image in production environments, unless \" +\n                        \"absolutely necessary, as the interpretation of this field may be ambiguous to OTA Providers \" +\n                        \"implementing the Cluster in a compliant but divergent way from the sender.\" +\n                        \"\\n\" +\n                        \"An example of usage for this field is for an OTA Requestor to provide specific data about grouping \" +\n                        \"or authentication in field trial environments, where the OTA Provider is likely to understand it \" +\n                        \"and be able to act upon it, either for special selection of image, or recording of activity.\" +\n                        \"\\n\" +\n                        \"An OTA Provider shall report the availability of Software Images, if one is found to be applicable \" +\n                        \"using the other provided fields, even if the MetadataForProvider field is deemed to contain invalid \" +\n                        \"or unknown information. That is, the contents of the MetadataForProvider field shall NOT be used to \" +\n                        \"deny a software update to an OTA Requestor, unless both OTA Requestor and OTA Provider have an \" +\n                        \"externally agreed-upon policy whereby strictly correct additional MetadataForProvider is expected \" +\n                        \"to fulfill the OTA Software Update process.\" +\n                        \"\\n\" +\n                        \"Usage of the QueryImage Command\" +\n                        \"\\n\" +\n                        \"OTA Requestors shall send a QueryImage command to the OTA Provider to determine the availability of \" +\n                        \"a new Software Image.\" +\n                        \"\\n\" +\n                        \"See Section 11.20.3.2, \u201CQuerying the OTA Provider\u201D for full details about the OTA Software Update \" +\n                        \"Query flow which makes use of this command.\",\n\n                    xref: { document: \"core\", section: \"11.20.6.5.1.8\" }\n                })\n            ]\n        }),\n\n        Command({\n            name: \"QueryImageResponse\", id: 0x1, conformance: \"M\", direction: \"response\",\n            xref: { document: \"core\", section: \"11.20.6.5.2\" },\n\n            children: [\n                Field({\n                    name: \"Status\", id: 0x0, type: \"StatusEnum\", conformance: \"M\",\n                    details: \"This field shall contain the primary response regarding the availability of a Software Image.\" +\n                        \"\\n\" +\n                        \"See Section 11.20.3.2, \u201CQuerying the OTA Provider\u201D for details about the possible values for this \" +\n                        \"field and their meaning.\",\n                    xref: { document: \"core\", section: \"11.20.6.5.2.1\" }\n                }),\n\n                Field({\n                    name: \"DelayedActionTime\", id: 0x1, type: \"uint32\", conformance: \"O\",\n\n                    details: \"This field shall convey the minimum time to wait, in seconds from the time of this response, before \" +\n                        \"sending another QueryImage command or beginning a download from the OTA Provider. OTA Requestors \" +\n                        \"shall respect this minimum delay, unless they had previously restarted and lost track of it. OTA \" +\n                        \"Providers SHOULD expect OTA Requestors to follow this value to their best capability, however, a \" +\n                        \"restarting Node may come back sooner, due to having lost track of this state response.\" +\n                        \"\\n\" +\n                        \"The DelayedActionTime field shall only be present if the Status field is set to Busy.\" +\n                        \"\\n\" +\n                        \"See Section 11.20.3.2, \u201CQuerying the OTA Provider\u201D for details about the rules regarding this field.\",\n\n                    xref: { document: \"core\", section: \"11.20.6.5.2.2\" }\n                }),\n\n                Field({\n                    name: \"ImageUri\", id: 0x2, type: \"string\", conformance: \"O\", constraint: \"max 256\",\n\n                    details: \"This field, when present, shall contain a URI where the OTA Requestor SHOULD download a Software \" +\n                        \"Image. The syntax of the ImageURI field shall follow the URI syntax as specified in RFC 3986.\" +\n                        \"\\n\" +\n                        \"This field shall be present if it appears in a QueryImageResponse with a Status of UpdateAvailable.\" +\n                        \"\\n\" +\n                        \"If the ImageURI specifies a BDX Protocol bdx: scheme, then the following rules describe the \" +\n                        \"location to be used for download:\" +\n                        \"\\n\" +\n                        \"  1. The URI\u2019s scheme field shall be exactly bdx in lowercase characters.\" +\n                        \"\\n\" +\n                        \"  2. The URI\u2019s authority field shall contain only the host portion and shall use string \" +\n                        \"     representation of the Operational Node ID of the Node where to proceed with the download, on \" +\n                        \"     the same Fabric on which the OTA Requestor received the QueryImageResponse.\" +\n                        \"\\n\" +\n                        \"  3. The encoding of the Node ID in the host field shall use an uppercase hexadecimal format, using \" +\n                        \"     exactly 16 characters to encode the network byte order value of the NodeID, in a similar \" +\n                        \"     fashion as the Node Identifier portion of the Operational Instance Name.\" +\n                        \"\\n\" +\n                        \"    a. The Operational Node ID in the host field shall match the NodeID of the OTA Provider \" +\n                        \"       responding with the QueryImageResponse. The usage of a different Node ID than that of the \" +\n                        \"       provider is reserved for future use. This constraint reduces the number of independent\" +\n                        \"\\n\" +\n                        \"CASE secure channel sessions that have to be maintained to proceed with OTA software updates, thus \" +\n                        \"reducing energy and resource utilization for the software update process.\" +\n                        \"\\n\" +\n                        \"4. The user section of the authority field shall be absent, as there are no \\\"users\\\" to be \" +\n                        \"considered.\" +\n                        \"\\n\" +\n                        \"5. The port section of the authority field shall be absent, as the port for transport shall be \" +\n                        \"determined through Operational Discovery of the target Node.\" +\n                        \"\\n\" +\n                        \"6. The URI shall not contain a query field.\" +\n                        \"\\n\" +\n                        \"7. The URI shall not contain a fragment field.\" +\n                        \"\\n\" +\n                        \"8. The path field shall employ absolute path representation and shall contain the file designator \" +\n                        \"of the software image to download at the BDX server. When used with the BDX server, the leading / \" +\n                        \"separating the URI authority from the path shall be omitted. When contacting the BDX server, \" +\n                        \"further processing of the file designator shall NOT be done, including handling of URL-encoded \" +\n                        \"escape sequences. Rather, the exact octets of the path, as received shall be the values used by \" +\n                        \"both client and server in handling the file designator.\" +\n                        \"\\n\" +\n                        \"  a. The path shall only contain valid URI characters.\" +\n                        \"\\n\" +\n                        \"These rules above for BDX URIs simplify parsing for OTA Requestors receiving Image URIs. The \" +\n                        \"following example procedure shows how the format constraints simplify the extraction of the \" +\n                        \"necessary data to reach the BDX server for download.\" +\n                        \"\\n\" +\n                        \"  1. Verify that the URI is 24 characters or longer, which is the minimum length of a valid BDX URI \" +\n                        \"     with all elements present, for example bdx://00112233AABBCCDD/0.\" +\n                        \"\\n\" +\n                        \"  2. Verify the presence of prefix bdx:// indicating a BDX URI.\" +\n                        \"\\n\" +\n                        \"  3. Extract the next 16 characters and convert from uppercase hexadecimal to a 64-bit scalar \" +\n                        \"     value, considering network byte order. This is the destination Node ID.\" +\n                        \"\\n\" +\n                        \"  4. Verify the presence of a path separator / and skip it.\" +\n                        \"\\n\" +\n                        \"  5. Extract the remaining characters of the string as the file designator to employ when \" +\n                        \"     initiating the BDX transfer.\" +\n                        \"\\n\" +\n                        \"Example ImageURI values are below, and illustrate some but not all of valid and invalid cases:\" +\n                        \"\\n\" +\n                        \"  \u2022 Synchronous or Asynchronous BDX Protocol:\" +\n                        \"\\n\" +\n                        \"    \u25E6 Valid: bdx://8899AABBCCDDEEFF/the_file_designator123\" +\n                        \"\\n\" +\n                        \"      \u25AA Node ID: 0x8899AABBCCDDEEFF\" +\n                        \"\\n\" +\n                        \"      \u25AA File designator: the_file_designator123\" +\n                        \"\\n\" +\n                        \"    \u25E6 Valid: bdx://0099AABBCCDDEE77/the%20file%20designator/some_more\" +\n                        \"\\n\" +\n                        \"      \u25AA Node ID: 0x0099AABBCCDDEE77\" +\n                        \"\\n\" +\n                        \"      \u25AA File designator: the%20file%20designator/some_more. Note that the %20 are retained and not \" +\n                        \"        converted to ASCII 0x20 (space). The file designator is the path as received verbatim, \" +\n                        \"        after the first '/' (U+002F / SOLIDUS) following the host.\" +\n                        \"\\n\" +\n                        \"    \u25E6 Invalid: bdx://99AABBCCDDEE77/the_file_designator123\" +\n                        \"\\n\" +\n                        \"      \u25AA Node ID: Invalid since it is not exactly 16 characters long, due to having omitted leading \" +\n                        \"        zeros.\" +\n                        \"\\n\" +\n                        \"    \u25E6 Invalid: bdx://0099aabbccddee77/the_file_designator123\" +\n                        \"\\n\" +\n                        \"      \u25AA Node ID: Invalid since lowercase hexadecimal was used.\" +\n                        \"\\n\" +\n                        \"    \u25E6 Invalid: bdx:8899AABBCCDDEEFF/the_file_designator123\" +\n                        \"\\n\" +\n                        \"      \u25AA Invalid since bdx scheme does not contain an authority, that is, it does not have // after \" +\n                        \"        the first :.\" +\n                        \"\\n\" +\n                        \"  \u2022 HTTP over TLS:\" +\n                        \"\\n\" +\n                        \"    \u25E6 Valid: https://example.domain:8466/software/image.bin\" +\n                        \"\\n\" +\n                        \"See Section 11.20.3.2, \u201CQuerying the OTA Provider\u201D for additional details about the flow.\",\n\n                    xref: { document: \"core\", section: \"11.20.6.5.2.3\" }\n                }),\n\n                Field({\n                    name: \"SoftwareVersion\", id: 0x3, type: \"uint32\", conformance: \"O\",\n\n                    details: \"This field indicates the version of the image being provided to the OTA Requestor by the OTA \" +\n                        \"Provider when the Status is UpdateAvailable.\" +\n                        \"\\n\" +\n                        \"This field shall be present if it appears in a QueryImageResponse with a Status of UpdateAvailable.\" +\n                        \"\\n\" +\n                        \"See Section 11.20.3.2, \u201CQuerying the OTA Provider\u201D for additional details about the flow and \" +\n                        \"acceptable values.\",\n\n                    xref: { document: \"core\", section: \"11.20.6.5.2.4\" }\n                }),\n\n                Field({\n                    name: \"SoftwareVersionString\", id: 0x4, type: \"string\", conformance: \"O\", constraint: \"1 to 64\",\n\n                    details: \"This field provides a string version of the image being provided to the OTA Requestor by the OTA \" +\n                        \"Provider when the Status is UpdateAvailable.\" +\n                        \"\\n\" +\n                        \"This field shall be present if it appears in a QueryImageResponse with a Status of UpdateAvailable.\" +\n                        \"\\n\" +\n                        \"See Section 11.20.3.2, \u201CQuerying the OTA Provider\u201D for additional details about the flow and \" +\n                        \"acceptable values.\",\n\n                    xref: { document: \"core\", section: \"11.20.6.5.2.5\" }\n                }),\n\n                Field({\n                    name: \"UpdateToken\", id: 0x5, type: \"octstr\", conformance: \"O\", constraint: \"8 to 32\",\n                    details: \"This optional field shall be present when the Status field contains UpdateAvailable.\" +\n                        \"\\n\" +\n                        \"See Section 11.20.3.6.1, \u201CUpdateToken usage\u201D for additional details about the generation and usage \" +\n                        \"of UpdateToken.\",\n                    xref: { document: \"core\", section: \"11.20.6.5.2.6\" }\n                }),\n\n                Field({\n                    name: \"UserConsentNeeded\", id: 0x6, type: \"bool\", conformance: \"O\", default: false,\n\n                    details: \"This field, if present, shall only be interpreted if the OTA Requestor had previously indicated a \" +\n                        \"value of True in the RequestorCanConsent field of the QueryImageRequest. This field, when present \" +\n                        \"and set to True, shall indicate that a capable OTA Requestor must obtain user-visible consent prior \" +\n                        \"to downloading the OTA Software Image.\" +\n                        \"\\n\" +\n                        \"See Section 11.20.3.4, \u201CObtaining user consent for updating software\u201D for application details about \" +\n                        \"usage.\",\n\n                    xref: { document: \"core\", section: \"11.20.6.5.2.7\" }\n                }),\n\n                Field({\n                    name: \"MetadataForRequestor\", id: 0x7, type: \"octstr\", conformance: \"O\", constraint: \"max 512\",\n\n                    details: \"This optional field, if present, shall consist of a top-level anonymous list; each list element \" +\n                        \"shall have a profile-specific tag encoded in fully-qualified form. Each list element shall contain \" +\n                        \"a manufacturer-specific payload, which the OTA Provider wants to expose to the receiving OTA \" +\n                        \"Requestor. This payload may be used for any purpose and SHOULD be as small as practical.\" +\n                        \"\\n\" +\n                        \"The presence of this field shall NOT be required for correct operation of any OTA Provider \" +\n                        \"compliant with this Cluster specification.\" +\n                        \"\\n\" +\n                        \"The data for this field does not exist in any Distributed Compliance Ledger record and SHOULD only \" +\n                        \"be emitted by an OTA Provider with this additional knowledge if it has knowledge that the receiving \" +\n                        \"OTA Requestor may be able to use it.\",\n\n                    xref: { document: \"core\", section: \"11.20.6.5.2.8\" }\n                })\n            ]\n        }),\n\n        Command({\n            name: \"ApplyUpdateRequest\", id: 0x2, access: \"O\", conformance: \"M\", direction: \"request\",\n            response: \"ApplyUpdateResponse\",\n            xref: { document: \"core\", section: \"11.20.6.5.3\" },\n\n            children: [\n                Field({\n                    name: \"UpdateToken\", id: 0x0, type: \"octstr\", conformance: \"M\", constraint: \"8 to 32\",\n                    details: \"This field shall contain the UpdateToken as specified in Section 11.20.3.6.1, \u201CUpdateToken usage\u201D. \" +\n                        \"This field may be used by the OTA Provider to track minimal lifecycle state to allow finer-grained \" +\n                        \"scheduling of the application of Software Images by OTA Requestors.\",\n                    xref: { document: \"core\", section: \"11.20.6.5.3.1\" }\n                }),\n\n                Field({\n                    name: \"NewVersion\", id: 0x1, type: \"uint32\", conformance: \"M\",\n\n                    details: \"The NewVersion field included in the request payload shall provide the SoftwareVersion value of the \" +\n                        \"new Software Image which the OTA Requestor is ready to start applying. The OTA Provider may use \" +\n                        \"this new version to track or record Software Image application by OTA Requestors.\" +\n                        \"\\n\" +\n                        \"When Generated\" +\n                        \"\\n\" +\n                        \"The ApplyUpdateRequest Command shall be invoked by an OTA Requestor once it is ready to apply a \" +\n                        \"previously downloaded Software Image.\" +\n                        \"\\n\" +\n                        \"Effect on Receipt\" +\n                        \"\\n\" +\n                        \"Upon receipt of this command the OTA Provider shall respond with an Action field consistent with \" +\n                        \"the next action the OTA Requestor should take, including any possible time delay.\" +\n                        \"\\n\" +\n                        \"The OTA Provider shall NOT refer to previously stored state about any download progress to reply. \" +\n                        \"If any state keeping is done by the OTA Provider, it shall only relate to the UpdateToken and the \" +\n                        \"history of prior ApplyUpdateRequest commands.\" +\n                        \"\\n\" +\n                        \"See Section 11.20.3.6, \u201CApplying a software update\u201D for a description of the flow in response to an \" +\n                        \"OTA Provider receiving an invocation of this command.\" +\n                        \"\\n\" +\n                        \"Handling Error Cases\" +\n                        \"\\n\" +\n                        \"See Section 11.20.3.6, \u201CApplying a software update\u201D for all error-handling information.\",\n\n                    xref: { document: \"core\", section: \"11.20.6.5.3.2\" }\n                })\n            ]\n        }),\n\n        Command({\n            name: \"ApplyUpdateResponse\", id: 0x3, conformance: \"M\", direction: \"response\",\n            xref: { document: \"core\", section: \"11.20.6.5.4\" },\n\n            children: [\n                Field({\n                    name: \"Action\", id: 0x0, type: \"ApplyUpdateActionEnum\", conformance: \"M\",\n                    details: \"The Action field shall express the action that the OTA Provider requests from the OTA Requestor. \" +\n                        \"See Section 11.20.3.6, \u201CApplying a software update\u201D for a description of the Action values provided \" +\n                        \"in response to an OTA Provider receiving an invocation of this command.\",\n                    xref: { document: \"core\", section: \"11.20.6.5.4.1\" }\n                }),\n\n                Field({\n                    name: \"DelayedActionTime\", id: 0x1, type: \"uint32\", conformance: \"M\",\n                    details: \"The minimum time period the OTA Requestor shall wait before executing the Action, in seconds from \" +\n                        \"receipt.\" +\n                        \"\\n\" +\n                        \"If this field has a value higher than 86400 seconds (24 hours), then the OTA Requestor may assume a \" +\n                        \"value of 86400, in order to reduce undue Software Image application delays.\",\n                    xref: { document: \"core\", section: \"11.20.6.5.4.2\" }\n                })\n            ]\n        }),\n\n        Command({\n            name: \"NotifyUpdateApplied\", id: 0x4, access: \"O\", conformance: \"M\", direction: \"request\",\n            response: \"status\",\n            xref: { document: \"core\", section: \"11.20.6.5.5\" },\n\n            children: [\n                Field({\n                    name: \"UpdateToken\", id: 0x0, type: \"octstr\", conformance: \"M\", constraint: \"8 to 32\",\n                    details: \"This field shall contain the UpdateToken as specified in Section 11.20.3.6.1, \u201CUpdateToken usage\u201D.\",\n                    xref: { document: \"core\", section: \"11.20.6.5.5.1\" }\n                }),\n\n                Field({\n                    name: \"SoftwareVersion\", id: 0x1, type: \"uint32\", conformance: \"M\",\n\n                    details: \"The SoftwareVersion included in the request payload shall provide the same value as the \" +\n                        \"SoftwareVersion attribute in the invoking OTA Requestor\u2019s Basic Information Cluster, and SHOULD be \" +\n                        \"consistent with the value representing a new version running on the Node invoking the command.\" +\n                        \"\\n\" +\n                        \"When Generated\" +\n                        \"\\n\" +\n                        \"The NotifyUpdateApplied command SHOULD be invoked in the following two circumstances:\" +\n                        \"\\n\" +\n                        \"  1. An OTA Requestor has just successfully applied a Software Image it had obtained from a \" +\n                        \"     previous QueryImage response.\" +\n                        \"\\n\" +\n                        \"  2. An OTA Requestor has just successfully applied a Software Image it had obtained through means \" +\n                        \"     different than those of this Cluster.\" +\n                        \"\\n\" +\n                        \"An OTA Provider may use the state of invocation of this command to help track the progress of \" +\n                        \"update for OTA Requestors it knows require a new OTA Software Image. However, due to the \" +\n                        \"possibility that an OTA Requestor may never come back (e.g. device removed from Fabric altogether, \" +\n                        \"or a critical malfunction), an OTA Provider shall NOT expect every OTA Requestor to invoke this \" +\n                        \"command for correct operation of the OTA Provider.\" +\n                        \"\\n\" +\n                        \"This command shall be considered optional and shall not result in reduced availability of the OTA \" +\n                        \"Provider functionality if OTA Requestors never invoke this command.\" +\n                        \"\\n\" +\n                        \"Effect on Receipt\" +\n                        \"\\n\" +\n                        \"An OTA Provider receiving an invocation of this command may log it internally.\" +\n                        \"\\n\" +\n                        \"On receiving this command, an OTA Provider may use the information to update its bookkeeping of \" +\n                        \"cached Software Images, or use it for other similar administrative purposes.\",\n\n                    xref: { document: \"core\", section: \"11.20.6.5.5.2\" }\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"StatusEnum\", type: \"enum8\",\n            details: \"See Section 11.20.3.2, \u201CQuerying the OTA Provider\u201D for the semantics of these values.\",\n            xref: { document: \"core\", section: \"11.20.6.4.1\" },\n\n            children: [\n                Field({\n                    name: \"UpdateAvailable\", id: 0x0, conformance: \"M\",\n                    description: \"Indicates that the OTA Provider has an update available.\"\n                }),\n                Field({\n                    name: \"Busy\", id: 0x1, conformance: \"M\",\n                    description: \"Indicates OTA Provider may have an update, but it is not ready yet.\"\n                }),\n                Field({\n                    name: \"NotAvailable\", id: 0x2, conformance: \"M\",\n                    description: \"Indicates that there is definitely no update currently available from the OTA Provider.\"\n                }),\n                Field({\n                    name: \"DownloadProtocolNotSupported\", id: 0x3, conformance: \"M\",\n                    description: \"Indicates that the requested download protocol is not supported by the OTA Provider.\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"ApplyUpdateActionEnum\", type: \"enum8\",\n            details: \"See Section 11.20.3.6, \u201CApplying a software update\u201D for the semantics of the values. This \" +\n                \"enumeration is used in the Action field of the ApplyUpdateResponse command. See (Section \" +\n                \"11.20.6.5.4.1, \u201CAction Field\u201D).\",\n            xref: { document: \"core\", section: \"11.20.6.4.2\" },\n\n            children: [\n                Field({ name: \"Proceed\", id: 0x0, conformance: \"M\", description: \"Apply the update.\" }),\n                Field({\n                    name: \"AwaitNextAction\", id: 0x1, conformance: \"M\",\n                    description: \"Wait at least the given delay time.\"\n                }),\n                Field({\n                    name: \"Discontinue\", id: 0x2, conformance: \"M\",\n                    description: \"The OTA Provider is conveying a desire to rescind a previously provided Software Image.\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"DownloadProtocolEnum\", type: \"enum8\",\n            details: \"Note that only HTTP over TLS (HTTPS) is supported (see RFC 7230). Using HTTP without TLS shall\" +\n                \"\\n\" +\n                \"NOT be supported, as there is no way to authenticate the involved participants.\",\n            xref: { document: \"core\", section: \"11.20.6.4.3\" },\n\n            children: [\n                Field({\n                    name: \"BdxSynchronous\", id: 0x0, conformance: \"M\",\n                    description: \"Indicates support for synchronous BDX.\"\n                }),\n                Field({\n                    name: \"BdxAsynchronous\", id: 0x1, conformance: \"O\",\n                    description: \"Indicates support for asynchronous BDX.\"\n                }),\n                Field({ name: \"Https\", id: 0x2, conformance: \"O\", description: \"Indicates support for HTTPS.\" }),\n                Field({\n                    name: \"VendorSpecific\", id: 0x3, conformance: \"O\",\n                    description: \"Indicates support for vendor specific protocol.\"\n                })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(OtaSoftwareUpdateProvider);\n"],
  "mappings": "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",
  "names": ["Cluster", "Attribute", "Command", "Field", "Datatype"]
}
