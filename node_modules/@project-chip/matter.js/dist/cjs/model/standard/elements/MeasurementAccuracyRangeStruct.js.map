{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/MeasurementAccuracyRangeStruct.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport { DatatypeElement as Datatype, FieldElement as Field } from \"../../elements/index.js\";\n\nexport const MeasurementAccuracyRangeStruct = Datatype({\n    name: \"MeasurementAccuracyRangeStruct\", type: \"struct\",\n\n    details: \"This struct represents the accuracy of a measurement for a range of measurement values. Accuracy \" +\n        \"shall be expressed as a maximum +/- percentage of the true value, a maximum +/- fixed value of the \" +\n        \"true value, or both.\" +\n        \"\\n\" +\n        \"  \u2022 If both PercentMax and FixedMax are indicated, then for a given true value in the range between \" +\n        \"    RangeMin and RangeMax,\" +\n        \"\\n\" +\n        \"    \u25E6 the reported value shall be less than or equal to the sum of the true value, FixedMax and \" +\n        \"      PercentMax percent of the true value.\" +\n        \"\\n\" +\n        \"    \u25E6 the reported value shall be greater than or equal to the true value minus the sum of FixedMax \" +\n        \"      and PercentMax percent of the true value.\" +\n        \"\\n\" +\n        \"  \u2022 If only PercentMax is indicated, then for a given true value in the range between RangeMin and \" +\n        \"    RangeMax,\" +\n        \"\\n\" +\n        \"    \u25E6 the reported value shall be less than or equal to the sum of the true value and PercentMax \" +\n        \"      percent of the true value.\" +\n        \"\\n\" +\n        \"    \u25E6 the reported value shall be greater than or equal to the true value minus PercentMax per\" +\n        \"\\n\" +\n        \"cent of the true value.\" +\n        \"\\n\" +\n        \"  \u2022 If only FixedMax is indicated, then for a given true value in the range between RangeMin and \" +\n        \"    RangeMax,\" +\n        \"\\n\" +\n        \"    \u25E6 the reported value shall be less than or equal to the sum of the true value and FixedMax.\" +\n        \"\\n\" +\n        \"    \u25E6 the reported value shall be greater than or equal to the true value minus FixedMax.\",\n\n    xref: { document: \"cluster\", section: \"2.1.4.3\" },\n\n    children: [\n        Field({\n            name: \"RangeMin\", id: 0x0, type: \"int64\", conformance: \"M\", quality: \"F\",\n\n            details: \"This field shall indicate the minimum measurement value for the specified level of accuracy.\" +\n                \"\\n\" +\n                \"The value of this field shall be greater than or equal to the value of the MinMeasuredValue field \" +\n                \"on the encompassing MeasurementAccuracyStruct.\" +\n                \"\\n\" +\n                \"The value of this field shall be less than or equal to the value of the MaxMeasuredValue field on \" +\n                \"the encompassing MeasurementAccuracyStruct.\",\n\n            xref: { document: \"cluster\", section: \"2.1.4.3.1\" }\n        }),\n\n        Field({\n            name: \"RangeMax\", id: 0x1, type: \"int64\", conformance: \"M\", quality: \"F\",\n\n            details: \"This field shall indicate the maximum measurement value for the specified level of accuracy. The \" +\n                \"value of this field shall be greater than the value of the RangeMin field.\" +\n                \"\\n\" +\n                \"The value of this field shall be greater than or equal to the value of the MinMeasuredValue field \" +\n                \"on the encompassing MeasurementAccuracyStruct.\" +\n                \"\\n\" +\n                \"The value of this field shall be less than or equal to the value of the MaxMeasuredValue field on \" +\n                \"the encompassing MeasurementAccuracyStruct.\",\n\n            xref: { document: \"cluster\", section: \"2.1.4.3.2\" }\n        }),\n\n        Field({\n            name: \"PercentMax\", id: 0x2, type: \"percent100ths\", conformance: \"O.a+\", quality: \"F\",\n            details: \"This field shall indicate the maximum +/- percentage accuracy for the associated measurement.\",\n            xref: { document: \"cluster\", section: \"2.1.4.3.3\" }\n        }),\n\n        Field({\n            name: \"PercentMin\", id: 0x3, type: \"percent100ths\", conformance: \"[PercentMax]\",\n            constraint: \"max percentTypical\", quality: \"F\",\n            details: \"This field shall indicate the minimum +/- percentage accuracy for the associated measurement.\",\n            xref: { document: \"cluster\", section: \"2.1.4.3.4\" }\n        }),\n\n        Field({\n            name: \"PercentTypical\", id: 0x4, type: \"percent100ths\", conformance: \"[PercentMin]\",\n            constraint: \"percentMin to percentMax\", quality: \"F\",\n            details: \"This field shall indicate the typical +/- percentage accuracy for the associated measurement.\",\n            xref: { document: \"cluster\", section: \"2.1.4.3.5\" }\n        }),\n\n        Field({\n            name: \"FixedMax\", id: 0x5, type: \"uint64\", conformance: \"O.a+\", quality: \"F\",\n            details: \"This field shall indicate the maximum +/- fixed accuracy for the associated measurement, in the \" +\n                \"unit indicated by MeasurementType.\",\n            xref: { document: \"cluster\", section: \"2.1.4.3.6\" }\n        }),\n\n        Field({\n            name: \"FixedMin\", id: 0x6, type: \"uint64\", conformance: \"[FixedMax]\", constraint: \"max fixedMax\",\n            quality: \"F\",\n            details: \"This field shall indicate the minimum +/- fixed accuracy for the associated measurement, in the \" +\n                \"unit indicated by MeasurementType.\",\n            xref: { document: \"cluster\", section: \"2.1.4.3.7\" }\n        }),\n\n        Field({\n            name: \"FixedTypical\", id: 0x7, type: \"uint64\", conformance: \"[FixedMin]\",\n            constraint: \"fixedMin to fixedMax\", quality: \"F\",\n            details: \"This field shall indicate the typical +/- fixed accuracy for the associated measurement, in the \" +\n                \"unit indicated by MeasurementType.\",\n            xref: { document: \"cluster\", section: \"2.1.4.3.8\" }\n        })\n    ]\n});\n\nMatter.children.push(MeasurementAccuracyRangeStruct);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,oBAAuB;AACvB,sBAAmE;AATnE;AAAA;AAAA;AAAA;AAAA;AAWO,MAAM,qCAAiC,gBAAAA,iBAAS;AAAA,EACnD,MAAM;AAAA,EAAkC,MAAM;AAAA,EAE9C,SAAS;AAAA,EA8BT,MAAM,EAAE,UAAU,WAAW,SAAS,UAAU;AAAA,EAEhD,UAAU;AAAA,QACN,gBAAAC,cAAM;AAAA,MACF,MAAM;AAAA,MAAY,IAAI;AAAA,MAAK,MAAM;AAAA,MAAS,aAAa;AAAA,MAAK,SAAS;AAAA,MAErE,SAAS;AAAA,MAQT,MAAM,EAAE,UAAU,WAAW,SAAS,YAAY;AAAA,IACtD,CAAC;AAAA,QAED,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAAY,IAAI;AAAA,MAAK,MAAM;AAAA,MAAS,aAAa;AAAA,MAAK,SAAS;AAAA,MAErE,SAAS;AAAA,MAST,MAAM,EAAE,UAAU,WAAW,SAAS,YAAY;AAAA,IACtD,CAAC;AAAA,QAED,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAAc,IAAI;AAAA,MAAK,MAAM;AAAA,MAAiB,aAAa;AAAA,MAAQ,SAAS;AAAA,MAClF,SAAS;AAAA,MACT,MAAM,EAAE,UAAU,WAAW,SAAS,YAAY;AAAA,IACtD,CAAC;AAAA,QAED,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAAc,IAAI;AAAA,MAAK,MAAM;AAAA,MAAiB,aAAa;AAAA,MACjE,YAAY;AAAA,MAAsB,SAAS;AAAA,MAC3C,SAAS;AAAA,MACT,MAAM,EAAE,UAAU,WAAW,SAAS,YAAY;AAAA,IACtD,CAAC;AAAA,QAED,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAAkB,IAAI;AAAA,MAAK,MAAM;AAAA,MAAiB,aAAa;AAAA,MACrE,YAAY;AAAA,MAA4B,SAAS;AAAA,MACjD,SAAS;AAAA,MACT,MAAM,EAAE,UAAU,WAAW,SAAS,YAAY;AAAA,IACtD,CAAC;AAAA,QAED,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAAY,IAAI;AAAA,MAAK,MAAM;AAAA,MAAU,aAAa;AAAA,MAAQ,SAAS;AAAA,MACzE,SAAS;AAAA,MAET,MAAM,EAAE,UAAU,WAAW,SAAS,YAAY;AAAA,IACtD,CAAC;AAAA,QAED,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAAY,IAAI;AAAA,MAAK,MAAM;AAAA,MAAU,aAAa;AAAA,MAAc,YAAY;AAAA,MAClF,SAAS;AAAA,MACT,SAAS;AAAA,MAET,MAAM,EAAE,UAAU,WAAW,SAAS,YAAY;AAAA,IACtD,CAAC;AAAA,QAED,gBAAAA,cAAM;AAAA,MACF,MAAM;AAAA,MAAgB,IAAI;AAAA,MAAK,MAAM;AAAA,MAAU,aAAa;AAAA,MAC5D,YAAY;AAAA,MAAwB,SAAS;AAAA,MAC7C,SAAS;AAAA,MAET,MAAM,EAAE,UAAU,WAAW,SAAS,YAAY;AAAA,IACtD,CAAC;AAAA,EACL;AACJ,CAAC;AAED,qBAAO,SAAS,KAAK,8BAA8B;",
  "names": ["Datatype", "Field"]
}
