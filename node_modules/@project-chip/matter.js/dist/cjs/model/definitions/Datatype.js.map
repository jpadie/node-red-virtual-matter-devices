{
  "version": 3,
  "sources": ["../../../../src/model/definitions/Datatype.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * An identifier for every non-derived datatype from the Matter Core\n * Specification.\n */\nexport enum Datatype {\n    bool = \"bool\",\n    map8 = \"map8\",\n    map16 = \"map16\",\n    map32 = \"map32\",\n    map64 = \"map64\",\n    uint8 = \"uint8\",\n    uint16 = \"uint16\",\n    uint24 = \"uint24\",\n    uint32 = \"uint32\",\n    uint40 = \"uint40\",\n    uint48 = \"uint48\",\n    uint56 = \"uint56\",\n    uint64 = \"uint64\",\n    int8 = \"int8\",\n    int16 = \"int16\",\n    int24 = \"int24\",\n    int32 = \"int32\",\n    int40 = \"int40\",\n    int48 = \"int48\",\n    int56 = \"int56\",\n    int64 = \"int64\",\n    single = \"single\",\n    double = \"double\",\n    octstr = \"octstr\",\n    list = \"list\",\n    struct = \"struct\",\n\n    // Formally these are derived datatypes, however we largely treat them\n    // like non-derived so define them here\n    string = \"string\",\n    enum8 = \"enum8\",\n    enum16 = \"enum16\",\n\n    // Extension -- any value is allowed\n    any = \"any\",\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUO,IAAK,WAAL,kBAAKA,cAAL;AACH,EAAAA,UAAA,UAAO;AACP,EAAAA,UAAA,UAAO;AACP,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,YAAS;AACT,EAAAA,UAAA,YAAS;AACT,EAAAA,UAAA,YAAS;AACT,EAAAA,UAAA,YAAS;AACT,EAAAA,UAAA,YAAS;AACT,EAAAA,UAAA,YAAS;AACT,EAAAA,UAAA,YAAS;AACT,EAAAA,UAAA,UAAO;AACP,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,YAAS;AACT,EAAAA,UAAA,YAAS;AACT,EAAAA,UAAA,YAAS;AACT,EAAAA,UAAA,UAAO;AACP,EAAAA,UAAA,YAAS;AAIT,EAAAA,UAAA,YAAS;AACT,EAAAA,UAAA,WAAQ;AACR,EAAAA,UAAA,YAAS;AAGT,EAAAA,UAAA,SAAM;AAnCE,SAAAA;AAAA,GAAA;",
  "names": ["Datatype"]
}
