{
  "version": 3,
  "sources": ["../../../../src/model/models/DeviceTypeModel.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Mei } from \"../../datatype/ManufacturerExtensibleIdentifier.js\";\nimport { DeviceTypeElement, FieldElement, RequirementElement } from \"../elements/index.js\";\nimport { Children } from \"./Children.js\";\nimport { FieldModel } from \"./FieldModel.js\";\nimport { Model } from \"./Model.js\";\nimport { RequirementModel } from \"./RequirementModel.js\";\n\nexport class DeviceTypeModel extends Model implements DeviceTypeElement {\n    override tag: DeviceTypeElement.Tag = DeviceTypeElement.Tag;\n    declare id: Mei;\n    declare classification: DeviceTypeElement.Classification;\n\n    get requirements() {\n        return this.all(RequirementModel);\n    }\n\n    get revision() {\n        return (\n            this?.get(RequirementModel, \"Descriptor\")?.get(RequirementModel, \"DeviceTypeList\")?.default[0].revision ?? 1\n        );\n    }\n\n    override get children(): Children<RequirementModel | FieldModel, RequirementElement | FieldElement> {\n        return super.children as any;\n    }\n\n    override set children(children: (RequirementModel | FieldModel | RequirementElement | FieldElement)[]) {\n        super.children = children;\n    }\n\n    constructor(definition: DeviceTypeElement.Properties) {\n        super(definition);\n    }\n\n    static {\n        Model.types[DeviceTypeElement.Tag] = this;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,sBAAoE;AAGpE,mBAAsB;AACtB,8BAAiC;AAXjC;AAAA;AAAA;AAAA;AAAA;AAaO,MAAM,wBAAwB,mBAAmC;AAAA,EAC3D,MAA6B,kCAAkB;AAAA,EAIxD,IAAI,eAAe;AACf,WAAO,KAAK,IAAI,wCAAgB;AAAA,EACpC;AAAA,EAEA,IAAI,WAAW;AACX,WACI,MAAM,IAAI,0CAAkB,YAAY,GAAG,IAAI,0CAAkB,gBAAgB,GAAG,QAAQ,CAAC,EAAE,YAAY;AAAA,EAEnH;AAAA,EAEA,IAAa,WAAuF;AAChG,WAAO,MAAM;AAAA,EACjB;AAAA,EAEA,IAAa,SAAS,UAAiF;AACnG,UAAM,WAAW;AAAA,EACrB;AAAA,EAEA,YAAY,YAA0C;AAClD,UAAM,UAAU;AAAA,EACpB;AAAA,EAEA,OAAO;AACH,uBAAM,MAAM,kCAAkB,GAAG,IAAI;AAAA,EACzC;AACJ;",
  "names": []
}
