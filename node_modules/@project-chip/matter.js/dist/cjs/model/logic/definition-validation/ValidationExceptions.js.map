{
  "version": 3,
  "sources": ["../../../../../src/model/logic/definition-validation/ValidationExceptions.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Validations such as \"does this enum have children\" are important for ensuring correctness but are formally to\n * restrictive base on the specification.  To keep these active without carrying spurious warnings we capture exceptions\n * to validation rules here.\n */\nexport namespace ValidationExceptions {\n    export const AllowedEmptyEnums = new Set<string>([\n        // Global types defined as enum but without specific fields\n        \"tag\",\n        \"namespace\",\n\n        // Extensions of ModeBase may define mode tags but the base cluster does not\n        \"ModeBase.ModeTagStruct.value\",\n\n        // It's unclear where these enum values come from or if there even a standard definition for them\n        \"ModeSelect.state.standardNamespace\",\n\n        // This is one of multiple *EffectVariant fields (depending on the EffectIdentifier field).  We could override\n        // with a union type but then validation wouldn't be entirely accurate anyway, so we just leave as a bare uint16\n        \"OnOff.offWithEffect.effectVariant\",\n\n        // These are defined as broad ranges without specific values\n        \"OperationalState.OperationalStateEnum\",\n\n        // This is also defined in ranges\n        \"OperationalState.events.operationCompletion.completionErrorCode\",\n\n        // These have some values defined but we place in a separate enum so TS allows other values as well\n        \"OperationalState.ErrorStateEnum\",\n    ]);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWO,IAAU;AAAA,CAAV,CAAUA,0BAAV;AACI,EAAMA,sBAAA,oBAAoB,oBAAI,IAAY;AAAA;AAAA,IAE7C;AAAA,IACA;AAAA;AAAA,IAGA;AAAA;AAAA,IAGA;AAAA;AAAA;AAAA,IAIA;AAAA;AAAA,IAGA;AAAA;AAAA,IAGA;AAAA;AAAA,IAGA;AAAA,EACJ,CAAC;AAAA,GAxBY;",
  "names": ["ValidationExceptions"]
}
