{
  "version": 3,
  "sources": ["../../../../../src/model/logic/definition-validation/CommandValidator.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommandElement } from \"../../elements/index.js\";\nimport { CommandModel, FieldModel, ValueModel } from \"../../models/index.js\";\nimport { ModelValidator } from \"./ModelValidator.js\";\n\nModelValidator.validators[CommandElement.Tag] = class CommandValidator extends ModelValidator<CommandModel> {\n    override validate() {\n        this.validateStructure(true, FieldModel);\n        this.validateProperty({\n            name: \"effectiveDirection\",\n            type: CommandElement.Direction,\n            required: true,\n        });\n        this.validateProperty({\n            name: \"response\",\n            type: \"string\",\n        });\n\n        const response = this.model.response;\n        if (response && response !== \"status\") {\n            const responseModel = this.model.responseModel;\n            if (!responseModel) {\n                this.error(\"RESPONSE_NOT_FOUND\", `response type ${response} not found`);\n            }\n            if (!(responseModel instanceof ValueModel)) {\n                this.error(\"INVALID_RESPONSE_TYPE\", `response type ${response} is not a ValueModel`);\n            }\n        }\n\n        super.validate();\n    }\n};\n"],
  "mappings": ";AAMA,sBAA+B;AAC/B,oBAAqD;AACrD,4BAA+B;AAR/B;AAAA;AAAA;AAAA;AAAA;AAUA,qCAAe,WAAW,+BAAe,GAAG,IAAI,MAAM,yBAAyB,qCAA6B;AAAA,EAC/F,WAAW;AAChB,SAAK,kBAAkB,MAAM,wBAAU;AACvC,SAAK,iBAAiB;AAAA,MAClB,MAAM;AAAA,MACN,MAAM,+BAAe;AAAA,MACrB,UAAU;AAAA,IACd,CAAC;AACD,SAAK,iBAAiB;AAAA,MAClB,MAAM;AAAA,MACN,MAAM;AAAA,IACV,CAAC;AAED,UAAM,WAAW,KAAK,MAAM;AAC5B,QAAI,YAAY,aAAa,UAAU;AACnC,YAAM,gBAAgB,KAAK,MAAM;AACjC,UAAI,CAAC,eAAe;AAChB,aAAK,MAAM,sBAAsB,iBAAiB,QAAQ,YAAY;AAAA,MAC1E;AACA,UAAI,EAAE,yBAAyB,2BAAa;AACxC,aAAK,MAAM,yBAAyB,iBAAiB,QAAQ,sBAAsB;AAAA,MACvF;AAAA,IACJ;AAEA,UAAM,SAAS;AAAA,EACnB;AACJ;",
  "names": []
}
