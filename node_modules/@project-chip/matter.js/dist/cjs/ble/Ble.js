"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var Ble_exports = {};
__export(Ble_exports, {
  Ble: () => Ble,
  BleChannel: () => BleChannel,
  BleError: () => BleError
});
module.exports = __toCommonJS(Ble_exports);
var import_Channel = require("../common/Channel.js");
var import_MatterError = require("../common/MatterError.js");
var import_BleConsts = require("./BleConsts.js");
/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
class BleError extends import_MatterError.MatterError {
}
function BleDisabled() {
  throw new import_MatterError.NoProviderError("No provider configured");
}
class Ble {
  static get = BleDisabled;
  static get enabled() {
    return this.get !== BleDisabled;
  }
}
class BleChannel {
  maxPayloadSize = import_BleConsts.BLE_MAX_MATTER_PAYLOAD_SIZE;
  isReliable = true;
  // BLE uses BTP which is reliable
  type = import_Channel.ChannelType.BLE;
}
//# sourceMappingURL=Ble.js.map
