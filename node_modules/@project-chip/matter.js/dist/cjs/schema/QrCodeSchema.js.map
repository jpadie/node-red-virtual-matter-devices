{
  "version": 3,
  "sources": ["../../../src/schema/QrCodeSchema.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NotImplementedError, UnexpectedDataError } from \"../common/MatterError.js\";\nimport { ReedSolomon } from \"../math/ReedSolomon.js\";\nimport { ByteArray } from \"../util/ByteArray.js\";\nimport { Schema } from \"./Schema.js\";\n\nconst QR_MASK = [\n    [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0],\n    [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0],\n    [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0],\n    [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0],\n    [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0],\n    [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0],\n    [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1],\n    [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],\n    [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],\n    [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],\n    [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],\n    [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],\n    [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],\n    [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],\n    [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],\n    [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],\n    [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],\n    [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],\n];\n\nenum Direction {\n    UP,\n    DOWN,\n}\n\nconst BLOCKS = [\n    { x: 19, y: 19, dir: Direction.UP },\n    { x: 19, y: 17, dir: Direction.UP },\n    { x: 19, y: 15, dir: Direction.UP },\n    { x: 19, y: 13, dir: Direction.UP },\n    { x: 19, y: 11, dir: Direction.UP },\n    { x: 19, y: 9, dir: Direction.UP },\n    { x: 17, y: 9, dir: Direction.DOWN },\n    { x: 17, y: 11, dir: Direction.DOWN },\n    { x: 17, y: 13, dir: Direction.DOWN },\n    { x: 17, y: 15, dir: Direction.DOWN },\n    { x: 17, y: 17, dir: Direction.DOWN },\n    { x: 17, y: 19, dir: Direction.DOWN },\n    { x: 15, y: 19, dir: Direction.UP },\n    { x: 15, y: 17, dir: Direction.UP },\n    { x: 15, y: 15, dir: Direction.UP },\n    { x: 15, y: 13, dir: Direction.UP },\n    { x: 15, y: 11, dir: Direction.UP },\n    { x: 15, y: 9, dir: Direction.UP },\n    { x: 13, y: 9, dir: Direction.DOWN },\n    { x: 13, y: 11, dir: Direction.DOWN },\n    { x: 13, y: 13, dir: Direction.DOWN },\n    { x: 13, y: 15, dir: Direction.DOWN },\n    { x: 13, y: 17, dir: Direction.DOWN },\n    { x: 13, y: 19, dir: Direction.DOWN },\n    { x: 11, y: 19, dir: Direction.UP },\n    { x: 11, y: 17, dir: Direction.UP },\n    { x: 11, y: 15, dir: Direction.UP },\n    { x: 11, y: 13, dir: Direction.UP },\n    { x: 11, y: 11, dir: Direction.UP },\n    { x: 11, y: 9, dir: Direction.UP },\n    { x: 11, y: 7, dir: Direction.UP },\n    { x: 11, y: 4, dir: Direction.UP },\n    { x: 11, y: 2, dir: Direction.UP },\n    { x: 11, y: 0, dir: Direction.UP },\n    { x: 9, y: 0, dir: Direction.DOWN },\n    { x: 9, y: 2, dir: Direction.DOWN },\n    { x: 9, y: 4, dir: Direction.DOWN },\n    { x: 9, y: 7, dir: Direction.DOWN },\n    { x: 9, y: 9, dir: Direction.DOWN },\n    { x: 9, y: 11, dir: Direction.DOWN },\n    { x: 9, y: 13, dir: Direction.DOWN },\n    { x: 9, y: 15, dir: Direction.DOWN },\n    { x: 9, y: 17, dir: Direction.DOWN },\n    { x: 9, y: 19, dir: Direction.DOWN },\n    { x: 7, y: 11, dir: Direction.UP },\n    { x: 7, y: 9, dir: Direction.UP },\n    { x: 4, y: 9, dir: Direction.DOWN },\n    { x: 4, y: 11, dir: Direction.DOWN },\n    { x: 2, y: 11, dir: Direction.UP },\n    { x: 2, y: 9, dir: Direction.UP },\n    { x: 0, y: 9, dir: Direction.DOWN },\n    { x: 0, y: 11, dir: Direction.DOWN },\n];\n\nconst ALPHABET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n\nexport class QrCodeSchema extends Schema<string, string> {\n    protected encodeInternal(data: string): string {\n        const bitStringBuilder = new Array<string>();\n        const { length } = data;\n        let bitCount = 0;\n\n        // Mode: Alphanumeric\n        bitStringBuilder.push(\"0010\");\n        bitCount += 4;\n\n        // Length\n        bitStringBuilder.push(length.toString(2).padStart(9, \"0\"));\n        bitCount += 9;\n\n        let index = 0;\n        while (index < length) {\n            const value = 45 * this.getCode(data[index]) + (index < length - 2 ? this.getCode(data[index + 1]) : 0);\n            bitStringBuilder.push(value.toString(2).padStart(11, \"0\"));\n            index += 2;\n            bitCount += 11;\n        }\n\n        // Terminator\n        bitStringBuilder.push(\"0000\");\n        bitCount += 4;\n\n        // Bit padding\n        const remainingBits = 8 - (bitCount % 8);\n        if (remainingBits !== 0) {\n            bitStringBuilder.push(\"\".padStart(remainingBits, \"0\"));\n            bitCount += remainingBits;\n        }\n\n        // Byte padding\n        const remainingBytes = 19 - bitCount / 8;\n        for (let i = 0; i < remainingBytes; i++) {\n            if (i % 2 === 0) {\n                bitStringBuilder.push(\"11101100\");\n            } else {\n                bitStringBuilder.push(\"00010001\");\n            }\n        }\n\n        // Convert to bytes\n        const dataBytes = new ByteArray(19);\n        for (let i = 0; i < 19; i++) {\n            dataBytes[i] = Number.parseInt(bitStringBuilder.join(\"\").slice(i * 8, i * 8 + 8), 2);\n        }\n\n        // Compute EC\n        const ecBytes = new ReedSolomon().computeErrorCorrection(dataBytes, 7);\n\n        // Add EC bits\n        for (let i = 0; i < 7; i++) {\n            bitStringBuilder.push(ecBytes[i].toString(2).padStart(8, \"0\"));\n        }\n\n        // Copy base QR code\n        const qrCode = <number[][]>[];\n        QR_MASK.forEach((line, index) => (qrCode[index] = [...line]));\n\n        //qrCode.forEach((line, x) => line.forEach((_v, y) => qrCode[x][y] = 1))\n\n        // Gererate the bit string\n        const bitString = bitStringBuilder.join(\"\");\n\n        // Xor the bits\n        let offset = 0;\n        BLOCKS.forEach(({ x, y, dir }) => {\n            const yStart = dir === Direction.UP ? y + 1 : y;\n            const yEnd = dir === Direction.UP ? y : y + 1;\n            if (bitString[offset] === \"1\") qrCode[yStart][x + 1] = 1 - qrCode[yStart][x + 1];\n            if (bitString[offset + 1] === \"1\") qrCode[yStart][x] = 1 - qrCode[yStart][x];\n            if (bitString[offset + 2] === \"1\") qrCode[yEnd][x + 1] = 1 - qrCode[yEnd][x + 1];\n            if (bitString[offset + 3] === \"1\") qrCode[yEnd][x] = 1 - qrCode[yEnd][x];\n            offset += 4;\n        });\n\n        // Draw QR Code\n        const result = new Array<string>();\n        result.push(\"\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\\n\");\n        for (let y = 0; y < 21; y += 2) {\n            result.push(\"\u2588\");\n            for (let x = 0; x < 21; x++) {\n                if (qrCode[y][x] === 0) {\n                    if (y === 20 || qrCode[y + 1][x] === 1) {\n                        result.push(\"\u2584\");\n                    } else {\n                        result.push(\" \");\n                    }\n                } else {\n                    if (y === 20 || qrCode[y + 1][x] === 1) {\n                        result.push(\"\u2588\");\n                    } else {\n                        result.push(\"\u2580\");\n                    }\n                }\n            }\n            result.push(\"\u2588\\n\");\n        }\n        result.push(\"\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\\n\");\n        return result.join(\"\");\n    }\n\n    private getCode(char: string) {\n        const code = ALPHABET.indexOf(char);\n        if (code === -1) throw new UnexpectedDataError(`Invalid character ${char}`);\n        return code;\n    }\n\n    protected decodeInternal(_encoded: string): string {\n        throw new NotImplementedError(\"Method not implemented.\");\n    }\n\n    get(code: string): string {\n        return this.encode(code);\n    }\n}\n\nexport const QrCode = new QrCodeSchema();\n"],
  "mappings": "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",
  "names": ["Direction", "index"]
}
