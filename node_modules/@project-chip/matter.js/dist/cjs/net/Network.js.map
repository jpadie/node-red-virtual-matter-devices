{
  "version": 3,
  "sources": ["../../../src/net/Network.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MatterError, NoProviderError } from \"../common/MatterError.js\";\nimport { MaybePromise } from \"../util/Promises.js\";\nimport { UdpChannel, UdpChannelOptions } from \"./UdpChannel.js\";\n\nexport class NetworkError extends MatterError {}\n\n/**\n * @see {@link MatterSpecification.v11.Core} \u00A7 11.11.4.4\n * Duplicated from the GeneralDiagnostics cluster to avoid circular dependencies.\n */\nexport enum InterfaceType {\n    /**\n     * Indicates an interface of an unspecified type.\n     */\n    Unspecified = 0,\n\n    /**\n     * Indicates a Wi-Fi interface.\n     */\n    WiFi = 1,\n\n    /**\n     * Indicates a Ethernet interface.\n     */\n    Ethernet = 2,\n\n    /**\n     * Indicates a Cellular interface.\n     */\n    Cellular = 3,\n\n    /**\n     * Indicates a Thread interface.\n     */\n    Thread = 4,\n}\n\nexport type NetworkInterface = {\n    name: string;\n    type?: InterfaceType;\n};\n\nexport type NetworkInterfaceDetails = {\n    mac: string;\n    ipV4: string[];\n    ipV6: string[];\n};\n\nexport type NetworkInterfaceDetailed = NetworkInterface & NetworkInterfaceDetails;\n\nexport abstract class Network {\n    // TODO - remove this singleton\n    static get: () => Network = () => {\n        throw new NoProviderError(\"No provider configured\");\n    };\n\n    abstract getNetInterfaces(configuration?: NetworkInterface[]): MaybePromise<NetworkInterface[]>;\n    abstract getIpMac(netInterface: string): MaybePromise<NetworkInterfaceDetails | undefined>;\n    abstract createUdpChannel(options: UdpChannelOptions): Promise<UdpChannel>;\n\n    async close() {\n        // Nothing to do\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,yBAA6C;AAN7C;AAAA;AAAA;AAAA;AAAA;AAUO,MAAM,qBAAqB,+BAAY;AAAC;AAMxC,IAAK,gBAAL,kBAAKA,mBAAL;AAIH,EAAAA,8BAAA,iBAAc,KAAd;AAKA,EAAAA,8BAAA,UAAO,KAAP;AAKA,EAAAA,8BAAA,cAAW,KAAX;AAKA,EAAAA,8BAAA,cAAW,KAAX;AAKA,EAAAA,8BAAA,YAAS,KAAT;AAxBQ,SAAAA;AAAA,GAAA;AAwCL,MAAe,QAAQ;AAAA;AAAA,EAE1B,OAAO,MAAqB,MAAM;AAC9B,UAAM,IAAI,mCAAgB,wBAAwB;AAAA,EACtD;AAAA,EAMA,MAAM,QAAQ;AAAA,EAEd;AACJ;",
  "names": ["InterfaceType"]
}
