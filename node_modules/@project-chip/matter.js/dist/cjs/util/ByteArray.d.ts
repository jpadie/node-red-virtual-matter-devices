/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
declare global {
    interface Uint8Array {
        /** Displays as a hex string. */
        toHex(): string;
        /** Displays as a hex string. */
        toBase64(): string;
        /** Gets a {@link DataView} on this array. */
        getDataView(): DataView;
        /** Tests the deep equality of the two arrays. */
        equals(other: Uint8Array): boolean;
    }
    interface Uint8ArrayConstructor {
        /** Gets an {@link ByteArray} from an hex string. */
        fromHex(hexString: string): ByteArray;
        /** Gets an {@link ByteArray} from a base64 string. */
        fromBase64(hexString: string): ByteArray;
        /** Gets an {@link ByteArray} from a UTF-8 string. */
        fromString(string: string): ByteArray;
        /** Concats {@link ByteArray}s. */
        concat(...arrays: Uint8Array[]): Uint8Array;
    }
}
/** Array of bytes, alias of {@link Uint8Array}. */
export type ByteArray = Uint8Array;
export declare const ByteArray: Uint8ArrayConstructor;
export declare enum Endian {
    Little = 0,
    Big = 1
}
//# sourceMappingURL=ByteArray.d.ts.map