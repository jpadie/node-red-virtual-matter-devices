/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { ByteArray, Endian } from "./ByteArray.js";
/** Reader that auto-increments its offset after each read. */
export declare class DataReader<E extends Endian> {
    private readonly buffer;
    private readonly littleEndian;
    private readonly dataView;
    private offset;
    constructor(buffer: ByteArray, endian: E);
    readUInt8(): number;
    readUInt16(): number;
    readUInt32(): number;
    readUInt64(): bigint;
    readInt8(): number;
    readInt16(): number;
    readInt32(): number;
    readInt64(): bigint;
    readFloat(): number;
    readDouble(): number;
    readUtf8String(length: number): string;
    readByteArray(length: number): Uint8Array;
    getRemainingBytesCount(): number;
    getRemainingBytes(): Uint8Array;
    getLength(): number;
    setOffset(offset: number): void;
    private getOffsetAndAdvance;
}
//# sourceMappingURL=DataReader.d.ts.map