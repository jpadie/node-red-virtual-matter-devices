{
  "version": 3,
  "sources": ["../../../src/util/Queue.ts"],
  "sourcesContent": ["/**\n * Promise-based blocking queue.\n *\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MatterFlowError } from \"../common/MatterError.js\";\nimport { Time, Timer } from \"../time/Time.js\";\nimport { createPromise } from \"./Promises.js\";\nimport { EndOfStreamError, NoResponseTimeoutError, Stream } from \"./Stream.js\";\n\nexport class Queue<T> implements Stream<T> {\n    private readonly queue = new Array<T>();\n    private pendingRead?: { resolver: (data: T) => void; rejecter: (reason: any) => void; timeoutTimer?: Timer };\n    private closed = false;\n\n    async read(timeoutMs = 60_000): Promise<T> {\n        const { promise, resolver, rejecter } = createPromise<T>();\n        if (this.closed) throw new EndOfStreamError();\n        const data = this.queue.shift();\n        if (data !== undefined) {\n            return data;\n        }\n        if (this.pendingRead !== undefined) throw new MatterFlowError(\"Only one pending read is supported\");\n        this.pendingRead = {\n            resolver,\n            rejecter,\n            timeoutTimer: Time.getTimer(\"Queue timeout\", timeoutMs, () =>\n                rejecter(new NoResponseTimeoutError()),\n            ).start(),\n        };\n        return promise;\n    }\n\n    async write(data: T) {\n        if (this.closed) throw new EndOfStreamError();\n        if (this.pendingRead !== undefined) {\n            this.pendingRead.timeoutTimer?.stop();\n            this.pendingRead.resolver(data);\n            this.pendingRead = undefined;\n            return;\n        }\n        this.queue.push(data);\n    }\n\n    close() {\n        if (this.closed) return;\n        this.closed = true;\n        if (this.pendingRead === undefined) return;\n        this.pendingRead.timeoutTimer?.stop();\n        this.pendingRead.rejecter(new EndOfStreamError());\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,yBAAgC;AAChC,kBAA4B;AAC5B,sBAA8B;AAC9B,oBAAiE;AAXjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaO,MAAM,MAA8B;AAAA,EACtB,QAAQ,IAAI,MAAS;AAAA,EAC9B;AAAA,EACA,SAAS;AAAA,EAEjB,MAAM,KAAK,YAAY,KAAoB;AACvC,UAAM,EAAE,SAAS,UAAU,SAAS,QAAI,+BAAiB;AACzD,QAAI,KAAK,OAAQ,OAAM,IAAI,+BAAiB;AAC5C,UAAM,OAAO,KAAK,MAAM,MAAM;AAC9B,QAAI,SAAS,QAAW;AACpB,aAAO;AAAA,IACX;AACA,QAAI,KAAK,gBAAgB,OAAW,OAAM,IAAI,mCAAgB,oCAAoC;AAClG,SAAK,cAAc;AAAA,MACf;AAAA,MACA;AAAA,MACA,cAAc,iBAAK;AAAA,QAAS;AAAA,QAAiB;AAAA,QAAW,MACpD,SAAS,IAAI,qCAAuB,CAAC;AAAA,MACzC,EAAE,MAAM;AAAA,IACZ;AACA,WAAO;AAAA,EACX;AAAA,EAEA,MAAM,MAAM,MAAS;AACjB,QAAI,KAAK,OAAQ,OAAM,IAAI,+BAAiB;AAC5C,QAAI,KAAK,gBAAgB,QAAW;AAChC,WAAK,YAAY,cAAc,KAAK;AACpC,WAAK,YAAY,SAAS,IAAI;AAC9B,WAAK,cAAc;AACnB;AAAA,IACJ;AACA,SAAK,MAAM,KAAK,IAAI;AAAA,EACxB;AAAA,EAEA,QAAQ;AACJ,QAAI,KAAK,OAAQ;AACjB,SAAK,SAAS;AACd,QAAI,KAAK,gBAAgB,OAAW;AACpC,SAAK,YAAY,cAAc,KAAK;AACpC,SAAK,YAAY,SAAS,IAAI,+BAAiB,CAAC;AAAA,EACpD;AACJ;",
  "names": []
}
