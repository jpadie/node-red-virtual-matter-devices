{
  "version": 3,
  "sources": ["../../../src/util/Error.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport type { Constructable } from \"./Construction.js\";\n\n/**\n * Ensure that a cause is an error object.\n *\n * We consider anything with a \"message\" property to be a reasonable error object.\n */\nexport function errorOf(cause: unknown): Error {\n    // If the cause is an Constructable, use its construction error\n    if ((cause as Constructable)?.construction?.error) {\n        cause = (cause as Constructable)?.construction.error;\n    }\n\n    // If the cause is indeterminate we fall back to the helpful \"Unknown error\"\n    if (cause === undefined || cause === null) {\n        return Error(\"Unknown error\");\n    }\n\n    // If the cause has a \"message\" field, treat as an Error\n    if ((cause as Error).message !== undefined) {\n        return cause as Error;\n    }\n\n    // Otherwise create a new error using the original cause as the message\n    return new Error(cause.toString());\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaO,SAAS,QAAQ,OAAuB;AAE3C,MAAK,OAAyB,cAAc,OAAO;AAC/C,YAAS,OAAyB,aAAa;AAAA,EACnD;AAGA,MAAI,UAAU,UAAa,UAAU,MAAM;AACvC,WAAO,MAAM,eAAe;AAAA,EAChC;AAGA,MAAK,MAAgB,YAAY,QAAW;AACxC,WAAO;AAAA,EACX;AAGA,SAAO,IAAI,MAAM,MAAM,SAAS,CAAC;AACrC;",
  "names": []
}
