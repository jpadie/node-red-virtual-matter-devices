{
  "version": 3,
  "sources": ["../../../../../src/behavior/context/server/ContextAgents.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Agent } from \"../../../endpoint/Agent.js\";\nimport { Endpoint } from \"../../../endpoint/Endpoint.js\";\nimport { EndpointType } from \"../../../endpoint/type/EndpointType.js\";\nimport { ActionContext } from \"../ActionContext.js\";\n\n/**\n * Internal helper for managing agents associated with a session.\n */\nexport interface ContextAgents extends ReturnType<typeof ContextAgents> {}\n\nexport function ContextAgents(context: ActionContext) {\n    const agents = new Map<Endpoint, Agent>();\n\n    return {\n        [Symbol.toStringTag]: \"ContextAgents\",\n\n        agentFor<const T extends EndpointType>(endpoint: Endpoint<T>): Agent.Instance<T> {\n            let agent = agents.get(endpoint) as undefined | Agent.Instance<T>;\n            if (agent === undefined) {\n                agents.set(endpoint, (agent = new endpoint.agentType(endpoint, context)));\n            }\n            return agent;\n        },\n    };\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAgBO,SAAS,cAAc,SAAwB;AAClD,QAAM,SAAS,oBAAI,IAAqB;AAExC,SAAO;AAAA,IACH,CAAC,OAAO,WAAW,GAAG;AAAA,IAEtB,SAAuC,UAA0C;AAC7E,UAAI,QAAQ,OAAO,IAAI,QAAQ;AAC/B,UAAI,UAAU,QAAW;AACrB,eAAO,IAAI,UAAW,QAAQ,IAAI,SAAS,UAAU,UAAU,OAAO,CAAE;AAAA,MAC5E;AACA,aAAO;AAAA,IACX;AAAA,EACJ;AACJ;",
  "names": []
}
