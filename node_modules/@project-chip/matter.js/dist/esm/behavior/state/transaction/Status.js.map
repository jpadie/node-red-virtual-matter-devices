{
  "version": 3,
  "sources": ["../../../../../src/behavior/state/transaction/Status.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TransactionFlowError } from \"./Errors.js\";\nimport type { Transaction } from \"./Transaction.js\";\n\n/**\n * The lifecycle of a transaction adheres to the following discrete stages.\n */\nexport enum Status {\n    /**\n     * Transaction may be used only for read operations.\n     */\n    ReadOnly = \"read only\",\n\n    /**\n     * Transaction is registered but there are no ACID guarantees.\n     */\n    Shared = \"shared\",\n\n    /**\n     * Transaction is waiting to obtain exclusive access to resources.\n     */\n    Waiting = \"waiting\",\n\n    /**\n     * Transaction has exclusive access.  Reads will maintain consistency\n     * and writes are allowed.\n     */\n    Exclusive = \"exclusive\",\n\n    /**\n     * Transaction is in the process of committing, phase one.\n     */\n    CommittingPhaseOne = \"committing phase one\",\n\n    /**\n     * Transaction is in the process of committing, phase two.\n     */\n    CommittingPhaseTwo = \"committing phase two\",\n\n    /**\n     * Transaction is in the process of rolling back.\n     */\n    RollingBack = \"rolling back\",\n\n    /**\n     * Transaction is destroyed, no further operations permitted.\n     */\n    Destroyed = \"destroyed\",\n}\n\nexport namespace Status {\n    export function assert(transaction: Transaction, acceptable: Status[], target: Status) {\n        if (!acceptable.includes(transaction.status)) {\n            throw new TransactionFlowError(\n                `Cannot transition transaction from ${formatStatus(transaction.status)} to ${formatStatus(target)}`,\n            );\n        }\n    }\n\n    export function formatStatus(status: Status) {\n        return `<${status}>`;\n    }\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,SAAS,4BAA4B;AAM9B,IAAK,SAAL,kBAAKA,YAAL;AAIH,EAAAA,QAAA,cAAW;AAKX,EAAAA,QAAA,YAAS;AAKT,EAAAA,QAAA,aAAU;AAMV,EAAAA,QAAA,eAAY;AAKZ,EAAAA,QAAA,wBAAqB;AAKrB,EAAAA,QAAA,wBAAqB;AAKrB,EAAAA,QAAA,iBAAc;AAKd,EAAAA,QAAA,eAAY;AAxCJ,SAAAA;AAAA,GAAA;AAAA,CA2CL,CAAUA,YAAV;AACI,WAAS,OAAO,aAA0B,YAAsB,QAAgB;AACnF,QAAI,CAAC,WAAW,SAAS,YAAY,MAAM,GAAG;AAC1C,YAAM,IAAI;AAAA,QACN,sCAAsC,aAAa,YAAY,MAAM,CAAC,OAAO,aAAa,MAAM,CAAC;AAAA,MACrG;AAAA,IACJ;AAAA,EACJ;AANO,EAAAA,QAAS;AAQT,WAAS,aAAa,QAAgB;AACzC,WAAO,IAAI,MAAM;AAAA,EACrB;AAFO,EAAAA,QAAS;AAAA,GATH;",
  "names": ["Status"]
}
