{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/identify/IdentifyInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\nimport { Identify } from \"../../../cluster/definitions/IdentifyCluster.js\";\n\nexport namespace IdentifyInterface {\n    export interface Base {\n        /**\n         * This command starts or stops the receiving device identifying itself.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.2.6.1\n         */\n        identify(request: Identify.IdentifyRequest): MaybePromise;\n\n        /**\n         * This command allows the support of feedback to the user, such as a certain light effect. It is used to allow\n         * an implementation to provide visual feedback to the user under certain circumstances such as a color light\n         * turning green when it has successfully connected to a network. The use of this command and the effects\n         * themselves are entirely up to the implementer to use whenever a visual feedback is useful but it is not the\n         * same as and does not replace the identify mechanism used during commissioning.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.2.6.2\n         */\n        triggerEffect(request: Identify.TriggerEffectRequest): MaybePromise;\n    }\n}\n\nexport type IdentifyInterface = { components: [{ flags: {}, methods: IdentifyInterface.Base }] };\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
