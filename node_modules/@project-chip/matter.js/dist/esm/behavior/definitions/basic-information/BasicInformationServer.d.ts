/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { BasicInformation } from "../../../cluster/definitions/BasicInformationCluster.js";
import { VendorId } from "../../../datatype/VendorId.js";
declare const Base: import("../../cluster/ClusterBehavior.js").ClusterBehavior.Type<import("../../../cluster/export.js").ElementModifier.WithAlterations<BasicInformation.Cluster, import("../../../cluster/export.js").ElementModifier.ElementFlagAlterations<{
    readonly events: {
        readonly startUp: true;
        readonly shutDown: true;
        readonly leave: true;
    };
}>>, import("../../cluster/ClusterBehavior.js").ClusterBehavior.Type<BasicInformation.Cluster, typeof import("../../cluster/ClusterBehavior.js").ClusterBehavior, {
    components: never[];
}>, {
    components: never[];
}>;
/**
 * This is the default server implementation of BasicInformationBehavior.
 */
export declare class BasicInformationServer extends Base {
    #private;
    initialize(): void;
    [Symbol.asyncDispose](): void;
}
export declare namespace BasicInformationServer {
    interface ProductDescription {
        /**
         * The device name for commissioning announcements.
         */
        readonly name: string;
        /**
         * The device type for commissioning announcements.
         */
        readonly deviceType: number;
        /**
         * The vendor ID for commissioning announcements.
         */
        readonly vendorId: VendorId;
        /**
         * The product ID for commissioning announcements.
         */
        readonly productId: number;
    }
}
export {};
//# sourceMappingURL=BasicInformationServer.d.ts.map