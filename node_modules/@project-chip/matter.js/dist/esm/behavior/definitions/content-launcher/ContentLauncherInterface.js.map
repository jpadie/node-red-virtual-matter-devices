{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/content-launcher/ContentLauncherInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\nimport { ContentLauncher } from \"../../../cluster/definitions/ContentLauncherCluster.js\";\n\nexport namespace ContentLauncherInterface {\n    export interface UrlPlayback {\n        /**\n         * Upon receipt, this shall launch content from the specified URL.\n         *\n         * The content types supported include those identified in the AcceptHeader and SupportedStreaming\n         *\n         * Protocols attributes.\n         *\n         * A check shall be made to ensure the URL is secure (uses HTTPS).\n         *\n         * When playing a video stream in response to this command, an indication (ex. visual) of the identity of the\n         * origin node of the video stream shall be provided. This could be in the form of a friendly name label which\n         * uniquely identifies the node to the user. This friendly name label is typically assigned by the Matter Admin\n         * (ex. TV) at the time of commissioning and, when it\u2019s a device, is often editable by the user. It might be a\n         * combination of a company name and friendly name, for example, \u201DAcme\u201D or \u201CAcme Streaming Service on Alice\u2019s\n         * Phone\u201D.\n         *\n         * This command returns a Launch Response.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.7.7.2\n         */\n        launchUrl(request: ContentLauncher.LaunchUrlRequest): MaybePromise<ContentLauncher.LauncherResponse>;\n    }\n\n    export interface ContentSearch {\n        /**\n         * Upon receipt, this shall launch the specified content with optional search criteria. This command returns a\n         * Launch Response.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.7.7.1\n         */\n        launchContent(request: ContentLauncher.LaunchContentRequest): MaybePromise<ContentLauncher.LauncherResponse>;\n    }\n}\n\nexport type ContentLauncherInterface = {\n    components: [\n        { flags: { urlPlayback: true }, methods: ContentLauncherInterface.UrlPlayback },\n        { flags: { contentSearch: true }, methods: ContentLauncherInterface.ContentSearch }\n    ]\n};\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
