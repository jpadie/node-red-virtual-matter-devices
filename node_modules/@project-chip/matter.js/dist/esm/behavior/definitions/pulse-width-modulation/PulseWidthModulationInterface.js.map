{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/pulse-width-modulation/PulseWidthModulationInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\nimport { TypeFromSchema } from \"../../../tlv/TlvSchema.js\";\nimport { LevelControl } from \"../../../cluster/definitions/LevelControlCluster.js\";\n\n/**\n * @see {@link MatterSpecification.v11.Cluster} \u00A7 1.6.6.1\n */\nexport type MoveToLevelRequest = TypeFromSchema<typeof LevelControl.TlvMoveToLevelRequest>;\n\n/**\n * @see {@link MatterSpecification.v11.Cluster} \u00A7 1.6.6.2\n */\nexport type MoveRequest = TypeFromSchema<typeof LevelControl.TlvMoveRequest>;\n\n/**\n * The StepMode field shall be one of the non-reserved values in Values of the StepMode Field.\n *\n * The TransitionTime field specifies the time that shall be taken to perform the step, in tenths of a second. A step\n * is a change in the CurrentLevel of StepSize units. The actual time taken SHOULD be as close to this as the device is\n * able. If the TransitionTime field is equal to null, the device SHOULD move as fast as it is able.\n *\n * If the device is not able to move at a variable rate, the TransitionTime field may be disregarded.\n *\n * @see {@link MatterSpecification.v11.Cluster} \u00A7 1.6.6.3\n */\nexport type StepRequest = TypeFromSchema<typeof LevelControl.TlvStepRequest>;\n\n/**\n * @see {@link MatterSpecification.v11.Cluster} \u00A7 1.6.6.4\n */\nexport type StopRequest = TypeFromSchema<typeof LevelControl.TlvStopRequest>;\n\n/**\n * @see {@link MatterSpecification.v11.Cluster} \u00A7 1.6.6.5\n */\nexport type MoveToClosestFrequencyRequest = TypeFromSchema<typeof LevelControl.TlvMoveToClosestFrequencyRequest>;\n\nexport namespace PulseWidthModulationInterface {\n    export interface Base {\n        /**\n         * @see {@link MatterSpecification.v11.Cluster} \u00A7 1.6.6.1\n         */\n        moveToLevel(request: MoveToLevelRequest): MaybePromise;\n\n        /**\n         * @see {@link MatterSpecification.v11.Cluster} \u00A7 1.6.6.2\n         */\n        move(request: MoveRequest): MaybePromise;\n\n        /**\n         * The StepMode field shall be one of the non-reserved values in Values of the StepMode Field.\n         *\n         * The TransitionTime field specifies the time that shall be taken to perform the step, in tenths of a second.\n         * A step is a change in the CurrentLevel of StepSize units. The actual time taken SHOULD be as close to this\n         * as the device is able. If the TransitionTime field is equal to null, the device SHOULD move as fast as it is\n         * able.\n         *\n         * If the device is not able to move at a variable rate, the TransitionTime field may be disregarded.\n         *\n         * @see {@link MatterSpecification.v11.Cluster} \u00A7 1.6.6.3\n         */\n        step(request: StepRequest): MaybePromise;\n\n        /**\n         * @see {@link MatterSpecification.v11.Cluster} \u00A7 1.6.6.4\n         */\n        stop(request: StopRequest): MaybePromise;\n\n        /**\n         * @see {@link MatterSpecification.v11.Cluster} \u00A7 1.6.6\n         */\n        moveToLevelWithOnOff(): MaybePromise;\n\n        /**\n         * @see {@link MatterSpecification.v11.Cluster} \u00A7 1.6.6\n         */\n        moveWithOnOff(): MaybePromise;\n\n        /**\n         * @see {@link MatterSpecification.v11.Cluster} \u00A7 1.6.6\n         */\n        stepWithOnOff(): MaybePromise;\n\n        /**\n         * @see {@link MatterSpecification.v11.Cluster} \u00A7 1.6.6\n         */\n        stopWithOnOff(): MaybePromise;\n    }\n\n    export interface Frequency {\n        /**\n         * @see {@link MatterSpecification.v11.Cluster} \u00A7 1.6.6.5\n         */\n        moveToClosestFrequency(request: MoveToClosestFrequencyRequest): MaybePromise;\n    }\n}\n\nexport type PulseWidthModulationInterface = {\n    components: [\n        { flags: {}, methods: PulseWidthModulationInterface.Base },\n        { flags: { frequency: true }, methods: PulseWidthModulationInterface.Frequency }\n    ]\n};\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
