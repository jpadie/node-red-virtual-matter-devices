{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/localization-configuration/LocalizationConfigurationServer.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LocalizationConfigurationBehavior } from \"./LocalizationConfigurationBehavior.js\";\n\n/**\n * This is the default server implementation of {@link LocalizationConfigurationBehavior}.\n */\nexport class LocalizationConfigurationServer extends LocalizationConfigurationBehavior {\n    override initialize() {\n        if (this.state.activeLocale === undefined) {\n            this.state.activeLocale = this.detectedLocale;\n        }\n        if (this.state.supportedLocales === undefined) {\n            this.state.supportedLocales = [this.state.activeLocale];\n        }\n    }\n\n    /** Override this getter with own implementation to detect the locale of the system. */\n    protected get detectedLocale() {\n        return Intl.DateTimeFormat().resolvedOptions().locale;\n    }\n}\n\nexport namespace LocalizationConfigurationServer {\n    export declare const ExtensionInterface: {\n        detectedLocale: string;\n    };\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,SAAS,yCAAyC;AAK3C,MAAM,wCAAwC,kCAAkC;AAAA,EAC1E,aAAa;AAClB,QAAI,KAAK,MAAM,iBAAiB,QAAW;AACvC,WAAK,MAAM,eAAe,KAAK;AAAA,IACnC;AACA,QAAI,KAAK,MAAM,qBAAqB,QAAW;AAC3C,WAAK,MAAM,mBAAmB,CAAC,KAAK,MAAM,YAAY;AAAA,IAC1D;AAAA,EACJ;AAAA;AAAA,EAGA,IAAc,iBAAiB;AAC3B,WAAO,KAAK,eAAe,EAAE,gBAAgB,EAAE;AAAA,EACnD;AACJ;AAAA,CAEO,CAAUA,qCAAV;AAAA,GAAU;",
  "names": ["LocalizationConfigurationServer"]
}
