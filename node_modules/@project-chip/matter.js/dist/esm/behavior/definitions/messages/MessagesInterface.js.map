{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/messages/MessagesInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\nimport { Messages } from \"../../../cluster/definitions/MessagesCluster.js\";\n\nexport namespace MessagesInterface {\n    export interface Base {\n        /**\n         * Upon receipt, this shall cause the message in the passed fields to be appended to the Messages attribute.\n         *\n         * If appending the message would cause the number of messages to be greater than the capacity of the list, the\n         * device shall NOT append any message to Messages, and shall return a status code of RESOURCE_EXHAUSTED.\n         *\n         * When displaying a message in response to this command, an indication (ex. visual) of the origin node of the\n         * command shall be provided. This could be in the form of a friendly name label which uniquely identifies the\n         * node to the user. This friendly name label is typically assigned by the Matter Admin at the time of\n         * commissioning and, when it\u2019s a device, is often editable by the user. It might be a combination of a company\n         * name and friendly name, for example, \u201DAcme\u201D or \u201CAcme Streaming Service on Alice\u2019s Phone\u201D.\n         *\n         * NOTE\n         *\n         * It is currently not specified where the friendly name label can be found on the node, meaning that clients\n         * SHOULD NOT rely on a certain method they happen to observe in a particular server instance, since other\n         * instances could employ a different method.\n         *\n         * The device SHOULD make it possible for the user to view which nodes have access to this cluster and to\n         * individually remove privileges for each node.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.16.7.1\n         */\n        presentMessagesRequest(request: Messages.PresentMessagesRequest): MaybePromise;\n\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.16.7.2\n         */\n        cancelMessagesRequest(request: Messages.CancelMessagesRequest): MaybePromise;\n    }\n}\n\nexport type MessagesInterface = { components: [{ flags: {}, methods: MessagesInterface.Base }] };\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
