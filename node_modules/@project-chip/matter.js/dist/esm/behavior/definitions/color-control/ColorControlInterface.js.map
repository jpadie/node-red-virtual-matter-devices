{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/color-control/ColorControlInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\nimport { ColorControl } from \"../../../cluster/definitions/ColorControlCluster.js\";\n\nexport namespace ColorControlInterface {\n    export interface HueSaturation {\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.4\n         */\n        moveToHue(request: ColorControl.MoveToHueRequest): MaybePromise;\n\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.5\n         */\n        moveHue(request: ColorControl.MoveHueRequest): MaybePromise;\n\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.6\n         */\n        stepHue(request: ColorControl.StepHueRequest): MaybePromise;\n\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.7\n         */\n        moveToSaturation(request: ColorControl.MoveToSaturationRequest): MaybePromise;\n\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.8\n         */\n        moveSaturation(request: ColorControl.MoveSaturationRequest): MaybePromise;\n\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.9\n         */\n        stepSaturation(request: ColorControl.StepSaturationRequest): MaybePromise;\n\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.10\n         */\n        moveToHueAndSaturation(request: ColorControl.MoveToHueAndSaturationRequest): MaybePromise;\n    }\n\n    export interface Xy {\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.11\n         */\n        moveToColor(request: ColorControl.MoveToColorRequest): MaybePromise;\n\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.12\n         */\n        moveColor(request: ColorControl.MoveColorRequest): MaybePromise;\n\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.13\n         */\n        stepColor(request: ColorControl.StepColorRequest): MaybePromise;\n    }\n\n    export interface ColorTemperature {\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.14\n         */\n        moveToColorTemperature(request: ColorControl.MoveToColorTemperatureRequest): MaybePromise;\n\n        /**\n         * The MoveColorTemperature command allows the color temperature of a lamp to be moved at a specified rate.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.21\n         */\n        moveColorTemperature(request: ColorControl.MoveColorTemperatureRequest): MaybePromise;\n\n        /**\n         * The StepColorTemperature command allows the color temperature of a lamp to be stepped with a specified step\n         * size.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.22\n         */\n        stepColorTemperature(request: ColorControl.StepColorTemperatureRequest): MaybePromise;\n    }\n\n    export interface EnhancedHue {\n        /**\n         * The EnhancedMoveToHue command allows lamps to be moved in a smooth continuous transition from their current\n         * hue to a target hue.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.15\n         */\n        enhancedMoveToHue(request: ColorControl.EnhancedMoveToHueRequest): MaybePromise;\n\n        /**\n         * The EnhancedMoveHue command allows lamps to be moved in a continuous stepped transition from their current\n         * hue to a target hue.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.16\n         */\n        enhancedMoveHue(request: ColorControl.EnhancedMoveHueRequest): MaybePromise;\n\n        /**\n         * The EnhancedStepHue command allows lamps to be moved in a stepped transition from their current hue to a\n         * target hue, resulting in a linear transition through XY space.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.17\n         */\n        enhancedStepHue(request: ColorControl.EnhancedStepHueRequest): MaybePromise;\n\n        /**\n         * The EnhancedMoveToHueAndSaturation command allows lamps to be moved in a smooth continuous transition from\n         * their current hue to a target hue and from their current saturation to a target saturation.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.18\n         */\n        enhancedMoveToHueAndSaturation(request: ColorControl.EnhancedMoveToHueAndSaturationRequest): MaybePromise;\n    }\n\n    export interface ColorLoop {\n        /**\n         * The Color Loop Set command allows a color loop to be activated such that the color lamp cycles through its\n         * range of hues.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.19\n         */\n        colorLoopSet(request: ColorControl.ColorLoopSetRequest): MaybePromise;\n    }\n\n    export interface HueSaturationOrXyOrColorTemperature {\n        /**\n         * The StopMoveStep command is provided to allow MoveTo and Step commands to be stopped. (Note this\n         * automatically provides symmetry to the Level Control cluster.)\n         *\n         * NOTE the StopMoveStep command has no effect on an active color loop.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 3.2.11.20\n         */\n        stopMoveStep(request: ColorControl.StopMoveStepRequest): MaybePromise;\n    }\n}\n\nexport type ColorControlInterface = {\n    components: [\n        { flags: { hueSaturation: true }, methods: ColorControlInterface.HueSaturation },\n        { flags: { xy: true }, methods: ColorControlInterface.Xy },\n        { flags: { colorTemperature: true }, methods: ColorControlInterface.ColorTemperature },\n        { flags: { enhancedHue: true }, methods: ColorControlInterface.EnhancedHue },\n        { flags: { colorLoop: true }, methods: ColorControlInterface.ColorLoop },\n        { flags: { hueSaturation: true }, methods: ColorControlInterface.HueSaturationOrXyOrColorTemperature },\n        { flags: { xy: true }, methods: ColorControlInterface.HueSaturationOrXyOrColorTemperature },\n        { flags: { colorTemperature: true }, methods: ColorControlInterface.HueSaturationOrXyOrColorTemperature }\n    ]\n};\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
