{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/content-control/ContentControlInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\nimport { ContentControl } from \"../../../cluster/definitions/ContentControlCluster.js\";\n\nexport namespace ContentControlInterface {\n    export interface Base {\n        /**\n         * The purpose of this command is to turn on the Content Control feature on a media device.\n         *\n         * Upon receipt of the Enable command, the media device shall set the Enabled attribute to TRUE.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.13.8.4\n         */\n        enable(): MaybePromise;\n\n        /**\n         * The purpose of this command is to turn off the Content Control feature on a media device.\n         *\n         * On receipt of the Disable command, the media device shall set the Enabled attribute to FALSE.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.13.8.5\n         */\n        disable(): MaybePromise;\n    }\n\n    export interface OnDemandContentRating {\n        /**\n         * The purpose of this command is to set the OnDemandRatingThreshold attribute.\n         *\n         * Upon receipt of the SetOnDemandRatingThreshold command, the media device shall check if the Rating field is\n         * one of values present in the OnDemandRatings attribute. If not, then a response with InvalidRating error\n         * status shall be returned.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.13.8.10\n         */\n        setOnDemandRatingThreshold(request: ContentControl.SetOnDemandRatingThresholdRequest): MaybePromise;\n    }\n\n    export interface ScheduledContentRating {\n        /**\n         * The purpose of this command is to set ScheduledContentRatingThreshold attribute.\n         *\n         * Upon receipt of the SetScheduledContentRatingThreshold command, the media device shall check if the Rating\n         * field is one of values present in the ScheduledContentRatings attribute. If not, then a response with\n         * InvalidRating error status shall be returned.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.13.8.11\n         */\n        setScheduledContentRatingThreshold(request: ContentControl.SetScheduledContentRatingThresholdRequest): MaybePromise;\n    }\n\n    export interface ScreenTime {\n        /**\n         * The purpose of this command is to add the extra screen time for the user.\n         *\n         * If a client with Operate privilege invokes this command, the media device shall check whether\n         *\n         * the PINCode passed in the command matches the current PINCode value. If these match, then the\n         * RemainingScreenTime attribute shall be increased by the specified BonusTime value.\n         *\n         * If the PINs do not match, then a response with InvalidPINCode error status shall be returned, and no changes\n         * shall be made to RemainingScreenTime.\n         *\n         * If a client with Manage privilege or greater invokes this command, the media device shall ignore the PINCode\n         * field and directly increase the RemainingScreenTime attribute by the specified BonusTime value.\n         *\n         * A server that does not support the PM feature shall respond with InvalidPINCode to clients that only have\n         * Operate privilege unless:\n         *\n         *   \u2022 It has been provided with the PIN value to expect via an out of band mechanism, and\n         *\n         *   \u2022 The client has provided a PINCode that matches the expected PIN value.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.13.8.6\n         */\n        addBonusTime(request: ContentControl.AddBonusTimeRequest): MaybePromise;\n\n        /**\n         * The purpose of this command is to set the ScreenDailyTime attribute.\n         *\n         * Upon receipt of the SetScreenDailyTime command, the media device shall set the ScreenDailyTime attribute to\n         * the ScreenTime value.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.13.8.7\n         */\n        setScreenDailyTime(request: ContentControl.SetScreenDailyTimeRequest): MaybePromise;\n    }\n\n    export interface BlockUnrated {\n        /**\n         * The purpose of this command is to specify whether programs with no Content rating must be blocked by this\n         * media device.\n         *\n         * Upon receipt of the BlockUnratedContent command, the media device shall set the BlockUnrated attribute to\n         * TRUE.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.13.8.8\n         */\n        blockUnratedContent(): MaybePromise;\n\n        /**\n         * The purpose of this command is to specify whether programs with no Content rating must be blocked by this\n         * media device.\n         *\n         * Upon receipt of the UnblockUnratedContent command, the media device shall set the BlockUnrated attribute to\n         * FALSE.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.13.8.9\n         */\n        unblockUnratedContent(): MaybePromise;\n    }\n\n    export interface BlockChannels {\n        /**\n         * The purpose of this command is to set BlockChannelList attribute.\n         *\n         * Upon receipt of the AddBlockChannels command, the media device shall check if the channels passed in this\n         * command are valid. If the channel is invalid, then a response with InvalidChannel error Status shall be\n         * returned.\n         *\n         * If there is at least one channel in Channels field which is not in the BlockChannelList attribute, the media\n         * device shall process the request by adding these new channels into the BlockChannelList attribute and return\n         * a successful Status Response. During this process, the media device shall assign one unique index to\n         * BlockChannelIndex field for every channel passed in this command.\n         *\n         * If all channels in Channel field already exist in the BlockChannelList attribute, then a response with\n         * ChannelAlreadyExist error Status shall be returned.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.13.8.12\n         */\n        addBlockChannels(request: ContentControl.AddBlockChannelsRequest): MaybePromise;\n\n        /**\n         * The purpose of this command is to remove channels from the BlockChannelList attribute.\n         *\n         * Upon receipt of the RemoveBlockChannels command, the media device shall check if the channels indicated by\n         * ChannelIndexes passed in this command are present in BlockChannelList attribute. If one or more channels\n         * indicated by ChannelIndexes passed in this command field are not present in the BlockChannelList attribute,\n         * then a response with ChannelNotExist error Status shall be returned.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.13.8.13\n         */\n        removeBlockChannels(request: ContentControl.RemoveBlockChannelsRequest): MaybePromise;\n    }\n\n    export interface BlockApplications {\n        /**\n         * The purpose of this command is to set applications to the BlockApplicationList attribute.\n         *\n         * Upon receipt of the AddBlockApplications command, the media device shall check if the Applications passed in\n         * this command are installed. If there is an application in Applications field which is not identified by\n         * media device, then a response with UnidentifiableApplication error Status may be returned.\n         *\n         * If there is one or more applications which are not present in BlockApplicationList attribute, the media\n         * device shall process the request by adding the new application to the BlockApplicationList attribute and\n         * return a successful Status Response.\n         *\n         * If all applications in Applications field are already present in BlockApplicationList attribute, then a\n         * response with ApplicationAlreadyExist error Status shall be returned.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.13.8.14\n         */\n        addBlockApplications(request: ContentControl.AddBlockApplicationsRequest): MaybePromise;\n\n        /**\n         * The purpose of this command is to remove applications from the BlockApplicationList attribute.\n         *\n         * Upon receipt of the RemoveBlockApplications command, the media device shall check if the applications passed\n         * in this command present in the BlockApplicationList attribute. If one or more applications in Applications\n         * field which are not present in the BlockApplicationList attribute, then a response with ApplicationNotExist\n         * error Status shall be returned.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.13.8.15\n         */\n        removeBlockApplications(request: ContentControl.RemoveBlockApplicationsRequest): MaybePromise;\n    }\n\n    export interface BlockContentTimeWindow {\n        /**\n         * The purpose of this command is to set the BlockContentTimeWindow attribute.\n         *\n         * Upon receipt of the SetBlockContentTimeWindow command, the media device shall check if the\n         *\n         * TimeWindowIndex field passed in this command is NULL. If the TimeWindowIndex field is NULL, the media device\n         * shall check if there is an entry in the BlockContentTimeWindow attribute which matches with the TimePeriod\n         * and DayOfWeek fields passed in this command. * If Yes, then a response with TimeWindowAlreadyExist error\n         * status shall be returned. * If No, then the media device shall assign one unique index for this time window\n         * and add it into the BlockContentTimeWindow list attribute.\n         *\n         * If the TimeWindowIndex field is not NULL and presents in the BlockContentTimeWindow attribute, the media\n         * device shall replace the original time window with the new time window passed in this command.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.13.8.16\n         */\n        setBlockContentTimeWindow(request: ContentControl.SetBlockContentTimeWindowRequest): MaybePromise;\n\n        /**\n         * The purpose of this command is to remove the selected time windows from the BlockContentTimeWindow attribute.\n         *\n         * Upon receipt of the RemoveBlockContentTimeWindow command, the media device shall check if the time window\n         * index passed in this command presents in the BlockContentTimeWindow attribute.\n         *\n         * If one or more time window indexes passed in this command are not present in BlockContentTimeWindow\n         * attribute, then a response with TimeWindowNotExist error status shall be returned.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.13.8.17\n         */\n        removeBlockContentTimeWindow(request: ContentControl.RemoveBlockContentTimeWindowRequest): MaybePromise;\n    }\n\n    export interface PinManagement {\n        /**\n         * The purpose of this command is to update the PIN used for protecting configuration of the content control\n         * settings. Upon success, the old PIN shall no longer work.\n         *\n         * The PIN is used to ensure that only the Node (or User) with the PIN code can make changes to the Content\n         * Control settings, for example, turn off Content Controls or modify the ScreenDailyTime. The PIN is composed\n         * of a numeric string of up to 6 human readable characters (displayable) .\n         *\n         * Upon receipt of this command, the media device shall check if the OldPIN field of this command is the same\n         * as the current PIN. If the PINs are the same, then the PIN code shall be set to NewPIN. Otherwise a response\n         * with InvalidPINCode error status shall be returned.\n         *\n         * The media device may provide a default PIN to the User via an out of band mechanism. For security reasons,\n         * it is recommended that a client encourage the user to update the PIN from its default value when performing\n         * configuration of the Content Control settings exposed by this cluster. The ResetPIN command can also be used\n         * to obtain the default PIN.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.13.8.1\n         */\n        updatePin(request: ContentControl.UpdatePinRequest): MaybePromise;\n\n        /**\n         * The purpose of this command is to reset the PIN.\n         *\n         * If this command is executed successfully, a ResetPINResponse command with a new PIN shall be returned.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.13.8.2\n         */\n        resetPin(): MaybePromise<ContentControl.ResetPinResponse>;\n    }\n}\n\nexport type ContentControlInterface = {\n    components: [\n        { flags: {}, methods: ContentControlInterface.Base },\n        { flags: { onDemandContentRating: true }, methods: ContentControlInterface.OnDemandContentRating },\n        { flags: { scheduledContentRating: true }, methods: ContentControlInterface.ScheduledContentRating },\n        { flags: { screenTime: true }, methods: ContentControlInterface.ScreenTime },\n        { flags: { blockUnrated: true }, methods: ContentControlInterface.BlockUnrated },\n        { flags: { blockChannels: true }, methods: ContentControlInterface.BlockChannels },\n        { flags: { blockApplications: true }, methods: ContentControlInterface.BlockApplications },\n        { flags: { blockContentTimeWindow: true }, methods: ContentControlInterface.BlockContentTimeWindow },\n        { flags: { pinManagement: true }, methods: ContentControlInterface.PinManagement }\n    ]\n};\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
