{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/smoke-co-alarm/SmokeCoAlarmBehavior.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { SmokeCoAlarm } from \"../../../cluster/definitions/SmokeCoAlarmCluster.js\";\nimport { ClusterBehavior } from \"../../cluster/ClusterBehavior.js\";\nimport { SmokeCoAlarmInterface } from \"./SmokeCoAlarmInterface.js\";\nimport { ClusterType } from \"../../../cluster/ClusterType.js\";\n\n/**\n * SmokeCoAlarmBehavior is the base class for objects that support interaction with {@link SmokeCoAlarm.Cluster}.\n *\n * SmokeCoAlarm.Cluster requires you to enable one or more optional features. You can do so using {@link\n * SmokeCoAlarmBehavior.with}.\n */\nexport const SmokeCoAlarmBehavior = ClusterBehavior\n    .withInterface<SmokeCoAlarmInterface>()\n    .for(ClusterType(SmokeCoAlarm.Base));\n\ntype SmokeCoAlarmBehaviorType = InstanceType<typeof SmokeCoAlarmBehavior>;\nexport interface SmokeCoAlarmBehavior extends SmokeCoAlarmBehaviorType {}\ntype StateType = InstanceType<typeof SmokeCoAlarmBehavior.State>;\nexport namespace SmokeCoAlarmBehavior { export interface State extends StateType {} }\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,oBAAoB;AAC7B,SAAS,uBAAuB;AAEhC,SAAS,mBAAmB;AAQrB,MAAM,uBAAuB,gBAC/B,cAAqC,EACrC,IAAI,YAAY,aAAa,IAAI,CAAC;",
  "names": []
}
