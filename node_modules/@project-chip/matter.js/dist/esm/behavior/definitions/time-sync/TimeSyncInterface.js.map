{
  "version": 3,
  "sources": ["../../../../../src/behavior/definitions/time-sync/TimeSyncInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MaybePromise } from \"../../../util/Promises.js\";\nimport { TypeFromSchema } from \"../../../tlv/TlvSchema.js\";\nimport { TimeSynchronization } from \"../../../cluster/definitions/TimeSynchronizationCluster.js\";\n\n/**\n * This command may be issued by Administrator to set the time. If the Commissioner does not have a valid time source,\n * it may send a Granularity of NoTimeGranularity.\n *\n * Upon receipt of this command, the server may update its UTCTime attribute to match the time specified in the\n * command, if the stated Granularity and TimeSource are acceptable. The server shall update its UTCTime attribute if\n * its current Granularity is NoTimeGranularity.\n *\n * If the time is updated, the server shall also update its Granularity attribute as appropriate\n *\n * server does not plan to maintain time). It shall also update its TimeSource attribute to Admin. It shall also update\n * its last known good UTC time.\n *\n * If the server updates its UTCTime attribute, it shall accept the command with a status code of SUCCESS. If it opts\n * to not update its time, it shall fail the command with a cluster specific Status Code of TimeNotAccepted.\n *\n * @see {@link MatterSpecification.v11.Core} \u00A7 11.16.9.1\n */\nexport type SetUtcTimeRequest = TypeFromSchema<typeof TimeSynchronization.TlvSetUtcTimeRequest>;\n\nexport namespace TimeSyncInterface {\n    export interface Base {\n        /**\n         * This command may be issued by Administrator to set the time. If the Commissioner does not have a valid time\n         * source, it may send a Granularity of NoTimeGranularity.\n         *\n         * Upon receipt of this command, the server may update its UTCTime attribute to match the time specified in the\n         * command, if the stated Granularity and TimeSource are acceptable. The server shall update its UTCTime\n         * attribute if its current Granularity is NoTimeGranularity.\n         *\n         * If the time is updated, the server shall also update its Granularity attribute as appropriate\n         *\n         * server does not plan to maintain time). It shall also update its TimeSource attribute to Admin. It shall\n         * also update its last known good UTC time.\n         *\n         * If the server updates its UTCTime attribute, it shall accept the command with a status code of SUCCESS. If\n         * it opts to not update its time, it shall fail the command with a cluster specific Status Code of\n         * TimeNotAccepted.\n         *\n         * @see {@link MatterSpecification.v11.Core} \u00A7 11.16.9.1\n         */\n        setUtcTime(request: SetUtcTimeRequest): MaybePromise;\n    }\n}\n\nexport type TimeSyncInterface = { components: [{ flags: {}, methods: TimeSyncInterface.Base }] };\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
