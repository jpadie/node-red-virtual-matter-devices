{
  "version": 3,
  "sources": ["../../../../src/session/pase/PaseMessenger.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MatterController } from \"../../MatterController.js\";\nimport { MatterDevice } from \"../../MatterDevice.js\";\nimport { MessageType } from \"../../protocol/securechannel/SecureChannelMessages.js\";\nimport { SecureChannelMessenger } from \"../../protocol/securechannel/SecureChannelMessenger.js\";\nimport { TypeFromSchema } from \"../../tlv/TlvSchema.js\";\nimport { ByteArray } from \"../../util/ByteArray.js\";\nimport {\n    TlvPasePake1,\n    TlvPasePake2,\n    TlvPasePake3,\n    TlvPbkdfParamRequest,\n    TlvPbkdfParamResponse,\n} from \"./PaseMessages.js\";\n\nexport const DEFAULT_PASSCODE_ID = 0;\nexport const SPAKE_CONTEXT = ByteArray.fromString(\"CHIP PAKE V1 Commissioning\");\n\ntype PbkdfParamRequest = TypeFromSchema<typeof TlvPbkdfParamRequest>;\ntype PbkdfParamResponse = TypeFromSchema<typeof TlvPbkdfParamResponse>;\ntype PasePake1 = TypeFromSchema<typeof TlvPasePake1>;\ntype PasePake2 = TypeFromSchema<typeof TlvPasePake2>;\ntype PasePake3 = TypeFromSchema<typeof TlvPasePake3>;\n\nexport class PaseServerMessenger extends SecureChannelMessenger<MatterDevice> {\n    async readPbkdfParamRequest() {\n        const { payload } = await this.nextMessage(\"PASE PbkdfParamRequest\", MessageType.PbkdfParamRequest);\n        return { requestPayload: payload, request: TlvPbkdfParamRequest.decode(payload) };\n    }\n\n    async sendPbkdfParamResponse(response: PbkdfParamResponse) {\n        return this.send(response, MessageType.PbkdfParamResponse, TlvPbkdfParamResponse);\n    }\n\n    readPasePake1() {\n        return this.nextMessageDecoded(MessageType.PasePake1, TlvPasePake1, \"PASE Pake1\");\n    }\n\n    sendPasePake2(pasePake2: PasePake2) {\n        return this.send(pasePake2, MessageType.PasePake2, TlvPasePake2);\n    }\n\n    readPasePake3() {\n        return this.nextMessageDecoded(MessageType.PasePake3, TlvPasePake3, \"PASE Pake3\");\n    }\n}\n\nexport class PaseClientMessenger extends SecureChannelMessenger<MatterController> {\n    sendPbkdfParamRequest(request: PbkdfParamRequest) {\n        return this.send(request, MessageType.PbkdfParamRequest, TlvPbkdfParamRequest);\n    }\n\n    async readPbkdfParamResponse() {\n        const { payload } = await this.nextMessage(\"PASE PbkdfParamResponse\", MessageType.PbkdfParamResponse);\n        return { responsePayload: payload, response: TlvPbkdfParamResponse.decode(payload) };\n    }\n\n    sendPasePake1(pasePake1: PasePake1) {\n        return this.send(pasePake1, MessageType.PasePake1, TlvPasePake1);\n    }\n\n    readPasePake2() {\n        return this.nextMessageDecoded(MessageType.PasePake2, TlvPasePake2, \"PASE Pake2\");\n    }\n\n    sendPasePake3(pasePake3: PasePake3) {\n        return this.send(pasePake3, MessageType.PasePake3, TlvPasePake3);\n    }\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,mBAAmB;AAC5B,SAAS,8BAA8B;AAEvC,SAAS,iBAAiB;AAC1B;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACG;AAEA,MAAM,sBAAsB;AAC5B,MAAM,gBAAgB,UAAU,WAAW,4BAA4B;AAQvE,MAAM,4BAA4B,uBAAqC;AAAA,EAC1E,MAAM,wBAAwB;AAC1B,UAAM,EAAE,QAAQ,IAAI,MAAM,KAAK,YAAY,0BAA0B,YAAY,iBAAiB;AAClG,WAAO,EAAE,gBAAgB,SAAS,SAAS,qBAAqB,OAAO,OAAO,EAAE;AAAA,EACpF;AAAA,EAEA,MAAM,uBAAuB,UAA8B;AACvD,WAAO,KAAK,KAAK,UAAU,YAAY,oBAAoB,qBAAqB;AAAA,EACpF;AAAA,EAEA,gBAAgB;AACZ,WAAO,KAAK,mBAAmB,YAAY,WAAW,cAAc,YAAY;AAAA,EACpF;AAAA,EAEA,cAAc,WAAsB;AAChC,WAAO,KAAK,KAAK,WAAW,YAAY,WAAW,YAAY;AAAA,EACnE;AAAA,EAEA,gBAAgB;AACZ,WAAO,KAAK,mBAAmB,YAAY,WAAW,cAAc,YAAY;AAAA,EACpF;AACJ;AAEO,MAAM,4BAA4B,uBAAyC;AAAA,EAC9E,sBAAsB,SAA4B;AAC9C,WAAO,KAAK,KAAK,SAAS,YAAY,mBAAmB,oBAAoB;AAAA,EACjF;AAAA,EAEA,MAAM,yBAAyB;AAC3B,UAAM,EAAE,QAAQ,IAAI,MAAM,KAAK,YAAY,2BAA2B,YAAY,kBAAkB;AACpG,WAAO,EAAE,iBAAiB,SAAS,UAAU,sBAAsB,OAAO,OAAO,EAAE;AAAA,EACvF;AAAA,EAEA,cAAc,WAAsB;AAChC,WAAO,KAAK,KAAK,WAAW,YAAY,WAAW,YAAY;AAAA,EACnE;AAAA,EAEA,gBAAgB;AACZ,WAAO,KAAK,mBAAmB,YAAY,WAAW,cAAc,YAAY;AAAA,EACpF;AAAA,EAEA,cAAc,WAAsB;AAChC,WAAO,KAAK,KAAK,WAAW,YAAY,WAAW,YAAY;AAAA,EACnE;AACJ;",
  "names": []
}
