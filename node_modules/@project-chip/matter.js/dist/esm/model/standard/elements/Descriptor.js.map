{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/Descriptor.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    FieldElement as Field,\n    DatatypeElement as Datatype\n} from \"../../elements/index.js\";\n\nexport const Descriptor = Cluster({\n    name: \"Descriptor\", id: 0x1d, classification: \"endpoint\", pics: \"DESC\",\n\n    details: \"NOTE\" +\n        \"\\n\" +\n        \"The Descriptor cluster is meant to replace the support from the Zigbee Device Object (ZDO) for \" +\n        \"describing a node, its endpoints and clusters.\" +\n        \"\\n\" +\n        \"This cluster describes an endpoint instance on the node, independently from other endpoints, but \" +\n        \"also allows composition of endpoints to conform to complex device type patterns.\" +\n        \"\\n\" +\n        \"This cluster supports a list of one or more device type identifiers that represent conformance to \" +\n        \"device type specifications.\" +\n        \"\\n\" +\n        \"The cluster supports a PartsList attribute that is a list of zero or more endpoints to support a \" +\n        \"composed device type.\",\n\n    xref: { document: \"core\", section: \"9.5\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 2 }),\n\n        Attribute({\n            name: \"FeatureMap\", id: 0xfffc, type: \"FeatureMap\",\n            xref: { document: \"core\", section: \"9.5.4\" },\n\n            children: [Field({\n                name: \"TAGLIST\", conformance: \"desc\", constraint: \"0\", description: \"TagList\",\n                details: \"See the Disambiguation section in the System Model spec for conformance requirements for this \" +\n                    \"feature and the corresponding attribute.\",\n                xref: { document: \"core\", section: \"9.5.4.1\" }\n            })]\n        }),\n\n        Attribute({\n            name: \"DeviceTypeList\", id: 0x0, type: \"list\", access: \"R V\", conformance: \"M\", constraint: \"min 1\",\n            quality: \"F\",\n\n            details: \"This is a list of device types and corresponding revisions declaring endpoint conformance (see \" +\n                \"DeviceTypeStruct). At least one device type entry shall be present.\" +\n                \"\\n\" +\n                \"An endpoint shall conform to all device types listed in the DeviceTypeList. A cluster instance that \" +\n                \"is in common for more than one device type in the DeviceTypeList shall be supported as a shared \" +\n                \"cluster instance on the endpoint.\",\n\n            xref: { document: \"core\", section: \"9.5.6.1\" },\n            children: [Field({ name: \"entry\", type: \"DeviceTypeStruct\" })]\n        }),\n\n        Attribute({\n            name: \"ServerList\", id: 0x1, type: \"list\", access: \"R V\", conformance: \"M\", default: [],\n            quality: \"F\",\n            details: \"This attribute shall list each cluster ID for the server clusters present on the endpoint instance.\",\n            xref: { document: \"core\", section: \"9.5.6.2\" },\n            children: [Field({ name: \"entry\", type: \"cluster-id\" })]\n        }),\n\n        Attribute({\n            name: \"ClientList\", id: 0x2, type: \"list\", access: \"R V\", conformance: \"M\", default: [],\n            quality: \"F\",\n            details: \"This attribute shall list each cluster ID for the client clusters present on the endpoint instance.\",\n            xref: { document: \"core\", section: \"9.5.6.3\" },\n            children: [Field({ name: \"entry\", type: \"cluster-id\" })]\n        }),\n\n        Attribute({\n            name: \"PartsList\", id: 0x3, type: \"list\", access: \"R V\", conformance: \"M\", default: [],\n            details: \"This attribute indicates composition of the device type instance. Device type instance composition \" +\n                \"shall include the endpoints in this list.\" +\n                \"\\n\" +\n                \"See Endpoint Composition for more information about which endpoints to include in this list.\",\n            xref: { document: \"core\", section: \"9.5.6.4\" },\n            children: [Field({ name: \"entry\", type: \"endpoint-no\" })]\n        }),\n\n        Attribute({\n            name: \"TagList\", id: 0x4, type: \"list\", access: \"R V\", conformance: \"TAGLIST\", constraint: \"1 to 6\",\n            quality: \"F\",\n\n            details: \"This attribute shall be used to disambiguate sibling endpoints in certain situations, as defined in \" +\n                \"the Disambiguation section in the System Model specification. An example of such a situation might \" +\n                \"be a device with two buttons, with this attribute being used to indicate which of the two endpoints \" +\n                \"corresponds to the button on the left side.\" +\n                \"\\n\" +\n                \"It may also be used to provide information about an endpoint (e.g. the relative location of a \" +\n                \"Temperature sensor in a Temperature Controlled Cabinet).\" +\n                \"\\n\" +\n                \"  \u2022 A client SHOULD use these tags to convey disambiguation information and other relevant \" +\n                \"    information to the user (e.g. showing it in a user interface), as appropriate.\" +\n                \"\\n\" +\n                \"  \u2022 A client SHOULD use these tags in its logic to make decisions, as appropriate.\" +\n                \"\\n\" +\n                \"For example, a client may identify which endpoint maps to a certain function, orientation or \" +\n                \"labeling.\" +\n                \"\\n\" +\n                \"A client may use the Label field of each SemanticTagStruct, if present in each structure, to \" +\n                \"indicate characteristics of an endpoint, or to augment what is provided in the TagID field of the \" +\n                \"same structure.\",\n\n            xref: { document: \"core\", section: \"9.5.6.5\" },\n            children: [Field({ name: \"entry\", type: \"semtag\" })]\n        }),\n\n        Datatype({\n            name: \"DeviceTypeStruct\", type: \"struct\",\n            details: \"The device type and revision define endpoint conformance to a release of a device type definition. \" +\n                \"See the Data Model specification for more information.\",\n            xref: { document: \"core\", section: \"9.5.5.1\" },\n\n            children: [\n                Field({\n                    name: \"DeviceType\", id: 0x0, type: \"devtype-id\", conformance: \"M\",\n                    details: \"This shall indicate the device type definition. The endpoint shall conform to the device type \" +\n                        \"definition and cluster specifications required by the device type.\",\n                    xref: { document: \"core\", section: \"9.5.5.1.1\" }\n                }),\n\n                Field({\n                    name: \"Revision\", id: 0x1, type: \"uint16\", conformance: \"M\", constraint: \"min 1\",\n                    details: \"This is the implemented revision of the device type definition. The endpoint shall conform to this \" +\n                        \"revision of the device type.\",\n                    xref: { document: \"core\", section: \"9.5.5.1.2\" }\n                })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(Descriptor);\n"],
  "mappings": "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",
  "names": []
}
