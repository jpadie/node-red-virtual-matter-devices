{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/TemperatureMeasurement.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport { ClusterElement as Cluster, AttributeElement as Attribute } from \"../../elements/index.js\";\n\nexport const TemperatureMeasurement = Cluster({\n    name: \"TemperatureMeasurement\", id: 0x402, classification: \"application\", pics: \"TMP\",\n    details: \"This cluster provides an interface to temperature measurement functionality, including \" +\n        \"configuration and provision of notifications of temperature measurements.\",\n    xref: { document: \"cluster\", section: \"2.3\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 4 }),\n\n        Attribute({\n            name: \"MeasuredValue\", id: 0x0, type: \"temperature\", access: \"R V\", conformance: \"M\",\n            constraint: \"minMeasuredValue to maxMeasuredValue\", quality: \"X P\",\n            details: \"Indicates the measured temperature. The null value indicates that the temperature is unknown.\",\n            xref: { document: \"cluster\", section: \"2.3.4.1\" }\n        }),\n\n        Attribute({\n            name: \"MinMeasuredValue\", id: 0x1, type: \"temperature\", access: \"R V\", conformance: \"M\",\n            constraint: \"-27315 to maxMeasuredValue1\", default: -27315, quality: \"X\",\n            details: \"Indicates the minimum value of MeasuredValue that is capable of being measured. See Measured Value \" +\n                \"for more details.\" +\n                \"\\n\" +\n                \"The null value indicates that the value is not available.\",\n            xref: { document: \"cluster\", section: \"2.3.4.2\" }\n        }),\n\n        Attribute({\n            name: \"MaxMeasuredValue\", id: 0x2, type: \"temperature\", access: \"R V\", conformance: \"M\",\n            constraint: \"minMeasuredValue1 to 32767\", default: 32767, quality: \"X\",\n            details: \"This attribute indicates the maximum value of MeasuredValue that is capable of being measured. See \" +\n                \"Measured Value for more details.\" +\n                \"\\n\" +\n                \"The null value indicates that the value is not available.\",\n            xref: { document: \"cluster\", section: \"2.3.4.3\" }\n        }),\n\n        Attribute({\n            name: \"Tolerance\", id: 0x3, type: \"uint16\", access: \"R V\", conformance: \"O\",\n            constraint: \"0 to 2048\", default: 0,\n            details: \"See Measured Value.\",\n            xref: { document: \"cluster\", section: \"2.3.4.4\" }\n        })\n    ]\n});\n\nMatter.children.push(TemperatureMeasurement);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,cAAc;AACvB,SAAS,kBAAkB,SAAS,oBAAoB,iBAAiB;AAElE,MAAM,yBAAyB,QAAQ;AAAA,EAC1C,MAAM;AAAA,EAA0B,IAAI;AAAA,EAAO,gBAAgB;AAAA,EAAe,MAAM;AAAA,EAChF,SAAS;AAAA,EAET,MAAM,EAAE,UAAU,WAAW,SAAS,MAAM;AAAA,EAE5C,UAAU;AAAA,IACN,UAAU,EAAE,MAAM,mBAAmB,IAAI,OAAQ,MAAM,mBAAmB,SAAS,EAAE,CAAC;AAAA,IAEtF,UAAU;AAAA,MACN,MAAM;AAAA,MAAiB,IAAI;AAAA,MAAK,MAAM;AAAA,MAAe,QAAQ;AAAA,MAAO,aAAa;AAAA,MACjF,YAAY;AAAA,MAAwC,SAAS;AAAA,MAC7D,SAAS;AAAA,MACT,MAAM,EAAE,UAAU,WAAW,SAAS,UAAU;AAAA,IACpD,CAAC;AAAA,IAED,UAAU;AAAA,MACN,MAAM;AAAA,MAAoB,IAAI;AAAA,MAAK,MAAM;AAAA,MAAe,QAAQ;AAAA,MAAO,aAAa;AAAA,MACpF,YAAY;AAAA,MAA+B,SAAS;AAAA,MAAQ,SAAS;AAAA,MACrE,SAAS;AAAA,MAIT,MAAM,EAAE,UAAU,WAAW,SAAS,UAAU;AAAA,IACpD,CAAC;AAAA,IAED,UAAU;AAAA,MACN,MAAM;AAAA,MAAoB,IAAI;AAAA,MAAK,MAAM;AAAA,MAAe,QAAQ;AAAA,MAAO,aAAa;AAAA,MACpF,YAAY;AAAA,MAA8B,SAAS;AAAA,MAAO,SAAS;AAAA,MACnE,SAAS;AAAA,MAIT,MAAM,EAAE,UAAU,WAAW,SAAS,UAAU;AAAA,IACpD,CAAC;AAAA,IAED,UAAU;AAAA,MACN,MAAM;AAAA,MAAa,IAAI;AAAA,MAAK,MAAM;AAAA,MAAU,QAAQ;AAAA,MAAO,aAAa;AAAA,MACxE,YAAY;AAAA,MAAa,SAAS;AAAA,MAClC,SAAS;AAAA,MACT,MAAM,EAAE,UAAU,WAAW,SAAS,UAAU;AAAA,IACpD,CAAC;AAAA,EACL;AACJ,CAAC;AAED,OAAO,SAAS,KAAK,sBAAsB;",
  "names": []
}
