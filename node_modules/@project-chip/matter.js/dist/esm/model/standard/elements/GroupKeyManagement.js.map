{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/GroupKeyManagement.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    FieldElement as Field,\n    CommandElement as Command,\n    DatatypeElement as Datatype\n} from \"../../elements/index.js\";\n\nexport const GroupKeyManagement = Cluster({\n    name: \"GroupKeyManagement\", id: 0x3f, classification: \"node\", pics: \"GRPKEY\",\n\n    details: \"The Group Key Management cluster manages group keys for the node. The cluster is scoped to the node \" +\n        \"and is a singleton for the node. This cluster maintains a list of groups supported by the node. \" +\n        \"Each group list entry supports a single group, with a single group ID and single group key. \" +\n        \"Duplicate groups are not allowed in the list. Additions or removal of a group entry are performed \" +\n        \"via modifications of the list. Such modifications require Administer privilege.\" +\n        \"\\n\" +\n        \"Each group entry includes a membership list of zero of more endpoints that are members of the group \" +\n        \"on the node. Modification of this membership list is done via the Groups cluster, which is scoped \" +\n        \"to an endpoint. Please see the System Model specification for more information on groups.\",\n\n    xref: { document: \"core\", section: \"11.2\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 2 }),\n\n        Attribute({\n            name: \"FeatureMap\", id: 0xfffc, type: \"FeatureMap\",\n            xref: { document: \"core\", section: \"11.2.4\" },\n            children: [Field({\n                name: \"CS\", constraint: \"0\", description: \"CacheAndSync\",\n                details: \"The ability to support CacheAndSync security policy and MCSP.\"\n            })]\n        }),\n\n        Attribute({\n            name: \"GroupKeyMap\", id: 0x0, type: \"list\", access: \"RW F VM\", conformance: \"M\", constraint: \"desc\",\n            default: [], quality: \"N\",\n            details: \"This attribute is a list of GroupKeyMapStruct entries. Each entry associates a logical Group Id \" +\n                \"with a particular group key set.\",\n            xref: { document: \"core\", section: \"11.2.6.1\" },\n            children: [Field({ name: \"entry\", type: \"GroupKeyMapStruct\" })]\n        }),\n\n        Attribute({\n            name: \"GroupTable\", id: 0x1, type: \"list\", access: \"R F V\", conformance: \"M\", constraint: \"desc\",\n            default: [],\n\n            details: \"This attribute is a list of GroupInfoMapStruct entries. Each entry provides read-only information \" +\n                \"about how a given logical Group ID maps to a particular set of endpoints, and a name for the group. \" +\n                \"The content of this attribute reflects data managed via the Groups cluster (see AppClusters), and \" +\n                \"is in general terms referred to as the 'node-wide Group Table'.\" +\n                \"\\n\" +\n                \"The GroupTable shall NOT contain any entry whose GroupInfoMapStruct has an empty Endpoints list. If \" +\n                \"a RemoveGroup or RemoveAllGroups command causes the removal of a group mapping from its last mapped \" +\n                \"endpoint, the entire GroupTable entry for that given GroupId shall be removed.\",\n\n            xref: { document: \"core\", section: \"11.2.6.2\" },\n            children: [Field({ name: \"entry\", type: \"GroupInfoMapStruct\" })]\n        }),\n\n        Attribute({\n            name: \"MaxGroupsPerFabric\", id: 0x2, type: \"uint16\", access: \"R V\", conformance: \"M\", default: 0,\n            quality: \"F\",\n            details: \"Indicates the maximum number of groups that this node supports per fabric. The value of this \" +\n                \"attribute shall be set to be no less than the required minimum supported groups as specified in \" +\n                \"Group Limits. The length of the GroupKeyMap and GroupTable list attributes shall NOT exceed the \" +\n                \"value of the MaxGroupsPerFabric attribute multiplied by the number of supported fabrics.\",\n            xref: { document: \"core\", section: \"11.2.6.3\" }\n        }),\n\n        Attribute({\n            name: \"MaxGroupKeysPerFabric\", id: 0x3, type: \"uint16\", access: \"R V\", conformance: \"M\",\n            constraint: \"1 to 65535\", default: 1, quality: \"F\",\n            details: \"Indicates the maximum number of group key sets this node supports per fabric. The value of this \" +\n                \"attribute shall be set according to the minimum number of group key sets to support as specified in \" +\n                \"Group Limits.\",\n            xref: { document: \"core\", section: \"11.2.6.4\" }\n        }),\n\n        Command({\n            name: \"KeySetWrite\", id: 0x0, access: \"F A\", conformance: \"M\", direction: \"request\",\n            response: \"status\",\n\n            details: \"This command is used by Administrators to set the state of a given Group Key Set, including \" +\n                \"atomically updating the state of all epoch keys.\" +\n                \"\\n\" +\n                \"Effect on Receipt\" +\n                \"\\n\" +\n                \"The following validations shall be done against the content of the GroupKeySet field:\" +\n                \"\\n\" +\n                \"  \u2022 If the EpochKey0 field is null or its associated EpochStartTime0 field is null, then this \" +\n                \"    command shall fail with an INVALID_COMMAND status code responded to the client.\" +\n                \"\\n\" +\n                \"  \u2022 If the EpochKey0 field\u2019s length is not exactly 16 bytes, then this command shall fail with a \" +\n                \"    CONSTRAINT_ERROR status code responded to the client.\" +\n                \"\\n\" +\n                \"  \u2022 If the EpochStartTime0 is set to 0, then this command shall fail with an INVALID_COMMAND status \" +\n                \"    code responded to the client. Note that internally, a GroupKeySetStruct\u2019s EpochStartTime0 may \" +\n                \"    be set to zero, due to the behavior of the AddNOC command which synthesizes a GroupKeySetStruct \" +\n                \"    (see IPKValue). However, the value 0 is illegal in the GroupKeySet field sent by a client.\" +\n                \"\\n\" +\n                \"  \u2022 If the EpochKey1 field is not null, then the EpochKey0 field shall NOT be null. Otherwise this \" +\n                \"    command shall fail with an INVALID_COMMAND status code responded to the client.\" +\n                \"\\n\" +\n                \"  \u2022 If the EpochKey1 field is not null, and the field\u2019s length is not exactly 16 bytes, then this \" +\n                \"    command shall fail with a CONSTRAINT_ERROR status code responded to the client.\" +\n                \"\\n\" +\n                \"  \u2022 If the EpochKey1 field is not null, its associated EpochStartTime1 field shall NOT be null and \" +\n                \"    shall contain a later epoch start time than the epoch start time found in the EpochStartTime0 \" +\n                \"    field. Otherwise this command shall fail with an INVALID_COMMAND status code responded to the \" +\n                \"    client.\" +\n                \"\\n\" +\n                \"  \u2022 If exactly one of the EpochKey1 or EpochStartTime1 is null, rather than both being null, or \" +\n                \"    neither being null, then this command shall fail with an INVALID_COMMAND status code responded \" +\n                \"    to the client.\" +\n                \"\\n\" +\n                \"  \u2022 If the EpochKey2 field is not null, then the EpochKey1 and EpochKey0 fields shall NOT be null. \" +\n                \"    Otherwise this command shall fail with an INVALID_COMMAND status code responded to the client.\" +\n                \"\\n\" +\n                \"  \u2022 If the EpochKey2 field is not null, and the field\u2019s length is not exactly 16 bytes, then this \" +\n                \"    command shall fail with a CONSTRAINT_ERROR status code responded to the client.\" +\n                \"\\n\" +\n                \"  \u2022 If the EpochKey2 field is not null, its associated EpochStartTime2 field shall NOT be null and \" +\n                \"    shall contain a later epoch start time than the epoch start time found in the EpochStartTime1 \" +\n                \"    field. Otherwise this command shall fail with an INVALID_COMMAND status code responded to the \" +\n                \"    client.\" +\n                \"\\n\" +\n                \"  \u2022 If exactly one of the EpochKey2 or EpochStartTime2 is null, rather than both being null, or \" +\n                \"    neither being null, then this command shall fail with an INVALID_COMMAND status code responded \" +\n                \"    to the client.\" +\n                \"\\n\" +\n                \"If there exists a Group Key Set associated with the accessing fabric which has the same \" +\n                \"GroupKeySetID as that provided in the GroupKeySet field, then the contents of that group key set \" +\n                \"shall be replaced. A replacement shall be done by executing the equivalent of entirely removing the \" +\n                \"previous Group Key Set with the given GroupKeySetID, followed by an addition of a Group Key Set \" +\n                \"with the provided configuration. Otherwise, if the GroupKeySetID did not match an existing entry, a \" +\n                \"new Group Key Set associated with the accessing fabric shall be created with the provided data. The \" +\n                \"Group Key Set shall be written to non-volatile storage.\" +\n                \"\\n\" +\n                \"Upon completion, this command shall send a status code back to the initiator:\" +\n                \"\\n\" +\n                \"  \u2022 If the Group Key Set was properly installed or updated on the Node, the status code shall be\" +\n                \"\\n\" +\n                \"set to SUCCESS.\" +\n                \"\\n\" +\n                \"  \u2022 If there are insufficient resources on the receiver to store an additional Group Key Set, the \" +\n                \"    status code shall be set to RESOURCE_EXHAUSTED (see group key limits);\" +\n                \"\\n\" +\n                \"  \u2022 Otherwise, this status code shall be set to FAILURE.\",\n\n            xref: { document: \"core\", section: \"11.2.7.1\" },\n            children: [Field({ name: \"GroupKeySet\", id: 0x0, type: \"GroupKeySetStruct\", conformance: \"M\" })]\n        }),\n\n        Command({\n            name: \"KeySetRead\", id: 0x1, access: \"F A\", conformance: \"M\", direction: \"request\",\n            response: \"KeySetReadResponse\",\n\n            details: \"This command is used by Administrators to read the state of a given Group Key Set.\" +\n                \"\\n\" +\n                \"Effect on Receipt\" +\n                \"\\n\" +\n                \"If there exists a Group Key Set associated with the accessing fabric which has the same \" +\n                \"GroupKeySetID as that provided in the GroupKeySetID field, then the contents of that Group Key Set \" +\n                \"shall be sent in a KeySetReadResponse command, but with the EpochKey0, EpochKey1 and EpochKey2 \" +\n                \"fields replaced by null.\" +\n                \"\\n\" +\n                \"Otherwise, if the GroupKeySetID does not refer to a Group Key Set associated with the accessing \" +\n                \"fabric, then this command shall fail with a NOT_FOUND status code.\",\n\n            xref: { document: \"core\", section: \"11.2.7.2\" },\n            children: [Field({ name: \"GroupKeySetId\", id: 0x0, type: \"uint16\", conformance: \"M\" })]\n        }),\n\n        Command({\n            name: \"KeySetReadResponse\", id: 0x2, conformance: \"M\", direction: \"response\",\n            details: \"This command shall be generated in response to the KeySetRead command, if a valid Group Key Set was \" +\n                \"found. It shall contain the configuration of the requested Group Key Set, with the EpochKey0, \" +\n                \"EpochKey1 and EpochKey2 key contents replaced by null.\",\n            xref: { document: \"core\", section: \"11.2.7.3\" },\n            children: [Field({ name: \"GroupKeySet\", id: 0x0, type: \"GroupKeySetStruct\", conformance: \"M\" })]\n        }),\n\n        Command({\n            name: \"KeySetRemove\", id: 0x3, access: \"F A\", conformance: \"M\", direction: \"request\",\n            response: \"status\",\n\n            details: \"This command is used by Administrators to remove all state of a given Group Key Set.\" +\n                \"\\n\" +\n                \"Effect on Receipt\" +\n                \"\\n\" +\n                \"If there exists a Group Key Set associated with the accessing fabric which has the same GroupKey\" +\n                \"\\n\" +\n                \"SetID as that provided in the GroupKeySetID field, then the contents of that Group Key Set shall be \" +\n                \"removed, including all epoch keys it contains.\" +\n                \"\\n\" +\n                \"If there exist any entries for the accessing fabric within the GroupKeyMap attribute that refer to \" +\n                \"the GroupKeySetID just removed, then these entries shall be removed from that list.\" +\n                \"\\n\" +\n                \"This command shall fail with an INVALID_COMMAND status code back to the initiator if the \" +\n                \"GroupKeySetID being removed is 0, which is the Key Set associated with the Identity Protection Key \" +\n                \"(IPK). The only method to remove the IPK is usage of the RemoveFabric command or any operation \" +\n                \"which causes the equivalent of a RemoveFabric to occur by side-effect.\" +\n                \"\\n\" +\n                \"This command shall send a SUCCESS status code back to the initiator on success, or NOT_FOUND if the \" +\n                \"GroupKeySetID requested did not exist.\",\n\n            xref: { document: \"core\", section: \"11.2.7.4\" },\n            children: [Field({ name: \"GroupKeySetId\", id: 0x0, type: \"uint16\", conformance: \"M\" })]\n        }),\n\n        Command({\n            name: \"KeySetReadAllIndices\", id: 0x4, access: \"F A\", conformance: \"M\", direction: \"request\",\n            response: \"KeySetReadAllIndicesResponse\",\n\n            details: \"This command is used by Administrators to query a list of all Group Key Sets associated with the \" +\n                \"accessing fabric.\" +\n                \"\\n\" +\n                \"NOTE Field 0 for this command is reserved and shall NOT be used.\" +\n                \"\\n\" +\n                \"Effect on Receipt\" +\n                \"\\n\" +\n                \"Upon receipt, this command shall iterate all stored GroupKeySetStruct associated with the accessing \" +\n                \"fabric and generate a KeySetReadAllIndicesResponse command containing the list of GroupKeySetID \" +\n                \"values from those structs.\",\n\n            xref: { document: \"core\", section: \"11.2.7.5\" },\n            children: [\n                Field({ name: \"Reserved\", id: 0x0, conformance: \"X\" }),\n                Field({ name: \"GroupKeySetIDs\", id: 0x1, conformance: \"X\" })\n            ]\n        }),\n\n        Command({\n            name: \"KeySetReadAllIndicesResponse\", id: 0x5, conformance: \"M\", direction: \"response\",\n            details: \"This command shall be generated in response to KeySetReadAllIndices and it shall contain the list \" +\n                \"of GroupKeySetID for all Group Key Sets associated with the scoped Fabric.\",\n            xref: { document: \"core\", section: \"11.2.7.6\" },\n\n            children: [Field({\n                name: \"GroupKeySetIDs\", id: 0x0, type: \"list\", conformance: \"M\",\n                details: \"This field references the set of group keys that generate operational group keys for use with the \" +\n                    \"accessing fabric.\" +\n                    \"\\n\" +\n                    \"Each entry in GroupKeySetIDs is a GroupKeySetID field.\",\n                xref: { document: \"core\", section: \"11.2.7.6.1\" },\n                children: [Field({ name: \"entry\", type: \"uint16\" })]\n            })]\n        }),\n\n        Datatype({\n            name: \"GroupKeySecurityPolicyEnum\", type: \"enum8\",\n            xref: { document: \"core\", section: \"11.2.5.1\" },\n\n            children: [\n                Field({\n                    name: \"TrustFirst\", id: 0x0, conformance: \"M\",\n                    description: \"Message counter synchronization using trust-first\"\n                }),\n                Field({\n                    name: \"CacheAndSync\", id: 0x1, conformance: \"CS\",\n                    description: \"Message counter synchronization using cache-and-sync\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"GroupKeyMulticastPolicyEnum\", type: \"enum8\",\n            xref: { document: \"core\", section: \"11.2.5.2\" },\n\n            children: [\n                Field({\n                    name: \"PerGroupId\", id: 0x0, conformance: \"M\",\n                    description: \"Indicates filtering of multicast messages for a specific Group ID\",\n                    details: \"The 16-bit Group Identifier of the Multicast Address shall be the Group ID of the group.\",\n                    xref: { document: \"core\", section: \"11.2.5.2.1\" }\n                }),\n\n                Field({\n                    name: \"AllNodes\", id: 0x1, conformance: \"M\",\n                    description: \"Indicates not filtering of multicast messages\",\n                    details: \"The 16-bit Group Identifier of the Multicast Address shall be 0xFFFF.\",\n                    xref: { document: \"core\", section: \"11.2.5.2.2\" }\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"GroupKeyMapStruct\", type: \"struct\",\n            xref: { document: \"core\", section: \"11.2.5.3\" },\n\n            children: [\n                Field({\n                    name: \"GroupId\", id: 0x1, type: \"group-id\", access: \"F\", conformance: \"M\",\n                    details: \"This field uniquely identifies the group within the scope of the given Fabric.\",\n                    xref: { document: \"core\", section: \"11.2.5.3.1\" }\n                }),\n\n                Field({\n                    name: \"GroupKeySetId\", id: 0x2, type: \"uint16\", access: \"F\", conformance: \"M\",\n                    constraint: \"1 to 65535\",\n                    details: \"This field references the set of group keys that generate operational group keys for use with this \" +\n                        \"group, as specified in Section 4.16.3.5.1, \u201CGroup Key Set ID\u201D.\" +\n                        \"\\n\" +\n                        \"A GroupKeyMapStruct shall NOT accept GroupKeySetID of 0, which is reserved for the IPK.\",\n                    xref: { document: \"core\", section: \"11.2.5.3.2\" }\n                }),\n\n                Field({ name: \"FabricIndex\", id: 0xfe, type: \"FabricIndex\" })\n            ]\n        }),\n\n        Datatype({\n            name: \"GroupKeySetStruct\", type: \"struct\",\n            xref: { document: \"core\", section: \"11.2.5.4\" },\n\n            children: [\n                Field({\n                    name: \"GroupKeySetId\", id: 0x0, type: \"uint16\", conformance: \"M\",\n                    details: \"This field shall provide the fabric-unique index for the associated group key set, as specified in \" +\n                        \"Section 4.16.3.5.1, \u201CGroup Key Set ID\u201D.\",\n                    xref: { document: \"core\", section: \"11.2.5.4.1\" }\n                }),\n\n                Field({\n                    name: \"GroupKeySecurityPolicy\", id: 0x1, type: \"GroupKeySecurityPolicyEnum\", access: \"S\",\n                    conformance: \"M\",\n                    details: \"This field shall provide the security policy for an operational group key set.\" +\n                        \"\\n\" +\n                        \"When CacheAndSync is not supported in the FeatureMap of this cluster, any action attempting to set \" +\n                        \"CacheAndSync in the GroupKeySecurityPolicy field shall fail with an INVALID_COMMAND error.\",\n                    xref: { document: \"core\", section: \"11.2.5.4.2\" }\n                }),\n\n                Field({\n                    name: \"EpochKey0\", id: 0x2, type: \"octstr\", access: \"S\", conformance: \"M\", constraint: \"16\",\n                    quality: \"X\",\n                    details: \"This field, if not null, shall be the root credential used in the derivation of an operational \" +\n                        \"group key for epoch slot 0 of the given group key set. If EpochKey0 is not null, EpochStartTime0 \" +\n                        \"shall NOT be null.\",\n                    xref: { document: \"core\", section: \"11.2.5.4.3\" }\n                }),\n\n                Field({\n                    name: \"EpochStartTime0\", id: 0x3, type: \"epoch-us\", access: \"S\", conformance: \"M\", quality: \"X\",\n                    details: \"This field, if not null, shall define when EpochKey0 becomes valid as specified by Section 4.16.3, \" +\n                        \"\u201CEpoch Keys\u201D. Units are absolute UTC time in microseconds encoded using the epoch-us representation.\",\n                    xref: { document: \"core\", section: \"11.2.5.4.4\" }\n                }),\n\n                Field({\n                    name: \"EpochKey1\", id: 0x4, type: \"octstr\", access: \"S\", conformance: \"M\", constraint: \"16\",\n                    quality: \"X\",\n                    details: \"This field, if not null, shall be the root credential used in the derivation of an operational group\" +\n                        \"\\n\" +\n                        \"key for epoch slot 1 of the given group key set. If EpochKey1 is not null, EpochStartTime1 shall \" +\n                        \"NOT be null.\",\n                    xref: { document: \"core\", section: \"11.2.5.4.5\" }\n                }),\n\n                Field({\n                    name: \"EpochStartTime1\", id: 0x5, type: \"epoch-us\", access: \"S\", conformance: \"M\", quality: \"X\",\n                    details: \"This field, if not null, shall define when EpochKey1 becomes valid as specified by Section 4.16.3, \" +\n                        \"\u201CEpoch Keys\u201D. Units are absolute UTC time in microseconds encoded using the epoch-us representation.\",\n                    xref: { document: \"core\", section: \"11.2.5.4.6\" }\n                }),\n\n                Field({\n                    name: \"EpochKey2\", id: 0x6, type: \"octstr\", access: \"S\", conformance: \"M\", constraint: \"16\",\n                    quality: \"X\",\n                    details: \"This field, if not null, shall be the root credential used in the derivation of an operational \" +\n                        \"group key for epoch slot 2 of the given group key set. If EpochKey2 is not null, EpochStartTime2 \" +\n                        \"shall NOT be null.\",\n                    xref: { document: \"core\", section: \"11.2.5.4.7\" }\n                }),\n\n                Field({\n                    name: \"EpochStartTime2\", id: 0x7, type: \"epoch-us\", access: \"S\", conformance: \"M\", quality: \"X\",\n                    details: \"This field, if not null, shall define when EpochKey2 becomes valid as specified by Section 4.16.3, \" +\n                        \"\u201CEpoch Keys\u201D. Units are absolute UTC time in microseconds encoded using the epoch-us representation.\",\n                    xref: { document: \"core\", section: \"11.2.5.4.8\" }\n                }),\n\n                Field({\n                    name: \"GroupKeyMulticastPolicy\", id: 0x8, type: \"GroupKeyMulticastPolicyEnum\", access: \"S\",\n                    conformance: \"O\", default: 0,\n\n                    details: \"This field specifies how the IPv6 Multicast Address shall be formed for groups using this \" +\n                        \"operational group key set.\" +\n                        \"\\n\" +\n                        \"The PerGroupID method maximizes filtering of multicast messages, so that receiving nodes receive \" +\n                        \"only multicast messages for groups to which they are subscribed.\" +\n                        \"\\n\" +\n                        \"The AllNodes method minimizes the number of multicast addresses to which a receiver node needs to \" +\n                        \"subscribe.\" +\n                        \"\\n\" +\n                        \"NOTE\" +\n                        \"\\n\" +\n                        \"Support for GroupKeyMulticastPolicy is provisional. Correct default behavior is that implied by \" +\n                        \"value PerGroupID.\",\n\n                    xref: { document: \"core\", section: \"11.2.5.4.9\" }\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"GroupInfoMapStruct\", type: \"struct\",\n            xref: { document: \"core\", section: \"11.2.5.5\" },\n\n            children: [\n                Field({\n                    name: \"GroupId\", id: 0x1, type: \"group-id\", access: \"F\", conformance: \"M\",\n                    details: \"This field uniquely identifies the group within the scope of the given Fabric.\",\n                    xref: { document: \"core\", section: \"11.2.5.5.1\" }\n                }),\n\n                Field({\n                    name: \"Endpoints\", id: 0x2, type: \"list\", access: \"F\", conformance: \"M\", constraint: \"min 1\",\n                    details: \"This field provides the list of Endpoint IDs on the Node to which messages to this group shall be \" +\n                        \"forwarded.\",\n                    xref: { document: \"core\", section: \"11.2.5.5.2\" },\n                    children: [Field({ name: \"entry\", type: \"endpoint-no\" })]\n                }),\n\n                Field({\n                    name: \"GroupName\", id: 0x3, type: \"string\", access: \"F\", conformance: \"O\", constraint: \"max 16\",\n                    details: \"This field provides a name for the group. This field shall contain the last GroupName written for a \" +\n                        \"given GroupId on any Endpoint via the Groups cluster.\",\n                    xref: { document: \"core\", section: \"11.2.5.5.3\" }\n                }),\n\n                Field({ name: \"FabricIndex\", id: 0xfe, type: \"FabricIndex\" })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(GroupKeyManagement);\n"],
  "mappings": "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",
  "names": []
}
