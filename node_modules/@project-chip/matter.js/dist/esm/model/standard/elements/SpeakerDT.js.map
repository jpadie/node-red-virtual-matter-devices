{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/SpeakerDT.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport { DeviceTypeElement as DeviceType, RequirementElement as Requirement } from \"../../elements/index.js\";\n\nexport const SpeakerDt = DeviceType({\n    name: \"Speaker\", id: 0x22, category: \"Media\", classification: \"simple\",\n\n    details: \"This defines conformance to the Speaker device type. This feature controls the speaker volume of \" +\n        \"the device.\" +\n        \"\\n\" +\n        \"To control unmute/mute, the On/Off cluster shall be used. A value of TRUE for the OnOff attribute \" +\n        \"shall represent the volume on (not muted) state, while a value of FALSE shall represent the volume \" +\n        \"off (muted) state. For volume level control, the Level cluster shall be used.\" +\n        \"\\n\" +\n        \"A dedicated endpoint is needed because the On/Off cluster can also be used for other purposes, such \" +\n        \"as for power control.\" +\n        \"\\n\" +\n        \"The decision to use Level and On/Off clusters for volume (rather than defining a new audio control \" +\n        \"cluster) was made in order to treat volume in a fashion consistent with lighting which also uses \" +\n        \"these clusters and has matching functional requirements.\",\n\n    xref: { document: \"device\", section: \"10.4\" },\n\n    children: [\n        Requirement({\n            name: \"Descriptor\", id: 0x1d, element: \"serverCluster\",\n            children: [\n                Requirement({ name: \"DeviceTypeList\", default: [ { deviceType: 34, revision: 1 } ], element: \"attribute\" })\n            ]\n        }),\n\n        Requirement({\n            name: \"OnOff\", id: 0x6, conformance: \"M\", element: \"serverCluster\",\n            xref: { document: \"device\", section: \"10.4.4\" }\n        }),\n        Requirement({\n            name: \"LevelControl\", id: 0x8, conformance: \"M\", element: \"serverCluster\",\n            xref: { document: \"device\", section: \"10.4.4\" }\n        })\n    ]\n});\n\nMatter.children.push(SpeakerDt);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,cAAc;AACvB,SAAS,qBAAqB,YAAY,sBAAsB,mBAAmB;AAE5E,MAAM,YAAY,WAAW;AAAA,EAChC,MAAM;AAAA,EAAW,IAAI;AAAA,EAAM,UAAU;AAAA,EAAS,gBAAgB;AAAA,EAE9D,SAAS;AAAA,EAcT,MAAM,EAAE,UAAU,UAAU,SAAS,OAAO;AAAA,EAE5C,UAAU;AAAA,IACN,YAAY;AAAA,MACR,MAAM;AAAA,MAAc,IAAI;AAAA,MAAM,SAAS;AAAA,MACvC,UAAU;AAAA,QACN,YAAY,EAAE,MAAM,kBAAkB,SAAS,CAAE,EAAE,YAAY,IAAI,UAAU,EAAE,CAAE,GAAG,SAAS,YAAY,CAAC;AAAA,MAC9G;AAAA,IACJ,CAAC;AAAA,IAED,YAAY;AAAA,MACR,MAAM;AAAA,MAAS,IAAI;AAAA,MAAK,aAAa;AAAA,MAAK,SAAS;AAAA,MACnD,MAAM,EAAE,UAAU,UAAU,SAAS,SAAS;AAAA,IAClD,CAAC;AAAA,IACD,YAAY;AAAA,MACR,MAAM;AAAA,MAAgB,IAAI;AAAA,MAAK,aAAa;AAAA,MAAK,SAAS;AAAA,MAC1D,MAAM,EAAE,UAAU,UAAU,SAAS,SAAS;AAAA,IAClD,CAAC;AAAA,EACL;AACJ,CAAC;AAED,OAAO,SAAS,KAAK,SAAS;",
  "names": []
}
