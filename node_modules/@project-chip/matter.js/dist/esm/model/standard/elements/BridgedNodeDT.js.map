{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/BridgedNodeDT.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport { DeviceTypeElement as DeviceType, RequirementElement as Requirement } from \"../../elements/index.js\";\n\nexport const BridgedNodeDt = DeviceType({\n    name: \"BridgedNode\", id: 0x13, category: \"Utility\", classification: \"utility\",\n    details: \"This defines conformance for a Bridged Node root endpoint. This endpoint is akin to a \\\"read me \" +\n        \"first\\\" endpoint that describes itself and any other endpoints that make up the Bridged Node. A \" +\n        \"Bridged Node endpoint represents a device on a foreign network, but is not the root endpoint of the \" +\n        \"bridge itself.\",\n    xref: { document: \"device\", section: \"2.5\" },\n\n    children: [\n        Requirement({\n            name: \"Descriptor\", id: 0x1d, element: \"serverCluster\",\n            children: [\n                Requirement({ name: \"DeviceTypeList\", default: [ { deviceType: 19, revision: 2 } ], element: \"attribute\" })\n            ]\n        }),\n\n        Requirement({\n            name: \"BridgedDeviceBasicInformation\", id: 0x39, conformance: \"M\", element: \"serverCluster\",\n            xref: { document: \"device\", section: \"2.5.5\" }\n        }),\n        Requirement({\n            name: \"PowerSourceConfiguration\", id: 0x2e, conformance: \"BridgedPowerSourceInfo, D\",\n            element: \"serverCluster\",\n            xref: { document: \"device\", section: \"2.5.5\" }\n        }),\n        Requirement({\n            name: \"PowerSource\", id: 0x2f, conformance: \"BridgedPowerSourceInfo\", element: \"serverCluster\",\n            xref: { document: \"device\", section: \"2.5.5\" }\n        })\n    ]\n});\n\nMatter.children.push(BridgedNodeDt);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,cAAc;AACvB,SAAS,qBAAqB,YAAY,sBAAsB,mBAAmB;AAE5E,MAAM,gBAAgB,WAAW;AAAA,EACpC,MAAM;AAAA,EAAe,IAAI;AAAA,EAAM,UAAU;AAAA,EAAW,gBAAgB;AAAA,EACpE,SAAS;AAAA,EAIT,MAAM,EAAE,UAAU,UAAU,SAAS,MAAM;AAAA,EAE3C,UAAU;AAAA,IACN,YAAY;AAAA,MACR,MAAM;AAAA,MAAc,IAAI;AAAA,MAAM,SAAS;AAAA,MACvC,UAAU;AAAA,QACN,YAAY,EAAE,MAAM,kBAAkB,SAAS,CAAE,EAAE,YAAY,IAAI,UAAU,EAAE,CAAE,GAAG,SAAS,YAAY,CAAC;AAAA,MAC9G;AAAA,IACJ,CAAC;AAAA,IAED,YAAY;AAAA,MACR,MAAM;AAAA,MAAiC,IAAI;AAAA,MAAM,aAAa;AAAA,MAAK,SAAS;AAAA,MAC5E,MAAM,EAAE,UAAU,UAAU,SAAS,QAAQ;AAAA,IACjD,CAAC;AAAA,IACD,YAAY;AAAA,MACR,MAAM;AAAA,MAA4B,IAAI;AAAA,MAAM,aAAa;AAAA,MACzD,SAAS;AAAA,MACT,MAAM,EAAE,UAAU,UAAU,SAAS,QAAQ;AAAA,IACjD,CAAC;AAAA,IACD,YAAY;AAAA,MACR,MAAM;AAAA,MAAe,IAAI;AAAA,MAAM,aAAa;AAAA,MAA0B,SAAS;AAAA,MAC/E,MAAM,EAAE,UAAU,UAAU,SAAS,QAAQ;AAAA,IACjD,CAAC;AAAA,EACL;AACJ,CAAC;AAED,OAAO,SAAS,KAAK,aAAa;",
  "names": []
}
