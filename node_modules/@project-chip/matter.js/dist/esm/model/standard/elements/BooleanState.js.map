{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/BooleanState.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    EventElement as Event,\n    FieldElement as Field\n} from \"../../elements/index.js\";\n\nexport const BooleanState = Cluster({\n    name: \"BooleanState\", id: 0x45, classification: \"application\", pics: \"BOOL\",\n    details: \"This cluster provides an interface to a boolean state.\",\n    xref: { document: \"cluster\", section: \"1.7\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 1 }),\n\n        Attribute({\n            name: \"StateValue\", id: 0x0, type: \"bool\", access: \"R V\", conformance: \"M\", quality: \"P\",\n            details: \"This represents a boolean state.\" +\n                \"\\n\" +\n                \"The semantics of this boolean state are defined by the device type using this cluster.\" +\n                \"\\n\" +\n                \"For example, in a Contact Sensor device type, FALSE=open or no contact, TRUE=closed or contact.\",\n            xref: { document: \"cluster\", section: \"1.7.4.1\" }\n        }),\n\n        Event({\n            name: \"StateChange\", id: 0x0, access: \"V\", conformance: \"O\", priority: \"info\",\n            details: \"If this event is supported, it shall be generated when the StateValue attribute changes.\",\n            xref: { document: \"cluster\", section: \"1.7.5.1\" },\n            children: [Field({\n                name: \"StateValue\", id: 0x0, type: \"bool\", conformance: \"M\",\n                details: \"This field shall indicate the new value of the StateValue attribute.\",\n                xref: { document: \"cluster\", section: \"1.7.5.1.1\" }\n            })]\n        })\n    ]\n});\n\nMatter.children.push(BooleanState);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,cAAc;AACvB;AAAA,EACI,kBAAkB;AAAA,EAClB,oBAAoB;AAAA,EACpB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,OACb;AAEA,MAAM,eAAe,QAAQ;AAAA,EAChC,MAAM;AAAA,EAAgB,IAAI;AAAA,EAAM,gBAAgB;AAAA,EAAe,MAAM;AAAA,EACrE,SAAS;AAAA,EACT,MAAM,EAAE,UAAU,WAAW,SAAS,MAAM;AAAA,EAE5C,UAAU;AAAA,IACN,UAAU,EAAE,MAAM,mBAAmB,IAAI,OAAQ,MAAM,mBAAmB,SAAS,EAAE,CAAC;AAAA,IAEtF,UAAU;AAAA,MACN,MAAM;AAAA,MAAc,IAAI;AAAA,MAAK,MAAM;AAAA,MAAQ,QAAQ;AAAA,MAAO,aAAa;AAAA,MAAK,SAAS;AAAA,MACrF,SAAS;AAAA,MAKT,MAAM,EAAE,UAAU,WAAW,SAAS,UAAU;AAAA,IACpD,CAAC;AAAA,IAED,MAAM;AAAA,MACF,MAAM;AAAA,MAAe,IAAI;AAAA,MAAK,QAAQ;AAAA,MAAK,aAAa;AAAA,MAAK,UAAU;AAAA,MACvE,SAAS;AAAA,MACT,MAAM,EAAE,UAAU,WAAW,SAAS,UAAU;AAAA,MAChD,UAAU,CAAC,MAAM;AAAA,QACb,MAAM;AAAA,QAAc,IAAI;AAAA,QAAK,MAAM;AAAA,QAAQ,aAAa;AAAA,QACxD,SAAS;AAAA,QACT,MAAM,EAAE,UAAU,WAAW,SAAS,YAAY;AAAA,MACtD,CAAC,CAAC;AAAA,IACN,CAAC;AAAA,EACL;AACJ,CAAC;AAED,OAAO,SAAS,KAAK,YAAY;",
  "names": []
}
