{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/FabricIndex.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport { FieldElement as Field } from \"../../elements/index.js\";\n\nexport const FabricIndex = Field({\n    name: \"FabricIndex\", id: 0xfe, type: \"fabric-idx\", access: \"R F V\", conformance: \"M\",\n    constraint: \"1 to 254\", isSeed: true,\n\n    details: \"This field shall be present for fabric-scoped data. This field does not have to be defined \" +\n        \"explicitly in the field table for fabric-scoped data.\" +\n        \"\\n\" +\n        \"This field shall NOT be present in a write interaction. For a write interaction, the server shall \" +\n        \"provide the value of the accessing fabric-index as the FabricIndex field value to processing logic, \" +\n        \"after receipt of the interaction. For a read interaction this field shall be included in all \" +\n        \"reported data that is defined as fabric-scoped.\",\n\n    xref: { document: \"core\", section: \"7.13.7\" }\n});\n\nMatter.children.push(FabricIndex);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,cAAc;AACvB,SAAS,gBAAgB,aAAa;AAE/B,MAAM,cAAc,MAAM;AAAA,EAC7B,MAAM;AAAA,EAAe,IAAI;AAAA,EAAM,MAAM;AAAA,EAAc,QAAQ;AAAA,EAAS,aAAa;AAAA,EACjF,YAAY;AAAA,EAAY,QAAQ;AAAA,EAEhC,SAAS;AAAA,EAQT,MAAM,EAAE,UAAU,QAAQ,SAAS,SAAS;AAChD,CAAC;AAED,OAAO,SAAS,KAAK,WAAW;",
  "names": []
}
