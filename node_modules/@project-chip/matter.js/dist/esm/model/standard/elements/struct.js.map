{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/struct.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport { DatatypeElement as Datatype } from \"../../elements/index.js\";\n\nexport const struct = Datatype({\n    name: \"struct\", description: \"Struct\", isSeed: true, metatype: \"object\",\n\n    details: \"A struct is a sequence of fields of any data type. Individual fields are identified by a field ID \" +\n        \"of unsigned integer, starting at 0 (zero), for the first field.\" +\n        \"\\n\" +\n        \"  \u2022 A struct itself shall have no constraint qualities.\" +\n        \"\\n\" +\n        \"  \u2022 Each struct field shall have its own qualities.\" +\n        \"\\n\" +\n        \"  \u2022 Access, conformance and persistence qualities, when not explicitly defined, shall be inherited \" +\n        \"    from the instance of the struct itself.\" +\n        \"\\n\" +\n        \"  \u2022 Struct fields may have optional conformance.\" +\n        \"\\n\" +\n        \"  \u2022 A struct shall support reading and reporting of all fields.\" +\n        \"\\n\" +\n        \"  \u2022 A struct shall support reporting changes to one or more fields.\" +\n        \"\\n\" +\n        \"  \u2022 If the struct is writable, it shall support writing the entire struct.\" +\n        \"\\n\" +\n        \"  \u2022 If a field of the struct is writable, the struct shall support updating the field.\" +\n        \"\\n\" +\n        \"  \u2022 Because of optional struct field conformance, instances of the same struct may support multiple \" +\n        \"    'flavors' of the same struct data type, but with a different set of optional fields.\" +\n        \"\\n\" +\n        \"### Fabric-Scoped Struct\" +\n        \"\\n\" +\n        \"  \u2022 A fabric-scoped struct shall only be defined and occur as an entry in a fabric-scoped list.\" +\n        \"\\n\" +\n        \"  \u2022 A fabric-scoped struct shall support the global FabricIndex field of type fabric-index, which \" +\n        \"    indicates the associated fabric of the struct, or indicates that there is no associated fabric.\" +\n        \"\\n\" +\n        \"  \u2022 The table that defines fields of a fabric-scoped struct shall NOT list the global FabricIndex \" +\n        \"    field, which is a global field and defined implicitly.\" +\n        \"\\n\" +\n        \"  \u2022 The global FabricIndex field of a fabric-scoped struct SHOULD NOT be indicated in a write \" +\n        \"    interaction.\" +\n        \"\\n\" +\n        \"  \u2022 The global FabricIndex field of a fabric-scoped struct shall be ignored in a write interaction.\" +\n        \"\\n\" +\n        \"  \u2022 The global FabricIndex field SHOULD NOT be indicated on a fabric-scoped struct contained in the \" +\n        \"    payload of a command request.\" +\n        \"\\n\" +\n        \"  \u2022 The global FabricIndex field shall be ignored on a fabric-scoped struct contained in the \" +\n        \"    payload of a command request.\" +\n        \"\\n\" +\n        \"  \u2022 When a write interaction creates a fabric-scoped struct entry (in a fabric-scoped list), the \" +\n        \"    server shall implicitly load the accessing fabric-index into the global FabricIndex field of \" +\n        \"    the struct.\" +\n        \"\\n\" +\n        \"  \u2022 When the payload of a command request contains a fabric-scoped struct, the server shall \" +\n        \"    implicitly load the accessing fabric-index into the global FabricIndex field of the struct.\" +\n        \"\\n\" +\n        \"### \u2022 A fabric-scoped struct may be defined with some fields that are fabric-sensitive.\" +\n        \"\\n\" +\n        \"  \u2022 For interactions on a fabric-scoped struct that report back data, fabric-sensitive struct \" +\n        \"    fields shall NOT be indicated when reporting data back to the client, when the struct has an \" +\n        \"    associated fabric, and it is not the accessing fabric.\",\n\n    xref: { document: \"core\", section: \"7.18.1.9\" }\n});\n\nMatter.children.push(struct);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,cAAc;AACvB,SAAS,mBAAmB,gBAAgB;AAErC,MAAM,SAAS,SAAS;AAAA,EAC3B,MAAM;AAAA,EAAU,aAAa;AAAA,EAAU,QAAQ;AAAA,EAAM,UAAU;AAAA,EAE/D,SAAS;AAAA,EAyDT,MAAM,EAAE,UAAU,QAAQ,SAAS,WAAW;AAClD,CAAC;AAED,OAAO,SAAS,KAAK,MAAM;",
  "names": []
}
