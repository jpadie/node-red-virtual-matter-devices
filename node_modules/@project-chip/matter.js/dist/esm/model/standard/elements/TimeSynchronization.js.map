{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/TimeSynchronization.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    FieldElement as Field,\n    EventElement as Event,\n    CommandElement as Command,\n    DatatypeElement as Datatype\n} from \"../../elements/index.js\";\n\nexport const TimeSynchronization = Cluster({\n    name: \"TimeSynchronization\", id: 0x38, classification: \"node\", pics: \"TIMESYNC\",\n\n    details: \"Accurate time is required for a number of reasons, including scheduling, display and validating \" +\n        \"security materials.\" +\n        \"\\n\" +\n        \"This section describes a mechanism for Nodes to achieve and maintain time synchronization. The Time \" +\n        \"Synchronization cluster provides attributes for reading a Node\u2019s current time. It also allows \" +\n        \"Administrators to set current time, time zone and daylight savings time (DST) settings.\" +\n        \"\\n\" +\n        \"The Time Synchronization cluster may be present on the root node endpoint, and shall NOT be present \" +\n        \"on any other Endpoint of any Node.\",\n\n    xref: { document: \"core\", section: \"11.17\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 2 }),\n\n        Attribute({\n            name: \"FeatureMap\", id: 0xfffc, type: \"FeatureMap\",\n            xref: { document: \"core\", section: \"11.17.5\" },\n\n            children: [\n                Field({\n                    name: \"TZ\", constraint: \"0\", description: \"TimeZone\",\n                    details: \"Allows a server to translate a UTC time to a local time using the time zone and daylight savings \" +\n                        \"time (DST) offsets. If a server supports the TimeZone feature, it shall support the SetTimeZone and \" +\n                        \"SetDSTOffset commands, and TimeZone and DSTOffset attributes, and shall expose the local time \" +\n                        \"through the LocalTime attribute.\",\n                    xref: { document: \"core\", section: \"11.17.5.1\" }\n                }),\n\n                Field({\n                    name: \"NTPC\", constraint: \"1\", description: \"NtpClient\",\n                    details: \"Allows a node to use NTP/SNTP for time synchronization.\",\n                    xref: { document: \"core\", section: \"11.17.5.2\" }\n                }),\n\n                Field({\n                    name: \"NTPS\", constraint: \"2\", description: \"NtpServer\",\n                    details: \"Allows a Node to host an NTP server for the network so that other Nodes can achieve a high accuracy \" +\n                        \"time synchronization within the network. See Section 11.17.15, \u201CActing as an NTP Server\u201D.\",\n                    xref: { document: \"core\", section: \"11.17.5.3\" }\n                }),\n\n                Field({\n                    name: \"TSC\", constraint: \"3\", description: \"TimeSyncClient\",\n                    details: \"This node also supports a time synchronization client and can connect to and read time from other \" +\n                        \"nodes.\",\n                    xref: { document: \"core\", section: \"11.17.5.4\" }\n                })\n            ]\n        }),\n\n        Attribute({\n            name: \"UtcTime\", id: 0x0, type: \"epoch-us\", access: \"R V\", conformance: \"M\", default: null,\n            quality: \"X C\",\n            details: \"If the node has achieved time synchronization, this shall indicate the current time as a UTC \" +\n                \"epoch-us (Epoch Time in Microseconds).\" +\n                \"\\n\" +\n                \"If the node has not achieved time synchronization, this shall be null. This attribute may be set \" +\n                \"when a SetUTCTime is received.\",\n            xref: { document: \"core\", section: \"11.17.8.1\" }\n        }),\n\n        Attribute({\n            name: \"Granularity\", id: 0x1, type: \"GranularityEnum\", access: \"R V\", conformance: \"M\",\n            constraint: \"desc\", default: 0,\n            details: \"The granularity of the error that the node is willing to guarantee on the time synchronization. It \" +\n                \"is of type GranularityEnum.\" +\n                \"\\n\" +\n                \"This value shall be set to NoTimeGranularity if UTCTime is null and shall NOT be set to \" +\n                \"NoTimeGranularity if UTCTime is non-null.\",\n            xref: { document: \"core\", section: \"11.17.8.2\" }\n        }),\n\n        Attribute({\n            name: \"TimeSource\", id: 0x2, type: \"TimeSourceEnum\", access: \"R V\", conformance: \"O\",\n            constraint: \"desc\", default: 0,\n\n            details: \"The node\u2019s time source. This attribute indicates what method the node is using to sync, whether the \" +\n                \"source uses NTS or not and whether the source is internal or external to the Matter network. This \" +\n                \"attribute may be used by a client to determine its level of trust in the UTCTime. It is of type \" +\n                \"TimeSourceEnum.\" +\n                \"\\n\" +\n                \"If a node is unsure if the selected NTP server is within the Matter network, it SHOULD select one \" +\n                \"of the NonMatter* values.\" +\n                \"\\n\" +\n                \"This value shall be set to None if UTCTime is null and shall NOT be set to None if UTCTime is \" +\n                \"non-null.\",\n\n            xref: { document: \"core\", section: \"11.17.8.3\" }\n        }),\n\n        Attribute({\n            name: \"TrustedTimeSource\", id: 0x3, type: \"TrustedTimeSourceStruct\", access: \"R V\",\n            conformance: \"TSC\", default: null, quality: \"X N\",\n            details: \"A Node ID, endpoint, and associated fabric index of a Node that may be used as trusted time source. \" +\n                \"See Time source prioritization. This attribute reflects the last value set by an administrator \" +\n                \"using the SetTrustedTimeSource command. If the value is null, no trusted time source has yet been \" +\n                \"set.\",\n            xref: { document: \"core\", section: \"11.17.8.4\" }\n        }),\n\n        Attribute({\n            name: \"DefaultNtp\", id: 0x4, type: \"string\", access: \"R V\", conformance: \"NTPC\",\n            constraint: \"max 128\", default: null, quality: \"X N\",\n\n            details: \"The default NTP server that this Node may use if other time sources are unavailable. This attribute \" +\n                \"is settable by an Administrator using the SetDefaultNTP command. It SHOULD be set by the \" +\n                \"Commissioner during commissioning. If no default NTP server is available, the Commissioner may set \" +\n                \"this value to null. The default IANA assigned NTP port of 123 shall be used to access the NTP \" +\n                \"server.\" +\n                \"\\n\" +\n                \"If set, the format of this attribute shall be a domain name or a static IPv6 address with no port, \" +\n                \"in text format, as specified in RFC 5952. The address format shall follow the recommendations in \" +\n                \"Section 4 and shall NOT contain a port number.\",\n\n            xref: { document: \"core\", section: \"11.17.8.5\" }\n        }),\n\n        Attribute({\n            name: \"TimeZone\", id: 0x5, type: \"list\", access: \"R V\", conformance: \"TZ\", constraint: \"1 to 2\",\n            default: [ { type: \"properties\", properties: { offset: 0, validAt: 0 } } ], quality: \"N\",\n\n            details: \"A list of time zone offsets from UTC and when they shall take effect. This attribute uses a list of \" +\n                \"time offset configurations to allow Nodes to handle scheduled regulatory time zone changes. This \" +\n                \"attribute shall NOT be used to indicate daylight savings time changes (see DSTOffset attribute for \" +\n                \"daylight savings time).\" +\n                \"\\n\" +\n                \"The first entry shall have a ValidAt entry of 0. If there is a second entry, it shall have a \" +\n                \"non-zero\" +\n                \"\\n\" +\n                \"ValidAt time.\" +\n                \"\\n\" +\n                \"If a node supports a TimeZoneDatabase, and it has data for the given time zone Name and the given \" +\n                \"Offset matches, the node may update its own DSTOffset attribute to add new DST change times as \" +\n                \"required, based on the Name fields of the TimeZoneStruct. Administrators may add additional entries \" +\n                \"to the DSTOffset of other Nodes with the same time zone, if required.\" +\n                \"\\n\" +\n                \"If a node does not support a TimeZoneDatabase, the Name field of the TimeZoneStruct is only \" +\n                \"applicable for client-side localization. In particular:\" +\n                \"\\n\" +\n                \"  \u2022 If the node does not support a TimeZoneDatabase, the Name field shall NOT be used to calculate \" +\n                \"    the local time.\" +\n                \"\\n\" +\n                \"  \u2022 If the node does not support a TimeZoneDatabase, the Name field shall NOT be used to calculate \" +\n                \"    DST start or end dates.\" +\n                \"\\n\" +\n                \"When time passes, the node SHOULD remove any entries which are no longer active and change the \" +\n                \"ValidAt time for the currently used TimeZoneStruct list item to zero.\" +\n                \"\\n\" +\n                \"This attribute shall have at least one entry. If the node does not have a default time zone and no \" +\n                \"time zone has been set, it may set this value to a list containing a single TimeZoneStruct with an \" +\n                \"offset of 0 (UTC) and a ValidAt time of 0.\",\n\n            xref: { document: \"core\", section: \"11.17.8.6\" },\n            children: [Field({ name: \"entry\", type: \"TimeZoneStruct\" })]\n        }),\n\n        Attribute({\n            name: \"DstOffset\", id: 0x6, type: \"list\", access: \"R V\", conformance: \"TZ\", default: [],\n            quality: \"N\",\n\n            details: \"A list of offsets to apply for daylight savings time, and their validity period. List entries shall \" +\n                \"be sorted by ValidStarting time.\" +\n                \"\\n\" +\n                \"A list entry shall NOT have a ValidStarting time that is smaller than the ValidUntil time of the \" +\n                \"previous entry. There shall be at most one list entry with a null ValidUntil time and, if such an \" +\n                \"entry is present, it shall appear last in the list.\" +\n                \"\\n\" +\n                \"Over time, the node SHOULD remove any entries which are no longer active from the list.\" +\n                \"\\n\" +\n                \"Over time, if the node supports a TimeZoneDatabase and it has information available for the given \" +\n                \"time zone name, it may update its own list to add additional entries.\" +\n                \"\\n\" +\n                \"If a time zone does not use DST, this shall be indicated by a single entry with a 0 offset and a \" +\n                \"null ValidUntil field.\",\n\n            xref: { document: \"core\", section: \"11.17.8.7\" },\n            children: [Field({ name: \"entry\", type: \"DSTOffsetStruct\" })]\n        }),\n\n        Attribute({\n            name: \"LocalTime\", id: 0x7, type: \"epoch-us\", access: \"R V\", conformance: \"TZ\", default: null,\n            quality: \"X C\",\n\n            details: \"The computed current local time of the node as a epoch-us (Epoch Time in Microseconds). The value \" +\n                \"of LocalTime shall be the sum of the UTCTime, the offset of the currently valid TimeZoneStruct from \" +\n                \"the TimeZone attribute (converted to microseconds), and the offset of the currently valid \" +\n                \"DSTOffsetStruct from the DSTOffset attribute (converted to microseconds), if such an entry exists.\" +\n                \"\\n\" +\n                \"If the node has not achieved time synchronization, this shall be null. If the node has an empty \" +\n                \"DSTOffset, this shall be null.\",\n\n            xref: { document: \"core\", section: \"11.17.8.8\" }\n        }),\n\n        Attribute({\n            name: \"TimeZoneDatabase\", id: 0x8, type: \"TimeZoneDatabaseEnum\", access: \"R V\", conformance: \"TZ\",\n            default: 2, quality: \"F\",\n            details: \"Indicates whether the node has access to a time zone database. Nodes with a time zone database may \" +\n                \"update their own DSTOffset attribute to add new entries and may push DSTOffset updates to other \" +\n                \"Nodes in the same time zone as required.\",\n            xref: { document: \"core\", section: \"11.17.8.9\" }\n        }),\n\n        Attribute({\n            name: \"NtpServerAvailable\", id: 0x9, type: \"bool\", access: \"R V\", conformance: \"NTPS\",\n            default: false,\n            details: \"If the node is running an RFC 5905 NTPv4 compliant server on port 123, this value shall be True. If \" +\n                \"the node is not currently running an NTP server, this value shall be False.\",\n            xref: { document: \"core\", section: \"11.17.8.10\" }\n        }),\n\n        Attribute({\n            name: \"TimeZoneListMaxSize\", id: 0xa, type: \"uint8\", access: \"R V\", conformance: \"TZ\",\n            constraint: \"1 to 2\", quality: \"F\",\n            details: \"Number of supported list entries in the TimeZone attribute. This attribute may take the value of 1 \" +\n                \"or 2, where the optional second list entry may be used to handle scheduled regulatory time zone \" +\n                \"changes.\",\n            xref: { document: \"core\", section: \"11.17.8.11\" }\n        }),\n\n        Attribute({\n            name: \"DstOffsetListMaxSize\", id: 0xb, type: \"uint8\", access: \"R V\", conformance: \"TZ\",\n            constraint: \"min 1\", quality: \"F\",\n            details: \"Number of supported list entries in DSTOffset attribute. This value must be at least 1.\",\n            xref: { document: \"core\", section: \"11.17.8.12\" }\n        }),\n\n        Attribute({\n            name: \"SupportsDnsResolve\", id: 0xc, type: \"bool\", access: \"R V\", conformance: \"NTPC\",\n            default: false, quality: \"F\",\n            details: \"This attribute is true if the node supports resolving a domain name. DefaultNTP Address values for \" +\n                \"these nodes may include domain names. If this is False, the Address for a DefaultNTP shall be an \" +\n                \"IPv6 address.\",\n            xref: { document: \"core\", section: \"11.17.8.13\" }\n        }),\n\n        Event({\n            name: \"DstTableEmpty\", id: 0x0, access: \"V\", conformance: \"TZ\", priority: \"info\",\n\n            details: \"This event shall be generated when the node stops applying the current DSTOffset and there are no \" +\n                \"entries in the list with a larger ValidStarting time, indicating the need to possibly get new DST \" +\n                \"data. This event shall also be generated if the DSTOffset list is cleared either by a SetTimeZone \" +\n                \"command, or by a SetDSTOffset command with an empty list.\" +\n                \"\\n\" +\n                \"The node shall generate this event if the node has not generated a DSTTableEmpty event in the last \" +\n                \"hour, and the DSTOffset list is empty when the node attempts to update its time. DSTTableEmpty \" +\n                \"events corresponding to a time update SHOULD NOT be generated more often than once per hour.\" +\n                \"\\n\" +\n                \"There is no data for this event.\",\n\n            xref: { document: \"core\", section: \"11.17.10.1\" }\n        }),\n\n        Event({\n            name: \"DstStatus\", id: 0x1, access: \"V\", conformance: \"TZ\", priority: \"info\",\n\n            details: \"This event shall be generated when the node starts or stops applying a DST offset.\" +\n                \"\\n\" +\n                \"DSTOffsetActive\" +\n                \"\\n\" +\n                \"Indicates whether the current DST offset is being applied (i.e, daylight savings time is applied, \" +\n                \"as opposed to standard time).\",\n\n            xref: { document: \"core\", section: \"11.17.10.2\" },\n            children: [Field({ name: \"DstOffsetActive\", id: 0x0, type: \"bool\", conformance: \"M\" })]\n        }),\n\n        Event({\n            name: \"TimeZoneStatus\", id: 0x2, access: \"V\", conformance: \"TZ\", priority: \"info\",\n            details: \"This event shall be generated when the node changes its time zone offset or name. It shall NOT be \" +\n                \"sent for DST changes that are not accompanied by a time zone change.\",\n            xref: { document: \"core\", section: \"11.17.10.3\" },\n\n            children: [\n                Field({\n                    name: \"Offset\", id: 0x0, type: \"int32\", conformance: \"M\", constraint: \"-43200 to 50400\",\n                    details: \"Current time zone offset from UTC in seconds.\",\n                    xref: { document: \"core\", section: \"11.17.10.3.1\" }\n                }),\n\n                Field({\n                    name: \"Name\", id: 0x1, type: \"string\", conformance: \"O\", constraint: \"0 to 64\",\n                    details: \"Current time zone name. This name SHOULD use the country/city format specified by the IANA Time \" +\n                        \"Zone Database.\",\n                    xref: { document: \"core\", section: \"11.17.10.3.2\" }\n                })\n            ]\n        }),\n\n        Event({\n            name: \"TimeFailure\", id: 0x3, access: \"V\", conformance: \"M\", priority: \"info\",\n            details: \"This event shall be generated if the node has not generated a TimeFailure event in the last hour, \" +\n                \"and the node is unable to get a time from any source. This event SHOULD NOT be generated more often \" +\n                \"than once per hour.\",\n            xref: { document: \"core\", section: \"11.17.10.4\" }\n        }),\n\n        Event({\n            name: \"MissingTrustedTimeSource\", id: 0x4, access: \"V\", conformance: \"TSC\", priority: \"info\",\n\n            details: \"This event shall be generated if the TrustedTimeSource is set to null upon fabric removal or by a \" +\n                \"SetTrustedTimeSource command.\" +\n                \"\\n\" +\n                \"This event shall also be generated if the node has not generated a MissingTrustedTimeSource event \" +\n                \"in the last hour, and the node fails to update its time from the TrustedTimeSource because the \" +\n                \"TrustedTimeSource is null or the specified peer cannot be reached. MissingTrustedTimeSource events \" +\n                \"corresponding to a time update SHOULD NOT be generated more often than once per hour.\",\n\n            xref: { document: \"core\", section: \"11.17.10.5\" }\n        }),\n\n        Command({\n            name: \"SetUtcTime\", id: 0x0, access: \"A\", conformance: \"M\", direction: \"request\",\n            response: \"status\",\n\n            details: \"This command may be issued by Administrator to set the time. If the Commissioner does not have a \" +\n                \"valid time source, it may send a Granularity of NoTimeGranularity.\" +\n                \"\\n\" +\n                \"Upon receipt of this command, the node may update its UTCTime attribute to match the time specified \" +\n                \"in the command, if the stated Granularity and TimeSource are acceptable. The node shall update its \" +\n                \"UTCTime attribute if its current Granularity is NoTimeGranularity.\" +\n                \"\\n\" +\n                \"If the time is updated, the node shall also update its Granularity attribute based on the \" +\n                \"granularity specified in the command and the expected clock drift of the node. This SHOULD normally \" +\n                \"be one level lower than the stated command Granularity. It shall also update its TimeSource \" +\n                \"attribute to Admin. It shall also update its Last Known Good UTC Time as defined in Section \" +\n                \"3.5.6.1, \u201CLast Known Good UTC Time\u201D.\" +\n                \"\\n\" +\n                \"If the node updates its UTCTime attribute, it shall accept the command with a status code of \" +\n                \"SUCCESS. If it opts to not update its time, it shall fail the command with a cluster specific \" +\n                \"Status Code of TimeNotAccepted.\",\n\n            xref: { document: \"core\", section: \"11.17.9.1\" },\n\n            children: [\n                Field({\n                    name: \"UtcTime\", id: 0x0, type: \"epoch-us\", conformance: \"M\", default: 0,\n                    details: \"This shall give the Client\u2019s UTC Time.\",\n                    xref: { document: \"core\", section: \"11.17.9.1.1\" }\n                }),\n\n                Field({\n                    name: \"Granularity\", id: 0x1, type: \"GranularityEnum\", conformance: \"M\", default: 0,\n                    details: \"This shall give the Client\u2019s Granularity, as described in Section 11.17.8.2, \u201CGranularity \" +\n                        \"Attribute\u201D.\",\n                    xref: { document: \"core\", section: \"11.17.9.1.2\" }\n                }),\n\n                Field({\n                    name: \"TimeSource\", id: 0x2, type: \"TimeSourceEnum\", conformance: \"O\", default: 0,\n                    details: \"This shall give the Client\u2019s TimeSource, as described in Section 11.17.8.3, \u201CTimeSource Attribute\u201D.\",\n                    xref: { document: \"core\", section: \"11.17.9.1.3\" }\n                })\n            ]\n        }),\n\n        Command({\n            name: \"SetTrustedTimeSource\", id: 0x1, access: \"F A\", conformance: \"TSC\", direction: \"request\",\n            response: \"status\",\n            details: \"This command shall set the TrustedTimeSource attribute. Upon receipt of this command, * If the \" +\n                \"TrustedTimeSource field in the command is null, the node shall set the TrustedTimeSource attribute \" +\n                \"to null and shall generate a MissingTrustedTimeSource event. * Otherwise, the node shall set the \" +\n                \"TrustedTimeSource attribute to a struct which has NodeID and Endpoint fields matching those in the \" +\n                \"TrustedTimeSource field and has its FabricIndex field set to the command\u2019s accessing fabric index.\",\n            xref: { document: \"core\", section: \"11.17.9.2\" },\n\n            children: [\n                Field({\n                    name: \"TrustedTimeSource\", id: 0x0, type: \"FabricScopedTrustedTimeSourceStruct\", access: \"F\",\n                    conformance: \"M\", quality: \"X\",\n                    details: \"This field contains the Node ID and endpoint of a trusted time source on the accessing fabric.\",\n                    xref: { document: \"core\", section: \"11.17.9.2.1\" }\n                }),\n\n                Field({ name: \"FabricIndex\", id: 0xfe, type: \"FabricIndex\" })\n            ]\n        }),\n\n        Command({\n            name: \"SetTimeZone\", id: 0x2, access: \"M\", conformance: \"TZ\", direction: \"request\",\n            response: \"SetTimeZoneResponse\",\n\n            details: \"This command is used to set the time zone of the node.\" +\n                \"\\n\" +\n                \"If the given list is larger than the TimeZoneListMaxSize, the node shall respond with \" +\n                \"RESOURCE_EXHAUSTED and the TimeZone attribute shall NOT be updated.\" +\n                \"\\n\" +\n                \"If the given list does not conform to the list requirements in TimeZone attribute the node shall \" +\n                \"respond with a CONSTRAINT_ERROR and the TimeZone attribute shall NOT be updated.\" +\n                \"\\n\" +\n                \"If there are no errors in the list, the TimeZone field shall be copied to the TimeZone attribute. A \" +\n                \"TimeZoneStatus event shall be generated with the new time zone information.\" +\n                \"\\n\" +\n                \"If the node supports a time zone database and it has information available for the time zone that \" +\n                \"will be applied, it may set its DSTOffset attribute, otherwise the DSTOffset attribute shall be set \" +\n                \"to an empty list. A DSTTableEmpty event shall be generated if the DSTOffset attribute is empty. A \" +\n                \"DSTStatus event shall be generated if the node was previously applying a DST offset.\",\n\n            xref: { document: \"core\", section: \"11.17.9.3\" },\n            children: [Field({\n                name: \"TimeZone\", id: 0x0, type: \"list\", conformance: \"M\", constraint: \"1 to 2\",\n                children: [Field({ name: \"entry\", type: \"TimeZoneStruct\" })]\n            })]\n        }),\n\n        Command({\n            name: \"SetTimeZoneResponse\", id: 0x3, conformance: \"TZ\", direction: \"response\",\n            details: \"This command shall be generated in response to a SetTimeZone command.\",\n            xref: { document: \"core\", section: \"11.17.9.4\" },\n\n            children: [Field({\n                name: \"DstOffsetsRequired\", id: 0x0, type: \"bool\", conformance: \"M\", default: true,\n                details: \"If the node supports a time zone database with information for the time zone that will be applied, \" +\n                    \"it\" +\n                    \"\\n\" +\n                    \"may use this information to set the DSTOffset attribute. If the node is setting its own DSTOffset \" +\n                    \"attribute, the DSTOffsetsRequired field shall be set to false, otherwise it shall be set to true.\",\n                xref: { document: \"core\", section: \"11.17.9.4.1\" }\n            })]\n        }),\n\n        Command({\n            name: \"SetDstOffset\", id: 0x4, access: \"M\", conformance: \"TZ\", direction: \"request\",\n            response: \"status\",\n\n            details: \"This command is used to set the DST offsets for a node.\" +\n                \"\\n\" +\n                \"  \u2022 If the length of DSTOffset is larger than DSTOffsetListMaxSize, the node shall respond with \" +\n                \"    RESOURCE_EXHAUSTED.\" +\n                \"\\n\" +\n                \"  \u2022 Else if the list entries do not conform to the list requirements for DSTOffset attribute, the \" +\n                \"    node shall respond with CONSTRAINT_ERROR.\" +\n                \"\\n\" +\n                \"If there are no errors in the list, the DSTOffset field shall be copied to the DSTOffset attribute.\" +\n                \"\\n\" +\n                \"If the DSTOffset attribute change causes a corresponding change to the DST state, a DSTStatus event \" +\n                \"shall be generated. If the list is empty, the node shall generate a DSTTableEmpty event.\",\n\n            xref: { document: \"core\", section: \"11.17.9.5\" },\n            children: [Field({\n                name: \"DstOffset\", id: 0x0, type: \"list\", conformance: \"M\",\n                children: [Field({ name: \"entry\", type: \"DSTOffsetStruct\" })]\n            })]\n        }),\n\n        Command({\n            name: \"SetDefaultNtp\", id: 0x5, access: \"A\", conformance: \"NTPC\", direction: \"request\",\n            response: \"status\",\n\n            details: \"This command is used to set the DefaultNTP attribute. If the DefaultNTP Address field does not \" +\n                \"conform to the requirements in the DefaultNTP attribute description, the command shall fail with a \" +\n                \"status code of INVALID_COMMAND. If the node does not support DNS resolution (as specified in \" +\n                \"SupportsDNSResolve) and the provided Address is a domain name, the command shall fail with a status \" +\n                \"code of INVALID_COMMAND. Otherwise, the node shall set the DefaultNTP attribute to match the \" +\n                \"DefaultNTP provided in this command.\",\n\n            xref: { document: \"core\", section: \"11.17.9.6\" },\n\n            children: [Field({\n                name: \"DefaultNtp\", id: 0x0, type: \"string\", conformance: \"M\", constraint: \"max 128\", quality: \"X\",\n                details: \"This field contains the address of an NTP server than can be used as a fallback for time \" +\n                    \"synchronization. The format of this field shall follow the requirements in the DefaultNTP attribute \" +\n                    \"description.\",\n                xref: { document: \"core\", section: \"11.17.9.6.1\" }\n            })]\n        }),\n\n        Datatype({\n            name: \"GranularityEnum\", type: \"enum8\",\n            xref: { document: \"core\", section: \"11.17.6.1\" },\n\n            children: [\n                Field({\n                    name: \"NoTimeGranularity\", id: 0x0, conformance: \"M\",\n                    description: \"This indicates that the node is not currently synchronized with a UTC Time source and its clock is based on the Last Known Good UTC Time only.\"\n                }),\n                Field({\n                    name: \"MinutesGranularity\", id: 0x1, conformance: \"M\",\n                    description: \"This indicates the node was synchronized to an upstream source in the past, but sufficient clock drift has occurred such that the clock error is now > 5 seconds.\"\n                }),\n                Field({\n                    name: \"SecondsGranularity\", id: 0x2, conformance: \"M\",\n                    description: \"This indicates the node is synchronized to an upstream source using a low resolution protocol. UTC Time is accurate to \u00B1 5 seconds.\"\n                }),\n                Field({\n                    name: \"MillisecondsGranularity\", id: 0x3, conformance: \"M\",\n                    description: \"This indicates the node is synchronized to an upstream source using high resolution time- synchronization protocol such as NTP, or has built-in GNSS with some amount of jitter applying its GNSS timestamp. UTC Time is accurate to \u00B1 50 ms.\"\n                }),\n                Field({\n                    name: \"MicrosecondsGranularity\", id: 0x4, conformance: \"M\",\n                    description: \"This indicates the node is synchronized to an upstream source using a highly precise time- synchronization protocol such as PTP, or has built-in GNSS. UTC time is accurate to \u00B1 10 \u03BCs.\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"TimeSourceEnum\", type: \"enum8\",\n            xref: { document: \"core\", section: \"11.17.6.2\" },\n\n            children: [\n                Field({\n                    name: \"None\", id: 0x0, conformance: \"M\",\n                    description: \"Node is not currently synchronized with a UTC Time source.\"\n                }),\n                Field({ name: \"Unknown\", id: 0x1, conformance: \"M\", description: \"Node uses an unlisted time source.\" }),\n                Field({\n                    name: \"Admin\", id: 0x2, conformance: \"M\",\n                    description: \"Node received time from a client using the SetUTCTime Command.\"\n                }),\n                Field({\n                    name: \"NodeTimeCluster\", id: 0x3, conformance: \"M\",\n                    description: \"Synchronized time by querying the Time Synchronization cluster of another Node.\"\n                }),\n                Field({\n                    name: \"NonMatterSntp\", id: 0x4, conformance: \"M\",\n                    description: \"SNTP from a server not in the Matter network. NTS is not used.\"\n                }),\n                Field({\n                    name: \"NonMatterNtp\", id: 0x5, conformance: \"M\",\n                    description: \"NTP from servers not in the Matter network. None of the servers used NTS.\"\n                }),\n                Field({\n                    name: \"MatterSntp\", id: 0x6, conformance: \"M\",\n                    description: \"SNTP from a server within the Matter network. NTS is not used.\"\n                }),\n                Field({\n                    name: \"MatterNtp\", id: 0x7, conformance: \"M\",\n                    description: \"NTP from servers within the Matter network. None of the servers used NTS.\"\n                }),\n                Field({\n                    name: \"MixedNtp\", id: 0x8, conformance: \"M\",\n                    description: \"NTP from multiple servers in the Matter network and external. None of the servers used NTS.\"\n                }),\n                Field({\n                    name: \"NonMatterSntpnts\", id: 0x9, conformance: \"M\",\n                    description: \"SNTP from a server not in the Matter network. NTS is used.\"\n                }),\n                Field({\n                    name: \"NonMatterNtpnts\", id: 0xa, conformance: \"M\",\n                    description: \"NTP from servers not in the Matter network. NTS is used on at least one server.\"\n                }),\n                Field({\n                    name: \"MatterSntpnts\", id: 0xb, conformance: \"M\",\n                    description: \"SNTP from a server within the Matter network. NTS is used.\"\n                }),\n                Field({\n                    name: \"MatterNtpnts\", id: 0xc, conformance: \"M\",\n                    description: \"NTP from a server within the Matter network. NTS is used on at least one server.\"\n                }),\n                Field({\n                    name: \"MixedNtpnts\", id: 0xd, conformance: \"M\",\n                    description: \"NTP from multiple servers in the Matter network and external. NTS is used on at least one server.\"\n                }),\n                Field({\n                    name: \"CloudSource\", id: 0xe, conformance: \"M\",\n                    description: \"Time synchronization comes from a vendor cloud-based source (e.g. \\\"Date\\\" header in authenticated HTTPS connection).\"\n                }),\n                Field({ name: \"Ptp\", id: 0xf, conformance: \"M\", description: \"Time synchronization comes from PTP.\" }),\n                Field({\n                    name: \"Gnss\", id: 0x10, conformance: \"M\",\n                    description: \"Time synchronization comes from a GNSS source.\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"TimeZoneDatabaseEnum\", type: \"enum8\",\n            details: \"It indicates what the device knows about the contents of the IANA Time Zone Database. Partial \" +\n                \"support on a device may be used to omit historical data, less commonly used time zones, and/or time \" +\n                \"zones not related to the region a product is sold in.\",\n            xref: { document: \"core\", section: \"11.17.6.3\" },\n\n            children: [\n                Field({\n                    name: \"Full\", id: 0x0, conformance: \"M\",\n                    description: \"Node has a full list of the available time zones\"\n                }),\n                Field({\n                    name: \"Partial\", id: 0x1, conformance: \"M\",\n                    description: \"Node has a partial list of the available time zones\"\n                }),\n                Field({ name: \"None\", id: 0x2, conformance: \"M\", description: \"Node does not have a time zone database\" })\n            ]\n        }),\n\n        Datatype({\n            name: \"TrustedTimeSourceStruct\", type: \"struct\",\n            xref: { document: \"core\", section: \"11.17.6.4\" },\n\n            children: [\n                Field({\n                    name: \"FabricIndex\", id: 0x0, type: \"fabric-idx\", conformance: \"M\",\n                    details: \"The Fabric Index associated with the Fabric of the client which last set the value of the trusted \" +\n                        \"time source node.\",\n                    xref: { document: \"core\", section: \"11.17.6.4.1\" }\n                }),\n\n                Field({\n                    name: \"NodeId\", id: 0x1, type: \"node-id\", conformance: \"M\",\n                    details: \"Node ID of the trusted time source node on the Fabric associated with the entry.\",\n                    xref: { document: \"core\", section: \"11.17.6.4.2\" }\n                }),\n                Field({\n                    name: \"Endpoint\", id: 0x2, type: \"endpoint-no\", conformance: \"M\",\n                    details: \"Endpoint on the trusted time source node that contains the Time Synchronization cluster server.\",\n                    xref: { document: \"core\", section: \"11.17.6.4.3\" }\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"FabricScopedTrustedTimeSourceStruct\", type: \"struct\",\n            xref: { document: \"core\", section: \"11.17.6.5\" },\n\n            children: [\n                Field({\n                    name: \"NodeId\", id: 0x0, type: \"node-id\", conformance: \"M\",\n                    details: \"Node ID of the trusted time source node on the Fabric of the issuer.\",\n                    xref: { document: \"core\", section: \"11.17.6.5.1\" }\n                }),\n\n                Field({\n                    name: \"Endpoint\", id: 0x1, type: \"endpoint-no\", conformance: \"M\",\n                    details: \"Endpoint on the trusted time source node that contains the Time Synchronization cluster server. \" +\n                        \"This is provided to avoid having to do discovery of the location of that endpoint by walking over \" +\n                        \"all endpoints and checking their Descriptor Cluster.\",\n                    xref: { document: \"core\", section: \"11.17.6.5.2\" }\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"TimeZoneStruct\", type: \"struct\",\n            xref: { document: \"core\", section: \"11.17.6.6\" },\n\n            children: [\n                Field({\n                    name: \"Offset\", id: 0x0, type: \"int32\", conformance: \"M\", constraint: \"-43200 to 50400\",\n                    details: \"The time zone offset from UTC in seconds.\",\n                    xref: { document: \"core\", section: \"11.17.6.6.1\" }\n                }),\n                Field({\n                    name: \"ValidAt\", id: 0x1, type: \"epoch-us\", conformance: \"M\",\n                    details: \"The UTC time when the offset shall be applied.\",\n                    xref: { document: \"core\", section: \"11.17.6.6.2\" }\n                }),\n\n                Field({\n                    name: \"Name\", id: 0x2, type: \"string\", conformance: \"O\", constraint: \"0 to 64\",\n                    details: \"The time zone name SHOULD provide a human-readable time zone name and it SHOULD use the \" +\n                        \"country/city format specified by the IANA Time Zone Database. The Name field may be used for \" +\n                        \"display. If the node supports a TimeZoneDatabase it may use the Name field to set its own DST \" +\n                        \"offsets if it has database information for the supplied time zone Name and the given Offset matches.\",\n                    xref: { document: \"core\", section: \"11.17.6.6.3\" }\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"DSTOffsetStruct\", type: \"struct\",\n            xref: { document: \"core\", section: \"11.17.6.7\" },\n\n            children: [\n                Field({\n                    name: \"Offset\", id: 0x0, type: \"int32\", conformance: \"M\", constraint: \"desc\",\n                    details: \"The DST offset in seconds. Normally this is in the range of 0 to 3600 seconds (1 hour), but this \" +\n                        \"field will accept any values in the int32 range to accommodate potential future legislation that \" +\n                        \"does not fit with these assumptions.\",\n                    xref: { document: \"core\", section: \"11.17.6.7.1\" }\n                }),\n\n                Field({\n                    name: \"ValidStarting\", id: 0x1, type: \"epoch-us\", conformance: \"M\",\n                    details: \"The UTC time when the offset shall be applied.\",\n                    xref: { document: \"core\", section: \"11.17.6.7.2\" }\n                }),\n\n                Field({\n                    name: \"ValidUntil\", id: 0x2, type: \"epoch-us\", conformance: \"M\", quality: \"X\",\n                    details: \"The UTC time when the offset shall stop being applied. Providing a null value here indicates a \" +\n                        \"permanent DST change. If this value is non-null the value shall be larger than the ValidStarting \" +\n                        \"time.\",\n                    xref: { document: \"core\", section: \"11.17.6.7.3\" }\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"StatusCodeEnum\", type: \"enum8\",\n            xref: { document: \"core\", section: \"11.17.7.1\" },\n            children: [\n                Field({ name: \"TimeNotAccepted\", id: 0x2, description: \"Node rejected the attempt to set the UTC time\" })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(TimeSynchronization);\n"],
  "mappings": "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",
  "names": []
}
