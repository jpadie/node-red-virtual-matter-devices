{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/ModeBase.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    FieldElement as Field,\n    CommandElement as Command,\n    DatatypeElement as Datatype\n} from \"../../elements/index.js\";\n\nexport const ModeBase = Cluster({\n    name: \"ModeBase\", classification: \"application\", pics: \"MODB\",\n\n    details: \"This cluster provides an interface for controlling a characteristic of a device that can be set to \" +\n        \"one of several predefined values. For example, the light pattern of a disco ball, the mode of a \" +\n        \"massage chair, or the wash cycle of a laundry machine.\" +\n        \"\\n\" +\n        \"The server allows the client to set a mode on the server. A mode is one of a list of options that \" +\n        \"may be presented by a client for a user choice, or understood by the client, via the mode\u2019s tags.\" +\n        \"\\n\" +\n        \"A mode tag is either a standard tag within a standard category namespace, or a manufacturer \" +\n        \"specific tag, within the namespace of the vendor ID of the manufacturer.\" +\n        \"\\n\" +\n        \"Any derived cluster specification based on this cluster shall support the standard mode tag value \" +\n        \"definitions and command status definitions defined in this cluster and may define additional \" +\n        \"standard mode tag values and standard command status values that are supported in the respective \" +\n        \"derived cluster instances.\" +\n        \"\\n\" +\n        \"Each cluster ID that indicates this specification shall define a distinct purpose for the cluster \" +\n        \"instance. For example: A LightBlinking cluster ID supports blinking modes for a light (and is \" +\n        \"described that way).\" +\n        \"\\n\" +\n        \"An anonymous mode shall NOT replace the meaning of a standard mode tag, when one exists, for the \" +\n        \"cluster purpose.\",\n\n    xref: { document: \"cluster\", section: \"1.10\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 2 }),\n\n        Attribute({\n            name: \"FeatureMap\", id: 0xfffc, type: \"FeatureMap\",\n            xref: { document: \"cluster\", section: \"1.10.4\" },\n\n            children: [Field({\n                name: \"DEPONOFF\", constraint: \"0\", description: \"OnOff\",\n                details: \"This feature creates a dependency between an OnOff cluster instance and this cluster instance on \" +\n                    \"the same endpoint. See OnMode for more information.\",\n                xref: { document: \"cluster\", section: \"1.10.4.1\" }\n            })]\n        }),\n\n        Attribute({\n            name: \"SupportedModes\", id: 0x0, type: \"list\", access: \"R V\", conformance: \"M\",\n            constraint: \"2 to 255\", quality: \"F\",\n\n            details: \"This attribute shall contain the list of supported modes that may be selected for the CurrentMode \" +\n                \"attribute. Each item in this list represents a unique mode as indicated by the Mode field of the \" +\n                \"ModeOptionStruct.\" +\n                \"\\n\" +\n                \"Each entry in this list shall have a unique value for the Mode field. Each entry in this list shall \" +\n                \"have a unique value for the Label field.\",\n\n            xref: { document: \"cluster\", section: \"1.10.6.2\" },\n            children: [Field({ name: \"entry\", type: \"ModeOptionStruct\" })]\n        }),\n\n        Attribute({\n            name: \"CurrentMode\", id: 0x1, type: \"uint8\", access: \"R V\", conformance: \"M\", constraint: \"desc\",\n            quality: \"N S\",\n\n            details: \"Indicates the current mode of the server.\" +\n                \"\\n\" +\n                \"The value of this field shall match the Mode field of one of the entries in the SupportedModes \" +\n                \"attribute.\" +\n                \"\\n\" +\n                \"The value of this attribute may change at any time via an out-of-band interaction outside of the \" +\n                \"server, such as interactions with a user interface, via internal mode changes due to autonomously \" +\n                \"progressing through a sequence of operations, on system time-outs or idle delays, or via \" +\n                \"interactions coming from a fabric other than the one which last executed a ChangeToMode.\",\n\n            xref: { document: \"cluster\", section: \"1.10.6.3\" }\n        }),\n\n        Attribute({\n            name: \"StartUpMode\", id: 0x2, type: \"uint8\", access: \"RW VO\", conformance: \"O\", constraint: \"desc\",\n            quality: \"X N\",\n\n            details: \"Indicates the desired startup mode for the server when it is supplied with power.\" +\n                \"\\n\" +\n                \"If this attribute is not null, the CurrentMode attribute shall be set to the StartUpMode value, \" +\n                \"when the server is powered up, except in the case when the OnMode attribute overrides the \" +\n                \"StartUpMode attribute (see OnModeWithPowerUp).\" +\n                \"\\n\" +\n                \"This behavior does not apply to reboots associated with OTA. After an OTA restart, the CurrentMode \" +\n                \"attribute shall return to its value prior to the restart.\" +\n                \"\\n\" +\n                \"The value of this field shall match the Mode field of one of the entries in the SupportedModes \" +\n                \"attribute.\" +\n                \"\\n\" +\n                \"If this attribute is not implemented, or is set to the null value, it shall have no effect.\",\n\n            xref: { document: \"cluster\", section: \"1.10.6.4\" }\n        }),\n\n        Attribute({\n            name: \"OnMode\", id: 0x3, type: \"uint8\", access: \"RW VO\", conformance: \"DEPONOFF\",\n            constraint: \"desc\", default: null, quality: \"X N\",\n\n            details: \"Indicates whether the value of CurrentMode depends on the state of the On/Off cluster on the same \" +\n                \"endpoint. If this attribute is not present or is set to null, there is no dependency, otherwise the \" +\n                \"CurrentMode attribute shall depend on the OnOff attribute in the On/Off cluster\" +\n                \"\\n\" +\n                \"The value of this field shall match the Mode field of one of the entries in the SupportedModes \" +\n                \"attribute.\",\n\n            xref: { document: \"cluster\", section: \"1.10.6.5\" }\n        }),\n\n        Command({\n            name: \"ChangeToMode\", id: 0x0, access: \"O\", conformance: \"M\", direction: \"request\",\n            response: \"ChangeToModeResponse\",\n            details: \"This command is used to change device modes.\" +\n                \"\\n\" +\n                \"On receipt of this command the device shall respond with a ChangeToModeResponse command.\",\n            xref: { document: \"cluster\", section: \"1.10.7.1\" },\n\n            children: [Field({\n                name: \"NewMode\", id: 0x0, type: \"uint8\", conformance: \"M\", constraint: \"desc\",\n\n                details: \"If the NewMode field doesn\u2019t match the Mode field of any entry of the SupportedModes list, the \" +\n                    \"ChangeToModeResponse command\u2019s Status field shall indicate UnsupportedMode and the StatusText field \" +\n                    \"shall be included and may be used to indicate the issue, with a human readable string, or include \" +\n                    \"an empty string.\" +\n                    \"\\n\" +\n                    \"If the NewMode field matches the Mode field of one entry of the SupportedModes list, but the device \" +\n                    \"is not able to transition as requested, the ChangeToModeResponse command shall:\" +\n                    \"\\n\" +\n                    \"  \u2022 Have the Status set to a product-specific Status value representing the error, or \" +\n                    \"    GenericFailure if a more specific error cannot be provided. See Status Field for details.\" +\n                    \"\\n\" +\n                    \"  \u2022 Provide a human readable string in the StatusText field.\" +\n                    \"\\n\" +\n                    \"If the NewMode field matches the Mode field of one entry of the SupportedModes list and the device \" +\n                    \"is able to transition as requested, the server shall transition into the mode associated with \" +\n                    \"NewMode, the ChangeToModeResponse command shall have the Status field set to Success, the \" +\n                    \"StatusText field may be supplied with a human readable string or include an empty string and the \" +\n                    \"CurrentMode field shall be set to the value of the NewMode field.\" +\n                    \"\\n\" +\n                    \"If the NewMode field is the same as the value of the CurrentMode attribute the ChangeToModeRe\" +\n                    \"\\n\" +\n                    \"sponse command shall have the Status field set to Success and the StatusText field may be supplied \" +\n                    \"with a human readable string or include an empty string.\",\n\n                xref: { document: \"cluster\", section: \"1.10.7.1.1\" }\n            })]\n        }),\n\n        Command({\n            name: \"ChangeToModeResponse\", id: 0x1, access: \"O\", conformance: \"M\", direction: \"response\",\n            details: \"This command is sent by the device on receipt of the ChangeToMode command.\",\n            xref: { document: \"cluster\", section: \"1.10.7.2\" },\n\n            children: [\n                Field({\n                    name: \"Status\", id: 0x0, type: \"status\", conformance: \"M\", constraint: \"desc\",\n                    xref: { document: \"cluster\", section: \"1.10.7.2.1\" }\n                }),\n                Field({\n                    name: \"StatusText\", id: 0x1, type: \"string\", conformance: \"[Status == Success], M\",\n                    constraint: \"max 64\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"ModeTagStruct\", type: \"struct\",\n            details: \"A Mode Tag is meant to be interpreted by the client for the purpose the cluster serves.\",\n            xref: { document: \"cluster\", section: \"1.10.5.1\" },\n\n            children: [\n                Field({\n                    name: \"MfgCode\", id: 0x0, type: \"vendor-id\", conformance: \"O\", constraint: \"desc\",\n\n                    details: \"If the MfgCode field exists, the Value field shall be in the manufacturer-specific value range (see \" +\n                        \"Section 1.10.8, \u201CMode Namespace\u201D).\" +\n                        \"\\n\" +\n                        \"This field shall indicate the manufacturer\u2019s VendorID and it shall determine the meaning of the \" +\n                        \"Value field.\" +\n                        \"\\n\" +\n                        \"The same manufacturer code and mode tag value in separate cluster instances are part of the same \" +\n                        \"namespace and have the same meaning. For example: a manufacturer tag meaning \\\"pinch\\\" can be used \" +\n                        \"both in a cluster whose purpose is to choose the amount of sugar, or in a cluster whose purpose is \" +\n                        \"to choose the amount of salt.\",\n\n                    xref: { document: \"cluster\", section: \"1.10.5.1.1\" }\n                }),\n\n                Field({\n                    name: \"Value\", id: 0x1, type: \"enum16\", conformance: \"M\",\n                    details: \"This field shall indicate the mode tag within a mode tag namespace which is either manufacturer \" +\n                        \"specific or standard.\",\n                    xref: { document: \"cluster\", section: \"1.10.5.1.2\" }\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"ModeOptionStruct\", type: \"struct\",\n            details: \"This is a struct representing a possible mode of the server.\",\n            xref: { document: \"cluster\", section: \"1.10.5.2\" },\n\n            children: [\n                Field({\n                    name: \"Label\", id: 0x0, type: \"string\", conformance: \"M\", constraint: \"max 64\", quality: \"F\",\n                    details: \"This field shall indicate readable text that describes the mode option, so that a client can \" +\n                        \"provide it to the user to indicate what this option means. This field is meant to be readable and \" +\n                        \"understandable by the user.\",\n                    xref: { document: \"cluster\", section: \"1.10.5.2.1\" }\n                }),\n\n                Field({\n                    name: \"Mode\", id: 0x1, type: \"uint8\", conformance: \"M\", quality: \"F\",\n                    details: \"This field is used to identify the mode option.\",\n                    xref: { document: \"cluster\", section: \"1.10.5.2.2\" }\n                }),\n\n                Field({\n                    name: \"ModeTags\", id: 0x2, type: \"list\", conformance: \"M\", constraint: \"max 8\", quality: \"F\",\n\n                    details: \"This field shall contain a list of tags that are associated with the mode option. This may be used \" +\n                        \"by clients to determine the full or the partial semantics of a certain mode, depending on which \" +\n                        \"tags they understand, using standard definitions and/or manufacturer specific namespace definitions.\" +\n                        \"\\n\" +\n                        \"The standard mode tags are defined in this cluster specification. For the derived cluster \" +\n                        \"instances, if the specification of the derived cluster defines a namespace, the set of standard \" +\n                        \"mode tags also includes the mode tag values from that namespace.\" +\n                        \"\\n\" +\n                        \"Mode tags can help clients look for options that meet certain criteria, render the user interface, \" +\n                        \"use\" +\n                        \"\\n\" +\n                        \"the mode in an automation, or to craft help text their voice-driven interfaces. A mode tag shall be \" +\n                        \"either a standard tag or a manufacturer specific tag, as defined in each ModeTagStruct list entry.\" +\n                        \"\\n\" +\n                        \"A mode option may have more than one mode tag. A mode option may be associated with a mixture of \" +\n                        \"standard and manufacturer specific mode tags. A mode option shall be associated with at least one \" +\n                        \"standard mode tag.\" +\n                        \"\\n\" +\n                        \"A few examples are provided below.\" +\n                        \"\\n\" +\n                        \"  \u2022 A mode named \\\"100%\\\" can have both the High (manufacturer specific) and Max (standard) mode tag. \" +\n                        \"    Clients seeking the mode for either High or Max will find the same mode in this case.\" +\n                        \"\\n\" +\n                        \"  \u2022 A mode that includes a LowEnergy tag can be displayed by the client using a widget icon that \" +\n                        \"    shows a green leaf.\" +\n                        \"\\n\" +\n                        \"  \u2022 A mode that includes a LowNoise tag may be used by the client when the user wishes for a lower \" +\n                        \"    level of audible sound, less likely to disturb the household\u2019s activities.\" +\n                        \"\\n\" +\n                        \"  \u2022 A mode that includes a LowEnergy tag (standard, defined in this cluster specification) and also \" +\n                        \"    a Delicate tag (standard, defined in the namespace of a Laundry Mode derived cluster).\" +\n                        \"\\n\" +\n                        \"  \u2022 A mode that includes both a generic Quick tag (defined here), and Vacuum and Mop tags, (defined \" +\n                        \"    in the RVC Clean cluster that is a derivation of this cluster).\",\n\n                    xref: { document: \"cluster\", section: \"1.10.5.2.3\" },\n                    children: [Field({ name: \"entry\", type: \"ModeTagStruct\" })]\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"ModeChangeStatus\", type: \"enum8\",\n\n            children: [\n                Field({\n                    name: \"Success\", id: 0x0,\n                    description: \"Switching to the mode indicated by the NewMode field is allowed and possible. The CurrentMode attribute is set to the value of the NewMode field.\",\n                    xref: { document: \"cluster\", section: \"1.10.7.2.1.2\" }\n                }),\n                Field({\n                    name: \"UnsupportedMode\", id: 0x1,\n                    description: \"The value of the NewMode field doesn\u2019t match any entries in the SupportedMode attribute.\",\n                    xref: { document: \"cluster\", section: \"1.10.7.2.1.2\" }\n                }),\n                Field({\n                    name: \"GenericFailure\", id: 0x2,\n                    description: \"Generic failure code, indicating that switching to the mode indicated by the NewMode field is not allowed or not possible.\",\n                    xref: { document: \"cluster\", section: \"1.10.7.2.1.2\" }\n                }),\n                Field({\n                    name: \"InvalidInMode\", id: 0x3,\n                    description: \"The received request cannot be handled due to the current mode of the device\",\n                    xref: { document: \"cluster\", section: \"1.10.7.2.1.2\" }\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"ModeTag\", type: \"enum16\",\n\n            children: [\n                Field({\n                    name: \"Auto\", id: 0x0,\n                    description: \"The device decides which options, features and setting values to use.\",\n                    xref: { document: \"cluster\", section: \"1.10.8\" }\n                }),\n                Field({\n                    name: \"Quick\", id: 0x1, description: \"The mode of the device is optimizing for faster completion.\",\n                    xref: { document: \"cluster\", section: \"1.10.8\" }\n                }),\n                Field({\n                    name: \"Quiet\", id: 0x2, description: \"The device is silent or barely audible while in this mode.\",\n                    xref: { document: \"cluster\", section: \"1.10.8\" }\n                }),\n                Field({\n                    name: \"LowNoise\", id: 0x3,\n                    description: \"Either the mode is inherently low noise or the device optimizes for that.\",\n                    xref: { document: \"cluster\", section: \"1.10.8\" }\n                }),\n                Field({\n                    name: \"LowEnergy\", id: 0x4,\n                    description: \"The device is optimizing for lower energy usage in this mode. Sometimes called \\\"Eco mode\\\".\",\n                    xref: { document: \"cluster\", section: \"1.10.8\" }\n                }),\n                Field({\n                    name: \"Vacation\", id: 0x5,\n                    description: \"A mode suitable for use during vacations or other extended absences.\",\n                    xref: { document: \"cluster\", section: \"1.10.8\" }\n                }),\n                Field({\n                    name: \"Min\", id: 0x6, description: \"The mode uses the lowest available setting value.\",\n                    xref: { document: \"cluster\", section: \"1.10.8\" }\n                }),\n                Field({\n                    name: \"Max\", id: 0x7, description: \"The mode uses the highest available setting value.\",\n                    xref: { document: \"cluster\", section: \"1.10.8\" }\n                }),\n                Field({\n                    name: \"Night\", id: 0x8,\n                    description: \"The mode is recommended or suitable for use during night time.\",\n                    xref: { document: \"cluster\", section: \"1.10.8\" }\n                }),\n                Field({\n                    name: \"Day\", id: 0x9, description: \"The mode is recommended or suitable for use during day time.\",\n                    xref: { document: \"cluster\", section: \"1.10.8\" }\n                })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(ModeBase);\n"],
  "mappings": "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",
  "names": []
}
