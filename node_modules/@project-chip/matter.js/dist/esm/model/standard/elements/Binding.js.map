{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/Binding.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    FieldElement as Field,\n    DatatypeElement as Datatype\n} from \"../../elements/index.js\";\n\nexport const Binding = Cluster({\n    name: \"Binding\", id: 0x1e, classification: \"endpoint\", pics: \"BIND\",\n\n    details: \"NOTE\" +\n        \"\\n\" +\n        \"This scope of this document is the Binding cluster as part of the Cluster Library. The Binding \" +\n        \"cluster is meant to replace the support from the Zigbee Device Object (ZDO) for supporting the \" +\n        \"binding table.\" +\n        \"\\n\" +\n        \"A binding represents a persistent relationship between an endpoint and one or more other local or \" +\n        \"remote endpoints. A binding does not require that the relationship exists. It is up to the node \" +\n        \"application to set up the relationship.\" +\n        \"\\n\" +\n        \"A binding is used to inform a client endpoint of one or more targets for a potential interaction. \" +\n        \"For example: a light switch that controls one or more light bulbs, needs to be told the nodes and \" +\n        \"endpoints of the bulbs, or told a group in which the bulbs are members. For example: A client that \" +\n        \"needs to subscribe to an occupancy sensor, needs to know the node and endpoint of the sensor.\" +\n        \"\\n\" +\n        \"In such cases, a binding is used to direct a local endpoint to a target. The existence of the \" +\n        \"Binding cluster on the client endpoint, allows the creation of one or more binding entries \" +\n        \"(bindings) in the Binding cluster.\" +\n        \"\\n\" +\n        \"Each binding indicates another endpoint or cluster on another endpoint. Multiple bindings are \" +\n        \"allowed, depending on the interaction.\" +\n        \"\\n\" +\n        \"A binding is either a unicast binding, where the target is a single endpoint on a single node, or a \" +\n        \"groupcast binding, where the target is a group, which may indicate multiple endpoints on multiple \" +\n        \"nodes. The binding may also target a single cluster on the target endpoint(s).\" +\n        \"\\n\" +\n        \"When a client cluster requires a target for an interaction, the Binding cluster shall exist on the \" +\n        \"same endpoint.\" +\n        \"\\n\" +\n        \"Once a binding entry is created on the Binding cluster, the client endpoint may initiate \" +\n        \"interactions to the binding target.\",\n\n    xref: { document: \"core\", section: \"9.6\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 1 }),\n\n        Attribute({\n            name: \"Binding\", id: 0x0, type: \"list\", access: \"RW F VM\", conformance: \"M\", constraint: \"desc\",\n            default: [], quality: \"N\",\n            details: \"Each entry shall represent a binding.\",\n            xref: { document: \"core\", section: \"9.6.6.1\" },\n            children: [Field({ name: \"entry\", type: \"TargetStruct\" })]\n        }),\n\n        Datatype({\n            name: \"TargetStruct\", type: \"struct\",\n            xref: { document: \"core\", section: \"9.6.5.1\" },\n\n            children: [\n                Field({\n                    name: \"Node\", id: 0x1, type: \"node-id\", access: \"F\", conformance: \"Endpoint\",\n                    details: \"This field is the remote target node ID. If the Endpoint field is present, this field shall be \" +\n                        \"present.\",\n                    xref: { document: \"core\", section: \"9.6.5.1.1\" }\n                }),\n\n                Field({\n                    name: \"Group\", id: 0x2, type: \"group-id\", access: \"F\", conformance: \"!Endpoint\",\n                    constraint: \"min 1\",\n                    details: \"This field is the target group ID that represents remote endpoints. If the Endpoint field is \" +\n                        \"present, this field shall NOT be present.\",\n                    xref: { document: \"core\", section: \"9.6.5.1.2\" }\n                }),\n\n                Field({\n                    name: \"Endpoint\", id: 0x3, type: \"endpoint-no\", access: \"F\", conformance: \"!Group\",\n                    details: \"This field is the remote endpoint that the local endpoint is bound to. If the Group field is \" +\n                        \"present, this field shall NOT be present.\",\n                    xref: { document: \"core\", section: \"9.6.5.1.3\" }\n                }),\n\n                Field({\n                    name: \"Cluster\", id: 0x4, type: \"cluster-id\", access: \"F\", conformance: \"O\",\n                    details: \"This field is the cluster ID (client & server) on the local and target endpoint(s). If this field \" +\n                        \"is present, the client cluster shall also exist on this endpoint (with this Binding cluster). If \" +\n                        \"this field is present, the target shall be this cluster on the target endpoint(s).\",\n                    xref: { document: \"core\", section: \"9.6.5.1.4\" }\n                }),\n\n                Field({ name: \"FabricIndex\", id: 0xfe, type: \"FabricIndex\" })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(Binding);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,cAAc;AACvB;AAAA,EACI,kBAAkB;AAAA,EAClB,oBAAoB;AAAA,EACpB,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,OAChB;AAEA,MAAM,UAAU,QAAQ;AAAA,EAC3B,MAAM;AAAA,EAAW,IAAI;AAAA,EAAM,gBAAgB;AAAA,EAAY,MAAM;AAAA,EAE7D,SAAS;AAAA,EAgCT,MAAM,EAAE,UAAU,QAAQ,SAAS,MAAM;AAAA,EAEzC,UAAU;AAAA,IACN,UAAU,EAAE,MAAM,mBAAmB,IAAI,OAAQ,MAAM,mBAAmB,SAAS,EAAE,CAAC;AAAA,IAEtF,UAAU;AAAA,MACN,MAAM;AAAA,MAAW,IAAI;AAAA,MAAK,MAAM;AAAA,MAAQ,QAAQ;AAAA,MAAW,aAAa;AAAA,MAAK,YAAY;AAAA,MACzF,SAAS,CAAC;AAAA,MAAG,SAAS;AAAA,MACtB,SAAS;AAAA,MACT,MAAM,EAAE,UAAU,QAAQ,SAAS,UAAU;AAAA,MAC7C,UAAU,CAAC,MAAM,EAAE,MAAM,SAAS,MAAM,eAAe,CAAC,CAAC;AAAA,IAC7D,CAAC;AAAA,IAED,SAAS;AAAA,MACL,MAAM;AAAA,MAAgB,MAAM;AAAA,MAC5B,MAAM,EAAE,UAAU,QAAQ,SAAS,UAAU;AAAA,MAE7C,UAAU;AAAA,QACN,MAAM;AAAA,UACF,MAAM;AAAA,UAAQ,IAAI;AAAA,UAAK,MAAM;AAAA,UAAW,QAAQ;AAAA,UAAK,aAAa;AAAA,UAClE,SAAS;AAAA,UAET,MAAM,EAAE,UAAU,QAAQ,SAAS,YAAY;AAAA,QACnD,CAAC;AAAA,QAED,MAAM;AAAA,UACF,MAAM;AAAA,UAAS,IAAI;AAAA,UAAK,MAAM;AAAA,UAAY,QAAQ;AAAA,UAAK,aAAa;AAAA,UACpE,YAAY;AAAA,UACZ,SAAS;AAAA,UAET,MAAM,EAAE,UAAU,QAAQ,SAAS,YAAY;AAAA,QACnD,CAAC;AAAA,QAED,MAAM;AAAA,UACF,MAAM;AAAA,UAAY,IAAI;AAAA,UAAK,MAAM;AAAA,UAAe,QAAQ;AAAA,UAAK,aAAa;AAAA,UAC1E,SAAS;AAAA,UAET,MAAM,EAAE,UAAU,QAAQ,SAAS,YAAY;AAAA,QACnD,CAAC;AAAA,QAED,MAAM;AAAA,UACF,MAAM;AAAA,UAAW,IAAI;AAAA,UAAK,MAAM;AAAA,UAAc,QAAQ;AAAA,UAAK,aAAa;AAAA,UACxE,SAAS;AAAA,UAGT,MAAM,EAAE,UAAU,QAAQ,SAAS,YAAY;AAAA,QACnD,CAAC;AAAA,QAED,MAAM,EAAE,MAAM,eAAe,IAAI,KAAM,MAAM,cAAc,CAAC;AAAA,MAChE;AAAA,IACJ,CAAC;AAAA,EACL;AACJ,CAAC;AAED,OAAO,SAAS,KAAK,OAAO;",
  "names": []
}
