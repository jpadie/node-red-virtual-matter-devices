{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/OperationalState.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport {\n    ClusterElement as Cluster,\n    AttributeElement as Attribute,\n    FieldElement as Field,\n    EventElement as Event,\n    CommandElement as Command,\n    DatatypeElement as Datatype\n} from \"../../elements/index.js\";\n\nexport const OperationalState = Cluster({\n    name: \"OperationalState\", id: 0x60, classification: \"application\", pics: \"OPSTATE\",\n\n    details: \"This cluster supports remotely monitoring and, where supported, changing the operational state of \" +\n        \"any device where a state machine is a part of the operation.\" +\n        \"\\n\" +\n        \"This cluster defines common states, scoped to this cluster (e.g. Stopped, Running, Paused, Error). \" +\n        \"A derived cluster specification may define more states scoped to the derivation. Manufacturer \" +\n        \"specific states are supported in this cluster and any derived clusters thereof. When defined in a \" +\n        \"derived instance, such states are scoped to the derivation.\" +\n        \"\\n\" +\n        \"Actual state transitions are dependent on both the implementation, and the requirements that may \" +\n        \"additionally be imposed by a derived cluster.\" +\n        \"\\n\" +\n        \"An implementation that supports remotely starting its operation can make use of this cluster\u2019s \" +\n        \"Start command to do so. A device that supports remote pause or stop of its currently selected \" +\n        \"operation can similarly make use of this cluster\u2019s Pause and Stop commands to do so. The ability to \" +\n        \"remotely pause or stop is independent of how the operation was started (for example, an operation \" +\n        \"started by using a manual button press can be stopped by using a Stop command if the device \" +\n        \"supports remotely stopping the operation).\" +\n        \"\\n\" +\n        \"Additionally, this cluster provides events for monitoring the operational state of the device.\",\n\n    xref: { document: \"cluster\", section: \"1.14\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 2 }),\n\n        Attribute({\n            name: \"PhaseList\", id: 0x0, type: \"list\", access: \"R V\", conformance: \"M\",\n            constraint: \"max 32[max 64]\", quality: \"X\",\n\n            details: \"Indicates a list of names of different phases that the device can go through for the selected \" +\n                \"function or mode. The list may not be in sequence order. For example in a washing machine this \" +\n                \"could include items such as \\\"pre-soak\\\", \\\"rinse\\\", and \\\"spin\\\". These phases are manufacturer specific \" +\n                \"and may change when a different function or mode is selected.\" +\n                \"\\n\" +\n                \"A null value indicates that the device does not present phases during its operation. When this \" +\n                \"attribute\u2019s value is null, the CurrentPhase attribute shall also be set to null.\",\n\n            xref: { document: \"cluster\", section: \"1.14.5.1\" },\n            children: [Field({ name: \"entry\", type: \"string\" })]\n        }),\n\n        Attribute({\n            name: \"CurrentPhase\", id: 0x1, type: \"uint8\", access: \"R V\", conformance: \"M\", constraint: \"desc\",\n            quality: \"X\",\n\n            details: \"This attribute represents the current phase of operation being performed by the server. This shall \" +\n                \"be the positional index representing the value from the set provided in the PhaseList Attribute, \" +\n                \"where the first item in that list is an index of 0. Thus, this attribute shall have a maximum value \" +\n                \"that is \\\"length(PhaseList) - 1\\\".\" +\n                \"\\n\" +\n                \"Null if the PhaseList attribute is null or if the PhaseList attribute is an empty list.\",\n\n            xref: { document: \"cluster\", section: \"1.14.5.2\" }\n        }),\n\n        Attribute({\n            name: \"CountdownTime\", id: 0x2, type: \"elapsed-s\", access: \"R V\", conformance: \"O\",\n            constraint: \"max 259200\", default: null, quality: \"X C\",\n\n            details: \"Indicates the estimated time left before the operation is completed, in seconds. Changes to this \" +\n                \"value shall NOT be reported in a subscription (note the C Quality). A Client implementation may \" +\n                \"periodically poll this value to ensure alignment of any local rendering of the CountdownTime with \" +\n                \"the device provided value.\" +\n                \"\\n\" +\n                \"A value of 0 means that the operation has completed.\" +\n                \"\\n\" +\n                \"When this attribute is null, that represents that there is no time currently defined until \" +\n                \"operation completion. This may happen, for example, because no operation is in progress or because \" +\n                \"the completion time is unknown.\",\n\n            xref: { document: \"cluster\", section: \"1.14.5.3\" }\n        }),\n\n        Attribute({\n            name: \"OperationalStateList\", id: 0x3, type: \"list\", access: \"R V\", conformance: \"M\",\n            constraint: \"desc\",\n\n            details: \"This attribute describes the set of possible operational states that the device exposes. An \" +\n                \"operational state is a fundamental device state such as Running or Error. Details of the phase of a \" +\n                \"device when, for example, in a state of Running are provided by the CurrentPhase attribute.\" +\n                \"\\n\" +\n                \"All devices shall, at a minimum, expose the set of states matching the commands that are also \" +\n                \"supported by the cluster instance, in addition to Error. The set of possible device states are \" +\n                \"defined in the OperationalStateEnum. A device type requiring implementation of this cluster shall \" +\n                \"define the set of states that are applicable to that specific device type.\",\n\n            xref: { document: \"cluster\", section: \"1.14.5.4\" },\n            children: [Field({ name: \"entry\", type: \"OperationalStateStruct\" })]\n        }),\n\n        Attribute({\n            name: \"OperationalState\", id: 0x4, type: \"OperationalStateEnum\", access: \"R V\", conformance: \"M\",\n            details: \"This attribute specifies the current operational state of a device. This shall be populated with a \" +\n                \"valid OperationalStateID from the set of values in the OperationalStateList Attribute.\",\n            xref: { document: \"cluster\", section: \"1.14.5.5\" }\n        }),\n\n        Attribute({\n            name: \"OperationalError\", id: 0x5, type: \"ErrorStateStruct\", access: \"R V\", conformance: \"M\",\n            constraint: \"desc\",\n            details: \"This attribute shall specify the details of any current error condition being experienced on the \" +\n                \"device when the OperationalState attribute is populated with Error. Please see ErrorStateStruct for \" +\n                \"general requirements on the population of this attribute.\" +\n                \"\\n\" +\n                \"When there is no error detected, this shall have an ErrorStateID of NoError.\",\n            xref: { document: \"cluster\", section: \"1.14.5.6\" }\n        }),\n\n        Event({\n            name: \"OperationalError\", id: 0x0, access: \"V\", conformance: \"M\", priority: \"critical\",\n            details: \"This event is generated when a reportable error condition is detected. A device that generates this \" +\n                \"event shall also set the OperationalState attribute to Error, indicating an error condition.\" +\n                \"\\n\" +\n                \"This event shall contain the following fields:\",\n            xref: { document: \"cluster\", section: \"1.14.7.1\" },\n            children: [Field({ name: \"ErrorState\", id: 0x0, type: \"ErrorStateStruct\", conformance: \"M\" })]\n        }),\n\n        Event({\n            name: \"OperationCompletion\", id: 0x1, access: \"V\", conformance: \"P, O\", priority: \"info\",\n            details: \"This event is generated when the overall operation ends, successfully or otherwise. For example, \" +\n                \"the completion of a cleaning operation in a Robot Vacuum Cleaner, or the completion of a wash cycle \" +\n                \"in a Washing Machine.\" +\n                \"\\n\" +\n                \"This event shall contain the following fields:\",\n            xref: { document: \"cluster\", section: \"1.14.7.2\" },\n\n            children: [\n                Field({\n                    name: \"CompletionErrorCode\", id: 0x0, type: \"enum8\", conformance: \"M\",\n                    details: \"This field provides an indication of the state at the end of the operation. This field shall have a \" +\n                        \"value from the ErrorStateEnum set. A value of NoError indicates success, that is, no error has been \" +\n                        \"detected.\",\n                    xref: { document: \"cluster\", section: \"1.14.7.2.1\" }\n                }),\n\n                Field({\n                    name: \"TotalOperationalTime\", id: 0x1, type: \"elapsed-s\", conformance: \"O\", quality: \"X\",\n                    details: \"The total operational time, in seconds, from when the operation was started via an initial Start \" +\n                        \"command or manual action, until the operation completed. This includes any time spent while paused. \" +\n                        \"There may be cases whereby the total operational time exceeds the maximum value that can be \" +\n                        \"conveyed by this attribute, in such instances, this attribute shall be populated with null.\",\n                    xref: { document: \"cluster\", section: \"1.14.7.2.2\" }\n                }),\n\n                Field({\n                    name: \"PausedTime\", id: 0x2, type: \"elapsed-s\", conformance: \"O\", quality: \"X\",\n                    details: \"The total time spent in the paused state, in seconds. There may be cases whereby the total paused \" +\n                        \"time exceeds the maximum value that can be conveyed by this attribute, in such instances, this \" +\n                        \"attribute shall be populated with null.\",\n                    xref: { document: \"cluster\", section: \"1.14.7.2.3\" }\n                })\n            ]\n        }),\n\n        Command({\n            name: \"Pause\", id: 0x0, access: \"O\", conformance: \"Resume, O\", direction: \"request\",\n            response: \"OperationalCommandResponse\",\n\n            details: \"This command shall be supported if the device supports remotely pausing the operation. If this \" +\n                \"command is supported, the Resume command shall also be supported.\" +\n                \"\\n\" +\n                \"On receipt of this command, the device shall pause its operation if it is possible based on the \" +\n                \"current function of the server. For example, if it is at a point where it is safe to do so and/or \" +\n                \"permitted, but can be restarted from the point at which pause occurred.\" +\n                \"\\n\" +\n                \"If this command is received when already in the Paused state the device shall respond with an \" +\n                \"OperationalCommandResponse command with an ErrorStateID of NoError but take no further action.\" +\n                \"\\n\" +\n                \"A device that receives this command in any state which is not Pause-compatible shall respond\" +\n                \"\\n\" +\n                \"with an OperationalCommandResponse command with an ErrorStateID of CommandInvalidInState and shall \" +\n                \"take no further action.\" +\n                \"\\n\" +\n                \"States are defined as Pause-compatible as follows:\" +\n                \"\\n\" +\n                \"  \u2022 For states defined in this cluster specification, in Table 3, \u201CPause Compatibility\u201D.\" +\n                \"\\n\" +\n                \"  \u2022 For states defined by derived cluster specifications, in the corresponding specifications.\" +\n                \"\\n\" +\n                \"  \u2022 For manufacturer-specific states, by the manufacturer.\" +\n                \"\\n\" +\n                \"A device that is unable to honor the Pause command for whatever reason shall respond with an \" +\n                \"OperationalCommandResponse command with an ErrorStateID of CommandInvalidInState but take no \" +\n                \"further action.\" +\n                \"\\n\" +\n                \"Otherwise, on success:\" +\n                \"\\n\" +\n                \"  \u2022 The OperationalState attribute shall be set to Paused.\" +\n                \"\\n\" +\n                \"  \u2022 The device shall respond with an OperationalCommandResponse command with an ErrorStateID of \" +\n                \"    NoError.\" +\n                \"\\n\" +\n                \"The following table defines the compatibility of this cluster\u2019s states with the Pause command.\" +\n                \"\\n\" +\n                \"### Table 3. Pause Compatibility\",\n\n            xref: { document: \"cluster\", section: \"1.14.6.1\" }\n        }),\n\n        Command({\n            name: \"Stop\", id: 0x1, access: \"O\", conformance: \"Start, O\", direction: \"request\",\n            response: \"OperationalCommandResponse\",\n\n            details: \"This command shall be supported if the device supports remotely stopping the operation.\" +\n                \"\\n\" +\n                \"On receipt of this command, the device shall stop its operation if it is at a position where it is \" +\n                \"safe to do so and/or permitted. Restart of the device following the receipt of the Stop command \" +\n                \"shall require attended operation unless remote start is allowed by the device type and any \" +\n                \"jurisdiction governing remote operation of the device.\" +\n                \"\\n\" +\n                \"If this command is received when already in the Stopped state the device shall respond with an \" +\n                \"OperationalCommandResponse command with an ErrorStateID of NoError but take no further action.\" +\n                \"\\n\" +\n                \"A device that is unable to honor the Stop command for whatever reason shall respond with an \" +\n                \"OperationalCommandResponse command with an ErrorStateID of CommandInvalidInState but take no \" +\n                \"further action.\" +\n                \"\\n\" +\n                \"Otherwise, on success:\" +\n                \"\\n\" +\n                \"  \u2022 The OperationalState attribute shall be set to Stopped.\" +\n                \"\\n\" +\n                \"  \u2022 The device shall respond with an OperationalCommandResponse command with an ErrorStateID of \" +\n                \"    NoError.\",\n\n            xref: { document: \"cluster\", section: \"1.14.6.2\" }\n        }),\n\n        Command({\n            name: \"Start\", id: 0x2, access: \"O\", conformance: \"O\", direction: \"request\",\n            response: \"OperationalCommandResponse\",\n\n            details: \"This command shall be supported if the device supports remotely starting the operation. If this \" +\n                \"command is supported, the 'Stop command shall also be supported.\" +\n                \"\\n\" +\n                \"On receipt of this command, the device shall start its operation if it is safe to do so and the \" +\n                \"device is in an operational state from which it can be started. There may be either regulatory or \" +\n                \"manufacturer-imposed safety and security requirements that first necessitate some specific action \" +\n                \"at the device before a Start command can be honored. In such instances, a device shall respond with \" +\n                \"a status code of CommandInvalidInState if a Start command is received prior to the required on- \" +\n                \"device action.\" +\n                \"\\n\" +\n                \"If this command is received when already in the Running state the device shall respond with an \" +\n                \"OperationalCommandResponse command with an ErrorStateID of NoError but take no further action.\" +\n                \"\\n\" +\n                \"A device that is unable to honor the Start command for whatever reason shall respond with an \" +\n                \"OperationalCommandResponse command with an ErrorStateID of UnableToStartOrResume but take no \" +\n                \"further action.\" +\n                \"\\n\" +\n                \"Otherwise, on success:\" +\n                \"\\n\" +\n                \"  \u2022 The OperationalState attribute shall be set to Running.\" +\n                \"\\n\" +\n                \"  \u2022 The device shall respond with an OperationalCommandResponse command with an ErrorStateID of \" +\n                \"    NoError.\",\n\n            xref: { document: \"cluster\", section: \"1.14.6.3\" }\n        }),\n\n        Command({\n            name: \"Resume\", id: 0x3, access: \"O\", conformance: \"Pause, O\", direction: \"request\",\n            response: \"OperationalCommandResponse\",\n\n            details: \"This command shall be supported if the device supports remotely resuming the operation. If this \" +\n                \"command is supported, the Pause command shall also be supported.\" +\n                \"\\n\" +\n                \"On receipt of this command, the device shall resume its operation from the point it was at when it \" +\n                \"received the Pause command, or from the point when it was paused by means outside of this cluster \" +\n                \"(for example by manual button press).\" +\n                \"\\n\" +\n                \"If this command is received when already in the Running state the device shall respond with an \" +\n                \"OperationalCommandResponse command with an ErrorStateID of NoError but take no further action.\" +\n                \"\\n\" +\n                \"A device that receives this command in any state which is not Resume-compatible shall respond with \" +\n                \"an OperationalCommandResponse command with an ErrorStateID of CommandInvalidInState and shall take \" +\n                \"no further action.\" +\n                \"\\n\" +\n                \"States are defined as Resume-compatible as follows:\" +\n                \"\\n\" +\n                \"  \u2022 For states defined in this cluster specification, in Table 4, \u201CResume Compatibility\u201D.\" +\n                \"\\n\" +\n                \"  \u2022 For states defined by derived cluster specifications, in the corresponding specifications.\" +\n                \"\\n\" +\n                \"  \u2022 For manufacturer-specific states, by the manufacturer.\" +\n                \"\\n\" +\n                \"The following table defines the compatibility of this cluster\u2019s states with the Resume command.\" +\n                \"\\n\" +\n                \"### Table 4. Resume Compatibility\" +\n                \"\\n\" +\n                \"A device that is unable to honor the Resume command for any other reason shall respond with an \" +\n                \"OperationalCommandResponse command with an ErrorStateID of UnableToStartOrResume but take no \" +\n                \"further action.\" +\n                \"\\n\" +\n                \"Otherwise, on success:\" +\n                \"\\n\" +\n                \"  \u2022 The OperationalState attribute shall be set to the most recent non-Error operational state \" +\n                \"    prior to entering the Paused state.\" +\n                \"\\n\" +\n                \"  \u2022 The device shall respond with an OperationalCommandResponse command with an ErrorStateID of \" +\n                \"    NoError.\",\n\n            xref: { document: \"cluster\", section: \"1.14.6.4\" }\n        }),\n\n        Command({\n            name: \"OperationalCommandResponse\", id: 0x4, access: \"O\",\n            conformance: \"Pause | Stop | Start | Resume\", direction: \"response\",\n\n            details: \"This command shall be supported by an implementation if any of the other commands defined by this \" +\n                \"cluster are supported (i.e. listed in the AcceptedCommandList global attribute). This command shall \" +\n                \"also be supported by an implementation of a derived cluster as a response to any commands that may \" +\n                \"be additionally defined therein.\" +\n                \"\\n\" +\n                \"This command shall be generated in response to any of the Start, Stop, Pause, or Resume commands.\",\n\n            xref: { document: \"cluster\", section: \"1.14.6.5\" },\n\n            children: [Field({\n                name: \"CommandResponseState\", id: 0x0, type: \"ErrorStateStruct\", conformance: \"M\",\n                details: \"This shall indicate the success or otherwise of the attempted command invocation. On a successful \" +\n                    \"invocation of the attempted command, the ErrorStateID shall be populated with NoError. Please see \" +\n                    \"the individual command sections for additional specific requirements on population.\",\n                xref: { document: \"cluster\", section: \"1.14.6.5.1\" }\n            })]\n        }),\n\n        Datatype({\n            name: \"OperationalStateEnum\", type: \"enum8\",\n\n            details: \"This type defines the set of known operational state values, and is derived from enum8. The \" +\n                \"following table defines the applicable ranges for values that are defined within this type. All \" +\n                \"values that are undefined shall be treated as reserved. As shown by the table, states that may be \" +\n                \"specific to a certain Device Type or other modality shall be defined in a derived cluster of this \" +\n                \"cluster.\" +\n                \"\\n\" +\n                \"The derived cluster-specific state definitions shall NOT duplicate any general state definitions. \" +\n                \"That is, a derived cluster specification of this cluster cannot define states with the same \" +\n                \"semantics as the general states defined below.\" +\n                \"\\n\" +\n                \"A manufacturer-specific state definition shall NOT duplicate the general state definitions or \" +\n                \"derived cluster state definitions. That is, a manufacturer-defined state defined for this cluster \" +\n                \"or a derived cluster thereof cannot define a state with the same semantics as the general states \" +\n                \"defined below or states defined in a derived cluster. Such manufacturer-specific state definitions \" +\n                \"shall be scoped in the context of the Vendor ID present in the Basic Information cluster.\" +\n                \"\\n\" +\n                \"The following table defines the generally applicable states.\",\n\n            xref: { document: \"cluster\", section: \"1.14.4.1\" }\n        }),\n\n        Datatype({\n            name: \"OperationalStateStruct\", type: \"struct\",\n            details: \"The OperationalStateStruct is used to indicate a possible state of the device.\",\n            xref: { document: \"cluster\", section: \"1.14.4.2\" },\n\n            children: [\n                Field({\n                    name: \"OperationalStateId\", id: 0x0, type: \"OperationalStateEnum\", conformance: \"M\", default: 0,\n                    details: \"This shall be populated with a value from the OperationalStateEnum.\",\n                    xref: { document: \"cluster\", section: \"1.14.4.2.1\" }\n                }),\n\n                Field({\n                    name: \"OperationalStateLabel\", id: 0x1, type: \"string\", conformance: \"desc\", constraint: \"max 64\",\n                    details: \"This field shall be present if the OperationalStateID is from the set reserved for Manufacturer \" +\n                        \"Specific States, otherwise it shall NOT be present. If present, this shall contain a human-readable \" +\n                        \"description of the operational state.\",\n                    xref: { document: \"cluster\", section: \"1.14.4.2.2\" }\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"ErrorStateEnum\", type: \"enum8\",\n\n            details: \"This type defines the set of known operational error values, and is derived from enum8. The \" +\n                \"following table defines the applicable ranges for values that are defined within this type. All \" +\n                \"values that\" +\n                \"\\n\" +\n                \"are undefined shall be treated as reserved. As shown by the table, errors that may be specific to a \" +\n                \"certain Device Type or other modality shall be defined in a derived cluster of this cluster.\" +\n                \"\\n\" +\n                \"The derived cluster-specific error definitions shall NOT duplicate the general error definitions. \" +\n                \"That is, a derived cluster specification of this cluster cannot define errors with the same \" +\n                \"semantics as the general errors defined below.\" +\n                \"\\n\" +\n                \"The manufacturer-specific error definitions shall NOT duplicate the general error definitions or \" +\n                \"derived cluster-specific error definitions. That is, a manufacturer-defined error defined for this \" +\n                \"cluster or a derived cluster thereof cannot define errors with the same semantics as the general \" +\n                \"errors defined below or errors defined in a derived cluster. Such manufacturer-specific error \" +\n                \"definitions shall be scoped in the context of the Vendor ID present in the Basic Information \" +\n                \"cluster.\" +\n                \"\\n\" +\n                \"The set of ErrorStateID field values defined in each of the generic or derived Operational State \" +\n                \"cluster specifications is called ErrorState.\",\n\n            xref: { document: \"cluster\", section: \"1.14.4.3\" }\n        }),\n\n        Datatype({\n            name: \"GeneralErrorStateEnum\", type: \"enum8\",\n            details: \"The following table defines the generally applicable ErrorState values.\",\n            xref: { document: \"cluster\", section: \"1.14.4.3.1\" },\n\n            children: [\n                Field({ name: \"NoError\", id: 0x0, conformance: \"M\", description: \"The device is not in an error state\" }),\n                Field({\n                    name: \"UnableToStartOrResume\", id: 0x1, conformance: \"M\",\n                    description: \"The device is unable to start or resume operation\"\n                }),\n                Field({\n                    name: \"UnableToCompleteOperation\", id: 0x2, conformance: \"M\",\n                    description: \"The device was unable to complete the current operation\"\n                }),\n                Field({\n                    name: \"CommandInvalidInState\", id: 0x3, conformance: \"M\",\n                    description: \"The device cannot process the command in its current state\"\n                })\n            ]\n        }),\n\n        Datatype({\n            name: \"ErrorStateStruct\", type: \"struct\",\n            xref: { document: \"cluster\", section: \"1.14.4.4\" },\n\n            children: [\n                Field({\n                    name: \"ErrorStateID\", id: 0x0, type: \"ErrorStateEnum\", conformance: \"M\", default: 0,\n                    details: \"This shall be populated with a value from the ErrorStateEnum.\",\n                    xref: { document: \"cluster\", section: \"1.14.4.4.1\" }\n                }),\n\n                Field({\n                    name: \"ErrorStateLabel\", id: 0x1, type: \"string\", conformance: \"desc\", constraint: \"max 64\",\n                    details: \"This field shall be present if the ErrorStateID is from the set reserved for Manufacturer Specific \" +\n                        \"Errors, otherwise it shall NOT be present. If present, this shall contain a human-readable \" +\n                        \"description of the ErrorStateID; e.g. for a manufacturer specific ErrorStateID of \\\"0x80\\\" the \" +\n                        \"ErrorStateLabel may contain \\\"My special error\\\".\",\n                    xref: { document: \"cluster\", section: \"1.14.4.4.2\" }\n                }),\n\n                Field({\n                    name: \"ErrorStateDetails\", id: 0x2, type: \"string\", conformance: \"O\", constraint: \"max 64\",\n                    details: \"This shall be a human-readable string that provides details about the error condition. As an \" +\n                        \"example, if the ErrorStateID indicates that the device is a Robotic Vacuum that is stuck, the \" +\n                        \"ErrorStateDetails contains \\\"left wheel blocked\\\".\",\n                    xref: { document: \"cluster\", section: \"1.14.4.4.3\" }\n                })\n            ]\n        })\n    ]\n});\n\nMatter.children.push(OperationalState);\n"],
  "mappings": "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",
  "names": []
}
