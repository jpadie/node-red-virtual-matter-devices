{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/ipv6pre.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport { DatatypeElement as Datatype } from \"../../elements/index.js\";\n\nexport const ipv6Pre = Datatype({\n    name: \"ipv6pre\", type: \"octstr\", description: \"IPv6 Prefix\", isSeed: true,\n\n    details: \"The IPv6 prefix data type is derived from an octet string. The octets shall be encoded\" +\n        \"\\n\" +\n        \"  \u2022 The first octet shall encode the prefix length, in bits, in the range of 0 to 128.\" +\n        \"\\n\" +\n        \"    \u25E6 A value of 0 indicates an absent/invalid prefix.\" +\n        \"\\n\" +\n        \"  \u2022 The subsequent octets shall encode the contiguous leftmost bits of the prefix, in network byte \" +\n        \"    order, with left justification, such that the first bit of the prefix is in the most \" +\n        \"    significant bit of the first octet. Encoding SHOULD use the least number of bytes to encode the \" +\n        \"    prefix but may include unused trailing zeroes.\" +\n        \"\\n\" +\n        \"Examples of encoding:\" +\n        \"\\n\" +\n        \"  \u2022 Preferred minimal encoding: Prefix 2001:0DB8:0:CD30::/60 \u2192 9 octets \u2192 3C20010DB80000CD30\" +\n        \"\\n\" +\n        \"  \u2022 Preferred minimal encoding: Prefix 2001:0DB8:BB00::/40 \u2192 6 octets \u2192 2820010DB8BB\" +\n        \"\\n\" +\n        \"  \u2022 Allowed non-minimal encoding: Prefix 2001:0DB8:BB00::/40 \u2192 7 octets \u2192 2820010DB8BB00\",\n\n    xref: { document: \"core\", section: \"7.18.2.40\" }\n});\n\nMatter.children.push(ipv6Pre);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,cAAc;AACvB,SAAS,mBAAmB,gBAAgB;AAErC,MAAM,UAAU,SAAS;AAAA,EAC5B,MAAM;AAAA,EAAW,MAAM;AAAA,EAAU,aAAa;AAAA,EAAe,QAAQ;AAAA,EAErE,SAAS;AAAA,EAmBT,MAAM,EAAE,UAAU,QAAQ,SAAS,YAAY;AACnD,CAAC;AAED,OAAO,SAAS,KAAK,OAAO;",
  "names": []
}
