{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/WakeOnLan.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport { ClusterElement as Cluster, AttributeElement as Attribute } from \"../../elements/index.js\";\n\nexport const WakeOnLan = Cluster({\n    name: \"WakeOnLan\", id: 0x503, classification: \"application\", pics: \"WAKEONLAN\",\n\n    details: \"This cluster provides an interface for managing low power mode on a device that supports the Wake \" +\n        \"On LAN or Wake On Wireless LAN (WLAN) protocol (see [Wake On LAN]).\" +\n        \"\\n\" +\n        \"This cluster would be supported on IP devices that have a low power mode AND support the ability to \" +\n        \"be woken up using the Wake on LAN or Wake on WLAN protocol. This cluster provides the device MAC \" +\n        \"address which is a required input to the Wake on LAN protocol. Besides the MAC address, this \" +\n        \"cluster provides an optional link-local IPv6 address which is useful to support \\\"Wake on Direct \" +\n        \"Packet\\\" used by some Ethernet and Wi-Fi devices.\" +\n        \"\\n\" +\n        \"Acting on the MAC address or link-local IPv6 address information does require the caller to be in \" +\n        \"the same broadcast domain as the destination. To wake the destination up, the caller sends a \" +\n        \"multicast-based magic UDP packet that contains destination\u2019s MAC address in the UDP payload to \" +\n        \"FF02::1, the IPv6 all-nodes link-local multicast group address. If the optional link-local address \" +\n        \"is provided by the destination through this cluster, the caller also sends the magic UDP packet in \" +\n        \"unicast to that link-local address. This unicast-based method is particularly useful for Wi-Fi \" +\n        \"devices, since due to lack of MAC layer retransmission mechanism, multicast over Wi-Fi is not as \" +\n        \"reliable as unicast. If a device provides the link-local address in this cluster, its Ethernet \" +\n        \"controller or Wi-Fi radio shall respond to the IPv6 neighbor solicitation message for the \" +\n        \"link-local address without the need to wake host CPU up. In order to receive the magic or neighbor \" +\n        \"solicitation packets in multicast, the Wi-Fi devices must support Group Temporal Key (GTK) rekey \" +\n        \"operation in low power mode.\" +\n        \"\\n\" +\n        \"Most devices automatically enter low power mode based upon inactivity.\" +\n        \"\\n\" +\n        \"The cluster server for Wake on LAN or Wake on WLAN is implemented by a device that supports the \" +\n        \"Wake on LAN/WLAN protocol, such as a TV, Set-top Box, or Smart Speaker.\",\n\n    xref: { document: \"cluster\", section: \"1.12\" },\n\n    children: [\n        Attribute({ name: \"ClusterRevision\", id: 0xfffd, type: \"ClusterRevision\", default: 1 }),\n\n        Attribute({\n            name: \"MacAddress\", id: 0x0, type: \"string\", access: \"R V\", conformance: \"O\", constraint: \"max 12\",\n            quality: \"F\",\n            details: \"Indicates the current MAC address of the device. Only 48-bit MAC Addresses shall be used for this \" +\n                \"attribute as required by the Wake on LAN protocol.\" +\n                \"\\n\" +\n                \"Format of this attribute shall be an upper-case hex-encoded string representing the hex address, \" +\n                \"like 12345678ABCD.\",\n            xref: { document: \"cluster\", section: \"1.12.4.1\" }\n        }),\n\n        Attribute({\n            name: \"LinkLocalAddress\", id: 0x1, type: \"ipv6adr\", access: \"R V\", conformance: \"O\",\n            constraint: \"desc\", quality: \"F\",\n\n            details: \"Indicates the current link-local address of the device. Only 128-bit IPv6 link- local addresses \" +\n                \"shall be used for this attribute.\" +\n                \"\\n\" +\n                \"NOTE\" +\n                \"\\n\" +\n                \"Some companies may consider MAC Address to be protected data subject to PII handling considerations \" +\n                \"and will therefore choose not to include it or read it. The MAC Address can often be determined \" +\n                \"using ARP in IPv4 or NDP in IPv6.\",\n\n            xref: { document: \"cluster\", section: \"1.12.4.2\" }\n        })\n    ]\n});\n\nMatter.children.push(WakeOnLan);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,cAAc;AACvB,SAAS,kBAAkB,SAAS,oBAAoB,iBAAiB;AAElE,MAAM,YAAY,QAAQ;AAAA,EAC7B,MAAM;AAAA,EAAa,IAAI;AAAA,EAAO,gBAAgB;AAAA,EAAe,MAAM;AAAA,EAEnE,SAAS;AAAA,EA2BT,MAAM,EAAE,UAAU,WAAW,SAAS,OAAO;AAAA,EAE7C,UAAU;AAAA,IACN,UAAU,EAAE,MAAM,mBAAmB,IAAI,OAAQ,MAAM,mBAAmB,SAAS,EAAE,CAAC;AAAA,IAEtF,UAAU;AAAA,MACN,MAAM;AAAA,MAAc,IAAI;AAAA,MAAK,MAAM;AAAA,MAAU,QAAQ;AAAA,MAAO,aAAa;AAAA,MAAK,YAAY;AAAA,MAC1F,SAAS;AAAA,MACT,SAAS;AAAA,MAKT,MAAM,EAAE,UAAU,WAAW,SAAS,WAAW;AAAA,IACrD,CAAC;AAAA,IAED,UAAU;AAAA,MACN,MAAM;AAAA,MAAoB,IAAI;AAAA,MAAK,MAAM;AAAA,MAAW,QAAQ;AAAA,MAAO,aAAa;AAAA,MAChF,YAAY;AAAA,MAAQ,SAAS;AAAA,MAE7B,SAAS;AAAA,MAST,MAAM,EAAE,UAAU,WAAW,SAAS,WAAW;AAAA,IACrD,CAAC;AAAA,EACL;AACJ,CAAC;AAED,OAAO,SAAS,KAAK,SAAS;",
  "names": []
}
