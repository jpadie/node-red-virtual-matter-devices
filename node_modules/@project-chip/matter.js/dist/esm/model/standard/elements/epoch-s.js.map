{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/epoch-s.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport { DatatypeElement as Datatype } from \"../../elements/index.js\";\n\nexport const epochS = Datatype({\n    name: \"epoch-s\", type: \"uint32\", description: \"Epoch Time in seconds\", isSeed: true,\n\n    details: \"This type has the same semantics as Epoch Time in Microseconds, except that:\" +\n        \"\\n\" +\n        \"  \u2022 the value encodes an offset in seconds, rather than microseconds;\" +\n        \"\\n\" +\n        \"  \u2022 the value is encoded as an unsigned 32-bit scalar, rather than 64-bit.\" +\n        \"\\n\" +\n        \"This type is employed where compactness of representation is important and where the resolution of \" +\n        \"seconds is still satisfactory.\",\n\n    xref: { document: \"core\", section: \"7.18.2.6\" }\n});\n\nMatter.children.push(epochS);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,cAAc;AACvB,SAAS,mBAAmB,gBAAgB;AAErC,MAAM,SAAS,SAAS;AAAA,EAC3B,MAAM;AAAA,EAAW,MAAM;AAAA,EAAU,aAAa;AAAA,EAAyB,QAAQ;AAAA,EAE/E,SAAS;AAAA,EAST,MAAM,EAAE,UAAU,QAAQ,SAAS,WAAW;AAClD,CAAC;AAED,OAAO,SAAS,KAAK,MAAM;",
  "names": []
}
