{
  "version": 3,
  "sources": ["../../../../../src/model/standard/elements/semtag.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { Matter } from \"../Matter.js\";\nimport { DatatypeElement as Datatype, FieldElement as Field } from \"../../elements/index.js\";\n\nexport const semtag = Datatype({\n    name: \"semtag\", type: \"struct\", description: \"Semantic Tag\", isSeed: true,\n    details: \"This data type shall be represented by the following structure:\",\n    xref: { document: \"core\", section: \"7.18.2.42\" },\n\n    children: [\n        Field({\n            name: \"MfgCode\", id: 0x0, type: \"vendor-id\", conformance: \"M\", default: null, quality: \"X\",\n\n            details: \"If the MfgCode field is not null, it shall be the Vendor ID of the manufacturer who has defined a \" +\n                \"certain namespace and the NamespaceID field shall be the ID of a namespace defined by the \" +\n                \"manufacturer identified in the MfgCode field.\" +\n                \"\\n\" +\n                \"If a manufacturer specific Tag field is indicated in a list of SemanticTagStruct entries, the list \" +\n                \"shall include at least one standard tag which is not from any manufacturer\u2019s namespace. A standard \" +\n                \"tag is a tag from a common namespace, a derived cluster namespace, or an applicable device-specific \" +\n                \"namespace.\" +\n                \"\\n\" +\n                \"If MfgCode is null, the NamespaceID field shall indicate a standard namespace.\",\n\n            xref: { document: \"core\", section: \"7.18.2.42.1\" }\n        }),\n\n        Field({\n            name: \"NamespaceId\", id: 0x1, type: \"namespace\", conformance: \"M\",\n            details: \"The NamespaceID field shall identify a namespace.\" +\n                \"\\n\" +\n                \"The common and device-specific semantic tag namespaces are listed in StandardNamespaces.\",\n            xref: { document: \"core\", section: \"7.18.2.42.2\" }\n        }),\n\n        Field({\n            name: \"Tag\", id: 0x2, type: \"tag\", conformance: \"M\",\n            details: \"The Tag field shall be the ID of a semantic tag located within the namespace indicated by \" +\n                \"NamespaceID.\" +\n                \"\\n\" +\n                \"A device may expose tags from the common or device-specific namespaces and from \" +\n                \"manufacturer-specific namespaces in a single TagList.\",\n            xref: { document: \"core\", section: \"7.18.2.42.3\" }\n        }),\n\n        Field({\n            name: \"Label\", id: 0x3, type: \"string\", conformance: \"O\", constraint: \"max 64\", default: null,\n            quality: \"X\",\n\n            details: \"The Label field, if present, shall contain human-readable text suitable for display on a client. \" +\n                \"The content of the Label field is defined by the manufacturer.\" +\n                \"\\n\" +\n                \"This field shall be present when the MfgCode is not null. This field SHOULD NOT be used if the Tag \" +\n                \"is from a standard namespace, unless the Tag requires further qualification. For example: A Tag \" +\n                \"that has the meaning of \\\"room\\\" in a location namespace, would require the a label string to qualify \" +\n                \"the type of room, such as \\\"1\\\", \\\"2b\\\", \\\"Bathroom\\\", etc.\",\n\n            xref: { document: \"core\", section: \"7.18.2.42.4\" }\n        })\n    ]\n});\n\nMatter.children.push(semtag);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,cAAc;AACvB,SAAS,mBAAmB,UAAU,gBAAgB,aAAa;AAE5D,MAAM,SAAS,SAAS;AAAA,EAC3B,MAAM;AAAA,EAAU,MAAM;AAAA,EAAU,aAAa;AAAA,EAAgB,QAAQ;AAAA,EACrE,SAAS;AAAA,EACT,MAAM,EAAE,UAAU,QAAQ,SAAS,YAAY;AAAA,EAE/C,UAAU;AAAA,IACN,MAAM;AAAA,MACF,MAAM;AAAA,MAAW,IAAI;AAAA,MAAK,MAAM;AAAA,MAAa,aAAa;AAAA,MAAK,SAAS;AAAA,MAAM,SAAS;AAAA,MAEvF,SAAS;AAAA,MAWT,MAAM,EAAE,UAAU,QAAQ,SAAS,cAAc;AAAA,IACrD,CAAC;AAAA,IAED,MAAM;AAAA,MACF,MAAM;AAAA,MAAe,IAAI;AAAA,MAAK,MAAM;AAAA,MAAa,aAAa;AAAA,MAC9D,SAAS;AAAA,MAGT,MAAM,EAAE,UAAU,QAAQ,SAAS,cAAc;AAAA,IACrD,CAAC;AAAA,IAED,MAAM;AAAA,MACF,MAAM;AAAA,MAAO,IAAI;AAAA,MAAK,MAAM;AAAA,MAAO,aAAa;AAAA,MAChD,SAAS;AAAA,MAKT,MAAM,EAAE,UAAU,QAAQ,SAAS,cAAc;AAAA,IACrD,CAAC;AAAA,IAED,MAAM;AAAA,MACF,MAAM;AAAA,MAAS,IAAI;AAAA,MAAK,MAAM;AAAA,MAAU,aAAa;AAAA,MAAK,YAAY;AAAA,MAAU,SAAS;AAAA,MACzF,SAAS;AAAA,MAET,SAAS;AAAA,MAQT,MAAM,EAAE,UAAU,QAAQ,SAAS,cAAc;AAAA,IACrD,CAAC;AAAA,EACL;AACJ,CAAC;AAED,OAAO,SAAS,KAAK,MAAM;",
  "names": []
}
