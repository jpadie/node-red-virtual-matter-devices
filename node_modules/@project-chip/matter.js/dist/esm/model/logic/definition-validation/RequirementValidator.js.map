{
  "version": 3,
  "sources": ["../../../../../src/model/logic/definition-validation/RequirementValidator.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ElementTag } from \"../../definitions/index.js\";\nimport { RequirementElement } from \"../../elements/index.js\";\nimport { FieldModel, RequirementModel } from \"../../models/index.js\";\nimport { ModelValidator } from \"./ModelValidator.js\";\n\nModelValidator.validators[RequirementElement.Tag] = class RequirementValidator extends (\n    ModelValidator\n)<RequirementModel> {\n    override validate() {\n        this.validateStructure(false, RequirementModel, RequirementModel, FieldModel);\n        this.validateProperty({\n            name: \"element\",\n            type: RequirementElement.ElementType,\n            required: true,\n        });\n\n        const parentTag = this.model.parent?.tag;\n        if (parentTag) {\n            switch (this.model.element) {\n                case RequirementElement.ElementType.ClientCluster:\n                case RequirementElement.ElementType.ServerCluster:\n                    if (parentTag !== ElementTag.DeviceType) {\n                        this.error(\n                            \"ILLEGAL_REQUIREMENT_PARENT\",\n                            `Requirement type ${this.model.type} must be parented by device type`,\n                        );\n                    }\n                    break;\n\n                case RequirementElement.ElementType.Feature:\n                case RequirementElement.ElementType.Attribute:\n                case RequirementElement.ElementType.Command:\n                case RequirementElement.ElementType.Event:\n                    if (parentTag !== ElementTag.Requirement) {\n                        this.error(\n                            \"ILLEGAL_REQUIREMENT_PARENT\",\n                            `Requirement type ${this.model.type} must be parented by cluster requirement`,\n                        );\n                    }\n                    break;\n            }\n        }\n\n        super.validate();\n    }\n};\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,SAAS,kBAAkB;AAC3B,SAAS,0BAA0B;AACnC,SAAS,YAAY,wBAAwB;AAC7C,SAAS,sBAAsB;AAE/B,eAAe,WAAW,mBAAmB,GAAG,IAAI,MAAM,6BACtD,eACgB;AAAA,EACP,WAAW;AAChB,SAAK,kBAAkB,OAAO,kBAAkB,kBAAkB,UAAU;AAC5E,SAAK,iBAAiB;AAAA,MAClB,MAAM;AAAA,MACN,MAAM,mBAAmB;AAAA,MACzB,UAAU;AAAA,IACd,CAAC;AAED,UAAM,YAAY,KAAK,MAAM,QAAQ;AACrC,QAAI,WAAW;AACX,cAAQ,KAAK,MAAM,SAAS;AAAA,QACxB,KAAK,mBAAmB,YAAY;AAAA,QACpC,KAAK,mBAAmB,YAAY;AAChC,cAAI,cAAc,WAAW,YAAY;AACrC,iBAAK;AAAA,cACD;AAAA,cACA,oBAAoB,KAAK,MAAM,IAAI;AAAA,YACvC;AAAA,UACJ;AACA;AAAA,QAEJ,KAAK,mBAAmB,YAAY;AAAA,QACpC,KAAK,mBAAmB,YAAY;AAAA,QACpC,KAAK,mBAAmB,YAAY;AAAA,QACpC,KAAK,mBAAmB,YAAY;AAChC,cAAI,cAAc,WAAW,aAAa;AACtC,iBAAK;AAAA,cACD;AAAA,cACA,oBAAoB,KAAK,MAAM,IAAI;AAAA,YACvC;AAAA,UACJ;AACA;AAAA,MACR;AAAA,IACJ;AAEA,UAAM,SAAS;AAAA,EACnB;AACJ;",
  "names": []
}
