{
  "version": 3,
  "sources": ["../../../../src/model/models/RequirementModel.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Access, Aspect, Conformance, Constraint, Quality } from \"../aspects/index.js\";\nimport { FieldElement, RequirementElement } from \"../elements/index.js\";\nimport { Aspects } from \"./Aspects.js\";\nimport { Children } from \"./Children.js\";\nimport { FieldModel } from \"./FieldModel.js\";\nimport { Model } from \"./Model.js\";\n\nconst CONSTRAINT: unique symbol = Symbol(\"constraint\");\nconst CONFORMANCE: unique symbol = Symbol(\"conformance\");\nconst ACCESS: unique symbol = Symbol(\"access\");\nconst QUALITY: unique symbol = Symbol(\"quality\");\n\nexport class RequirementModel extends Model implements RequirementElement {\n    override tag: RequirementElement.Tag = RequirementElement.Tag;\n    declare element: RequirementElement.ElementType;\n    declare default?: any;\n\n    override get discriminator() {\n        return this.element;\n    }\n\n    override get children(): Children<RequirementModel | FieldModel, RequirementElement | FieldElement> {\n        return super.children as any;\n    }\n\n    override set children(children: (RequirementModel | FieldModel | RequirementElement | FieldElement)[]) {\n        super.children = children;\n    }\n\n    get access(): Access {\n        return Aspects.getAspect(this, ACCESS, Access);\n    }\n    set access(definition: Access | Access.Definition) {\n        Aspects.setAspect(this, ACCESS, Access, definition);\n    }\n\n    get constraint(): Constraint {\n        return Aspects.getAspect(this, CONSTRAINT, Constraint);\n    }\n    set constraint(definition: Constraint | Constraint.Definition) {\n        Aspects.setAspect(this, CONSTRAINT, Constraint, definition);\n    }\n\n    get conformance(): Conformance {\n        return Aspects.getAspect(this, CONFORMANCE, Conformance);\n    }\n    set conformance(definition: Conformance | Conformance.Definition) {\n        Aspects.setAspect(this, CONFORMANCE, Conformance, definition);\n    }\n\n    get quality(): Quality {\n        return Aspects.getAspect(this, QUALITY, Quality);\n    }\n    set quality(definition: Quality | Quality.Definition) {\n        Aspects.setAspect(this, QUALITY, Quality, definition);\n    }\n\n    static {\n        Model.types[RequirementElement.Tag] = this;\n    }\n\n    get requirements() {\n        return this.all(RequirementModel);\n    }\n\n    override valueOf() {\n        const result = super.valueOf() as any;\n        for (const k of [\"conformance\", \"access\", \"quality\", \"constraint\"]) {\n            const v = (this as any)[k] as Aspect<any>;\n            if (v && !v.empty) {\n                result[k] = v.valueOf();\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Is the element mandatory?\n     */\n    get isMandatory() {\n        return this.conformance.isMandatory;\n    }\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,SAAS,QAAgB,aAAa,YAAY,eAAe;AACjE,SAAuB,0BAA0B;AACjD,SAAS,eAAe;AAGxB,SAAS,aAAa;AAEtB,MAAM,aAA4B,OAAO,YAAY;AACrD,MAAM,cAA6B,OAAO,aAAa;AACvD,MAAM,SAAwB,OAAO,QAAQ;AAC7C,MAAM,UAAyB,OAAO,SAAS;AAExC,MAAM,yBAAyB,MAAoC;AAAA,EAC7D,MAA8B,mBAAmB;AAAA,EAI1D,IAAa,gBAAgB;AACzB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,IAAa,WAAuF;AAChG,WAAO,MAAM;AAAA,EACjB;AAAA,EAEA,IAAa,SAAS,UAAiF;AACnG,UAAM,WAAW;AAAA,EACrB;AAAA,EAEA,IAAI,SAAiB;AACjB,WAAO,QAAQ,UAAU,MAAM,QAAQ,MAAM;AAAA,EACjD;AAAA,EACA,IAAI,OAAO,YAAwC;AAC/C,YAAQ,UAAU,MAAM,QAAQ,QAAQ,UAAU;AAAA,EACtD;AAAA,EAEA,IAAI,aAAyB;AACzB,WAAO,QAAQ,UAAU,MAAM,YAAY,UAAU;AAAA,EACzD;AAAA,EACA,IAAI,WAAW,YAAgD;AAC3D,YAAQ,UAAU,MAAM,YAAY,YAAY,UAAU;AAAA,EAC9D;AAAA,EAEA,IAAI,cAA2B;AAC3B,WAAO,QAAQ,UAAU,MAAM,aAAa,WAAW;AAAA,EAC3D;AAAA,EACA,IAAI,YAAY,YAAkD;AAC9D,YAAQ,UAAU,MAAM,aAAa,aAAa,UAAU;AAAA,EAChE;AAAA,EAEA,IAAI,UAAmB;AACnB,WAAO,QAAQ,UAAU,MAAM,SAAS,OAAO;AAAA,EACnD;AAAA,EACA,IAAI,QAAQ,YAA0C;AAClD,YAAQ,UAAU,MAAM,SAAS,SAAS,UAAU;AAAA,EACxD;AAAA,EAEA,OAAO;AACH,UAAM,MAAM,mBAAmB,GAAG,IAAI;AAAA,EAC1C;AAAA,EAEA,IAAI,eAAe;AACf,WAAO,KAAK,IAAI,gBAAgB;AAAA,EACpC;AAAA,EAES,UAAU;AACf,UAAM,SAAS,MAAM,QAAQ;AAC7B,eAAW,KAAK,CAAC,eAAe,UAAU,WAAW,YAAY,GAAG;AAChE,YAAM,IAAK,KAAa,CAAC;AACzB,UAAI,KAAK,CAAC,EAAE,OAAO;AACf,eAAO,CAAC,IAAI,EAAE,QAAQ;AAAA,MAC1B;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,cAAc;AACd,WAAO,KAAK,YAAY;AAAA,EAC5B;AACJ;",
  "names": []
}
