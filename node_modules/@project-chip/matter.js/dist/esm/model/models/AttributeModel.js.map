{
  "version": 3,
  "sources": ["../../../../src/model/models/AttributeModel.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Mei } from \"../../datatype/ManufacturerExtensibleIdentifier.js\";\nimport { AttributeElement } from \"../elements/index.js\";\nimport { Model } from \"./Model.js\";\nimport { PropertyModel } from \"./PropertyModel.js\";\n\n// Full set of global IDs per core spec 1.3\nexport const GLOBAL_IDS = new Set([0xfffd, 0xfffc, 0xfffb, 0xfffa, 0xfff9, 0xfff8]);\n\nexport class AttributeModel extends PropertyModel implements AttributeElement {\n    override tag: AttributeElement.Tag = AttributeElement.Tag;\n    declare id: Mei;\n\n    get readable() {\n        return this.effectiveAccess.readable;\n    }\n\n    get writable() {\n        return !this.fixed && this.effectiveAccess.writable;\n    }\n\n    get fabricScoped() {\n        return !!this.effectiveAccess.fabric;\n    }\n\n    get fixed() {\n        return !!this.effectiveQuality.fixed;\n    }\n\n    get changesOmitted() {\n        return this.effectiveQuality.changesOmitted;\n    }\n\n    constructor(definition: AttributeElement.Properties) {\n        super(definition);\n    }\n\n    static {\n        Model.types[AttributeElement.Tag] = this;\n    }\n\n    static isGlobal(model: Model) {\n        return model instanceof AttributeModel && GLOBAL_IDS.has(model.id);\n    }\n\n    static get globalIds() {\n        return GLOBAL_IDS;\n    }\n\n    static Tag = AttributeElement.Tag;\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,SAAS,wBAAwB;AACjC,SAAS,aAAa;AACtB,SAAS,qBAAqB;AAGvB,MAAM,aAAa,oBAAI,IAAI,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,KAAM,CAAC;AAE3E,MAAM,uBAAuB,cAA0C;AAAA,EACjE,MAA4B,iBAAiB;AAAA,EAGtD,IAAI,WAAW;AACX,WAAO,KAAK,gBAAgB;AAAA,EAChC;AAAA,EAEA,IAAI,WAAW;AACX,WAAO,CAAC,KAAK,SAAS,KAAK,gBAAgB;AAAA,EAC/C;AAAA,EAEA,IAAI,eAAe;AACf,WAAO,CAAC,CAAC,KAAK,gBAAgB;AAAA,EAClC;AAAA,EAEA,IAAI,QAAQ;AACR,WAAO,CAAC,CAAC,KAAK,iBAAiB;AAAA,EACnC;AAAA,EAEA,IAAI,iBAAiB;AACjB,WAAO,KAAK,iBAAiB;AAAA,EACjC;AAAA,EAEA,YAAY,YAAyC;AACjD,UAAM,UAAU;AAAA,EACpB;AAAA,EAEA,OAAO;AACH,UAAM,MAAM,iBAAiB,GAAG,IAAI;AAAA,EACxC;AAAA,EAEA,OAAO,SAAS,OAAc;AAC1B,WAAO,iBAAiB,kBAAkB,WAAW,IAAI,MAAM,EAAE;AAAA,EACrE;AAAA,EAEA,WAAW,YAAY;AACnB,WAAO;AAAA,EACX;AAAA,EAEA,OAAO,MAAM,iBAAiB;AAClC;",
  "names": []
}
