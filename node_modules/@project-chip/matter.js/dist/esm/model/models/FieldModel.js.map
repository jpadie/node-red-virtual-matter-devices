{
  "version": 3,
  "sources": ["../../../../src/model/models/FieldModel.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Mei } from \"../../datatype/ManufacturerExtensibleIdentifier.js\";\nimport { Metatype } from \"../definitions/index.js\";\nimport { FieldElement } from \"../elements/index.js\";\nimport { Model } from \"./Model.js\";\nimport { PropertyModel } from \"./PropertyModel.js\";\nimport { ValueModel } from \"./ValueModel.js\";\n\nexport class FieldModel extends PropertyModel implements FieldElement {\n    override tag: FieldElement.Tag = FieldElement.Tag;\n    declare id?: Mei;\n\n    constructor(definition: FieldElement.Properties) {\n        super(definition);\n    }\n\n    get fabricSensitive() {\n        return this.effectiveAccess.fabricSensitive;\n    }\n\n    /**\n     * Fields may omit their ID.  In this case we use their index within the parent as the ID.\n     */\n    override get effectiveId() {\n        if (this.id !== undefined) {\n            return this.id;\n        }\n        if (this.parent instanceof ValueModel) {\n            const index = this.parent.children.indexOf(this);\n            if (index !== -1) {\n                return index;\n            }\n        }\n    }\n\n    /**\n     * The key for bitmap fields is actually the constraint which defines the bit range.  All other datatypes use the\n     * default key.\n     */\n    override get key() {\n        if (this.parent instanceof ValueModel && this.parent.effectiveMetatype === Metatype.bitmap) {\n            return this.constraint.toString();\n        }\n        return super.key;\n    }\n\n    static {\n        Model.types[FieldElement.Tag] = this;\n    }\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,SAAS,gBAAgB;AACzB,SAAS,oBAAoB;AAC7B,SAAS,aAAa;AACtB,SAAS,qBAAqB;AAC9B,SAAS,kBAAkB;AAEpB,MAAM,mBAAmB,cAAsC;AAAA,EACzD,MAAwB,aAAa;AAAA,EAG9C,YAAY,YAAqC;AAC7C,UAAM,UAAU;AAAA,EACpB;AAAA,EAEA,IAAI,kBAAkB;AAClB,WAAO,KAAK,gBAAgB;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAa,cAAc;AACvB,QAAI,KAAK,OAAO,QAAW;AACvB,aAAO,KAAK;AAAA,IAChB;AACA,QAAI,KAAK,kBAAkB,YAAY;AACnC,YAAM,QAAQ,KAAK,OAAO,SAAS,QAAQ,IAAI;AAC/C,UAAI,UAAU,IAAI;AACd,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAa,MAAM;AACf,QAAI,KAAK,kBAAkB,cAAc,KAAK,OAAO,sBAAsB,SAAS,QAAQ;AACxF,aAAO,KAAK,WAAW,SAAS;AAAA,IACpC;AACA,WAAO,MAAM;AAAA,EACjB;AAAA,EAEA,OAAO;AACH,UAAM,MAAM,aAAa,GAAG,IAAI;AAAA,EACpC;AACJ;",
  "names": []
}
