{
  "version": 3,
  "sources": ["../../../../src/model/elements/DeviceTypeElement.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Mei } from \"../../datatype/ManufacturerExtensibleIdentifier.js\";\nimport { ElementTag } from \"../definitions/index.js\";\nimport { BaseElement } from \"./BaseElement.js\";\nimport { FieldElement } from \"./FieldElement.js\";\nimport { RequirementElement } from \"./RequirementElement.js\";\n\n/**\n * Details on a specific device as defined in the Matter specification.\n *\n * TODO - extract/merge DeviceTypes.ts?\n */\nexport interface DeviceTypeElement extends BaseElement {\n    id?: Mei;\n    tag: `${DeviceTypeElement.Tag}`;\n    classification: `${DeviceTypeElement.Classification}`;\n    category?: string;\n    children?: (RequirementElement | FieldElement)[];\n}\n\nexport function DeviceTypeElement(definition: DeviceTypeElement.Properties) {\n    return BaseElement(DeviceTypeElement.Tag, definition) as DeviceTypeElement;\n}\n\nexport namespace DeviceTypeElement {\n    export type Tag = ElementTag.DeviceType;\n    export const Tag = ElementTag.DeviceType;\n    export type Properties = BaseElement.Properties<DeviceTypeElement>;\n\n    export enum Classification {\n        Base = \"base\",\n        Node = \"node\",\n        Utility = \"utility\",\n        Simple = \"simple\",\n        Dynamic = \"dynamic\",\n    }\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,SAAS,kBAAkB;AAC3B,SAAS,mBAAmB;AAiBrB,SAAS,kBAAkB,YAA0C;AACxE,SAAO,YAAY,kBAAkB,KAAK,UAAU;AACxD;AAAA,CAEO,CAAUA,uBAAV;AAEI,EAAMA,mBAAA,MAAM,WAAW;AAGvB,MAAK;AAAL,IAAKC,oBAAL;AACH,IAAAA,gBAAA,UAAO;AACP,IAAAA,gBAAA,UAAO;AACP,IAAAA,gBAAA,aAAU;AACV,IAAAA,gBAAA,YAAS;AACT,IAAAA,gBAAA,aAAU;AAAA,KALF,iBAAAD,mBAAA,mBAAAA,mBAAA;AAAA,GALC;",
  "names": ["DeviceTypeElement", "Classification"]
}
