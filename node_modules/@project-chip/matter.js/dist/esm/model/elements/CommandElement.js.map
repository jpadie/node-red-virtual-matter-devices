{
  "version": 3,
  "sources": ["../../../../src/model/elements/CommandElement.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Mei } from \"../../datatype/ManufacturerExtensibleIdentifier.js\";\nimport { ElementTag } from \"../definitions/index.js\";\nimport { BaseElement } from \"./BaseElement.js\";\nimport { ValueElement } from \"./ValueElement.js\";\n\n/**\n * A command describes a remote procedure call.\n */\nexport interface CommandElement extends ValueElement {\n    id: Mei;\n    tag: `${CommandElement.Tag}`;\n\n    // Direction is required but we handling missing direction in validation\n    direction?: `${CommandElement.Direction}`;\n\n    response?: string;\n}\n\nexport function CommandElement(definition: CommandElement.Properties) {\n    return ValueElement(CommandElement.Tag, definition) as CommandElement;\n}\n\nexport namespace CommandElement {\n    export type Tag = ElementTag.Command;\n    export const Tag = ElementTag.Command;\n    export type Properties = BaseElement.Properties<CommandElement>;\n\n    /**\n     * Indicates request vs response command.\n     */\n    export enum Direction {\n        Request = \"request\",\n        Response = \"response\",\n    }\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,SAAS,kBAAkB;AAE3B,SAAS,oBAAoB;AAetB,SAAS,eAAe,YAAuC;AAClE,SAAO,aAAa,eAAe,KAAK,UAAU;AACtD;AAAA,CAEO,CAAUA,oBAAV;AAEI,EAAMA,gBAAA,MAAM,WAAW;AAMvB,MAAK;AAAL,IAAKC,eAAL;AACH,IAAAA,WAAA,aAAU;AACV,IAAAA,WAAA,cAAW;AAAA,KAFH,YAAAD,gBAAA,cAAAA,gBAAA;AAAA,GARC;",
  "names": ["CommandElement", "Direction"]
}
