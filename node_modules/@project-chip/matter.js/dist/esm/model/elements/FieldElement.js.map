{
  "version": 3,
  "sources": ["../../../../src/model/elements/FieldElement.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Mei } from \"../../datatype/ManufacturerExtensibleIdentifier.js\";\nimport { ElementTag } from \"../definitions/index.js\";\nimport { BaseElement } from \"./BaseElement.js\";\nimport { ValueElement } from \"./ValueElement.js\";\n\n/**\n * A field element defines a field in a list, struct, enum or bitmap.\n */\nexport interface FieldElement extends ValueElement {\n    tag: `${FieldElement.Tag}`;\n\n    /**\n     * Fields must have IDs but they may be implied by the field's position\n     * in its parent.\n     */\n    id?: Mei;\n\n    children?: FieldElement[];\n}\n\nexport function FieldElement(definition: FieldElement.Properties) {\n    return ValueElement(FieldElement.Tag, definition) as FieldElement;\n}\n\nexport namespace FieldElement {\n    export type Tag = ElementTag.Field;\n    export const Tag = ElementTag.Field;\n    export type Properties = BaseElement.Properties<FieldElement>;\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,SAAS,kBAAkB;AAE3B,SAAS,oBAAoB;AAiBtB,SAAS,aAAa,YAAqC;AAC9D,SAAO,aAAa,aAAa,KAAK,UAAU;AACpD;AAAA,CAEO,CAAUA,kBAAV;AAEI,EAAMA,cAAA,MAAM,WAAW;AAAA,GAFjB;",
  "names": ["FieldElement"]
}
