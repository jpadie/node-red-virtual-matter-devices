{
  "version": 3,
  "sources": ["../../../../src/model/elements/ClusterElement.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Mei } from \"../../datatype/ManufacturerExtensibleIdentifier.js\";\nimport { Quality } from \"../aspects/Quality.js\";\nimport { ElementTag } from \"../definitions/index.js\";\nimport { AttributeElement } from \"./AttributeElement.js\";\nimport { BaseElement } from \"./BaseElement.js\";\nimport { CommandElement } from \"./CommandElement.js\";\nimport { DatatypeElement } from \"./DatatypeElement.js\";\nimport { EventElement } from \"./EventElement.js\";\nimport { FieldElement } from \"./FieldElement.js\";\n\n/**\n * A cluster describes a set of related functionality.\n */\nexport interface ClusterElement extends BaseElement {\n    id?: Mei;\n\n    tag: `${ClusterElement.Tag}`;\n\n    /**\n     * The cluster's PICS code.\n     */\n    pics?: string;\n\n    /**\n     * Other qualities.\n     *\n     * Quality flags allowed for clusters are \"I\" (singleton) and \"K\" (diagnostics).  The spec as of 1.3 does not appear\n     * to use the singleton flag, however.\n     */\n    quality?: Quality.Definition;\n\n    /**\n     * Encodes both classification and scope from the Matter specification.\n     */\n    classification?: `${ClusterElement.Classification}`;\n\n    children?: ClusterElement.Child[];\n}\n\nexport function ClusterElement(definition: ClusterElement.Properties) {\n    if (definition.quality === \"\") {\n        delete definition.quality;\n    }\n\n    return BaseElement(ClusterElement.Tag, definition) as ClusterElement;\n}\n\nexport namespace ClusterElement {\n    export type Tag = ElementTag.Cluster;\n    export const Tag = ElementTag.Cluster;\n    export type Properties = BaseElement.Properties<ClusterElement>;\n    export type Child = DatatypeElement | AttributeElement | CommandElement | EventElement | FieldElement;\n\n    export enum Classification {\n        EndpointUtility = \"endpoint\",\n        NodeUtility = \"node\",\n        Application = \"application\",\n    }\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,kBAAkB;AAE3B,SAAS,mBAAmB;AAmCrB,SAAS,eAAe,YAAuC;AAClE,MAAI,WAAW,YAAY,IAAI;AAC3B,WAAO,WAAW;AAAA,EACtB;AAEA,SAAO,YAAY,eAAe,KAAK,UAAU;AACrD;AAAA,CAEO,CAAUA,oBAAV;AAEI,EAAMA,gBAAA,MAAM,WAAW;AAIvB,MAAK;AAAL,IAAKC,oBAAL;AACH,IAAAA,gBAAA,qBAAkB;AAClB,IAAAA,gBAAA,iBAAc;AACd,IAAAA,gBAAA,iBAAc;AAAA,KAHN,iBAAAD,gBAAA,mBAAAA,gBAAA;AAAA,GANC;",
  "names": ["ClusterElement", "Classification"]
}
