{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/PressureSensorDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport {\n    PressureMeasurementServer as BasePressureMeasurementServer\n} from \"../../../behavior/definitions/pressure-measurement/PressureMeasurementServer.js\";\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * A Pressure Sensor device measures and reports the pressure of a fluid.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 7.5\n */\nexport interface PressureSensorDevice extends Identity<typeof PressureSensorDeviceDefinition> {}\n\nexport namespace PressureSensorRequirements {\n    /**\n     * The PressureMeasurement cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link PressureMeasurementServer} for convenience.\n     */\n    export const PressureMeasurementServer = BasePressureMeasurementServer;\n\n    /**\n     * The Identify cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = { mandatory: { PressureMeasurement: PressureMeasurementServer, Identify: IdentifyServer } };\n}\n\nexport const PressureSensorDeviceDefinition = MutableEndpoint({\n    name: \"PressureSensor\",\n    deviceType: 0x305,\n    deviceRevision: 2,\n    requirements: PressureSensorRequirements,\n    behaviors: SupportedBehaviors(\n        PressureSensorRequirements.server.mandatory.PressureMeasurement,\n        PressureSensorRequirements.server.mandatory.Identify\n    )\n});\n\nexport const PressureSensorDevice: PressureSensorDevice = PressureSensorDeviceDefinition;\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA,EACI,6BAA6B;AAAA,OAC1B;AACP,SAAS,kBAAkB,0BAA0B;AACrD,SAAS,uBAAuB;AAChC,SAAS,0BAA0B;AAU5B,IAAU;AAAA,CAAV,CAAUA,gCAAV;AAMI,EAAMA,4BAAA,4BAA4B;AAOlC,EAAMA,4BAAA,iBAAiB;AAKvB,EAAMA,4BAAA,SAAS,EAAE,WAAW,EAAE,qBAAqBA,4BAAA,2BAA2B,UAAUA,4BAAA,eAAe,EAAE;AAAA,GAlBnG;AAqBV,MAAM,iCAAiC,gBAAgB;AAAA,EAC1D,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,WAAW;AAAA,IACP,2BAA2B,OAAO,UAAU;AAAA,IAC5C,2BAA2B,OAAO,UAAU;AAAA,EAChD;AACJ,CAAC;AAEM,MAAM,uBAA6C;",
  "names": ["PressureSensorRequirements"]
}
