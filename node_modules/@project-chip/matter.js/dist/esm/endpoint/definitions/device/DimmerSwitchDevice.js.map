{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/DimmerSwitchDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport { IdentifyBehavior as BaseIdentifyBehavior } from \"../../../behavior/definitions/identify/IdentifyBehavior.js\";\nimport { OnOffBehavior as BaseOnOffBehavior } from \"../../../behavior/definitions/on-off/OnOffBehavior.js\";\nimport {\n    LevelControlBehavior as BaseLevelControlBehavior\n} from \"../../../behavior/definitions/level-control/LevelControlBehavior.js\";\nimport { GroupsBehavior as BaseGroupsBehavior } from \"../../../behavior/definitions/groups/GroupsBehavior.js\";\nimport {\n    ScenesManagementBehavior as BaseScenesManagementBehavior\n} from \"../../../behavior/definitions/scenes-management/ScenesManagementBehavior.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * A Dimmer Switch is a controller device that, when bound to a lighting device such as a Dimmable Light, is capable of\n * being used to switch the device on or off and adjust the intensity of the light being emitted.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 6.2\n */\nexport interface DimmerSwitchDevice extends Identity<typeof DimmerSwitchDeviceDefinition> {}\n\nexport namespace DimmerSwitchRequirements {\n    /**\n     * The Identify cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * The Identify cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyBehavior} for convenience.\n     */\n    export const IdentifyBehavior = BaseIdentifyBehavior;\n\n    /**\n     * The OnOff cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link OnOffBehavior} for convenience.\n     */\n    export const OnOffBehavior = BaseOnOffBehavior;\n\n    /**\n     * The LevelControl cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link LevelControlBehavior} for convenience.\n     */\n    export const LevelControlBehavior = BaseLevelControlBehavior;\n\n    /**\n     * The Groups cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link GroupsBehavior} for convenience.\n     */\n    export const GroupsBehavior = BaseGroupsBehavior;\n\n    /**\n     * The ScenesManagement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ScenesManagementBehavior} for convenience.\n     */\n    export const ScenesManagementBehavior = BaseScenesManagementBehavior;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = { mandatory: { Identify: IdentifyServer } };\n\n    /**\n     * A definition for each client cluster supported by the endpoint per the Matter specification.\n     */\n    export const client = {\n        mandatory: { Identify: IdentifyBehavior, OnOff: OnOffBehavior, LevelControl: LevelControlBehavior },\n        optional: { Groups: GroupsBehavior, ScenesManagement: ScenesManagementBehavior }\n    };\n}\n\nexport const DimmerSwitchDeviceDefinition = MutableEndpoint({\n    name: \"DimmerSwitch\",\n    deviceType: 0x104,\n    deviceRevision: 3,\n    requirements: DimmerSwitchRequirements,\n    behaviors: SupportedBehaviors(DimmerSwitchRequirements.server.mandatory.Identify)\n});\n\nexport const DimmerSwitchDevice: DimmerSwitchDevice = DimmerSwitchDeviceDefinition;\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,kBAAkB,0BAA0B;AACrD,SAAS,oBAAoB,4BAA4B;AACzD,SAAS,iBAAiB,yBAAyB;AACnD;AAAA,EACI,wBAAwB;AAAA,OACrB;AACP,SAAS,kBAAkB,0BAA0B;AACrD;AAAA,EACI,4BAA4B;AAAA,OACzB;AACP,SAAS,uBAAuB;AAChC,SAAS,0BAA0B;AAW5B,IAAU;AAAA,CAAV,CAAUA,8BAAV;AAMI,EAAMA,0BAAA,iBAAiB;AAOvB,EAAMA,0BAAA,mBAAmB;AAOzB,EAAMA,0BAAA,gBAAgB;AAOtB,EAAMA,0BAAA,uBAAuB;AAO7B,EAAMA,0BAAA,iBAAiB;AAOvB,EAAMA,0BAAA,2BAA2B;AAKjC,EAAMA,0BAAA,SAAS,EAAE,WAAW,EAAE,UAAUA,0BAAA,eAAe,EAAE;AAKzD,EAAMA,0BAAA,SAAS;AAAA,IAClB,WAAW,EAAE,UAAUA,0BAAA,kBAAkB,OAAOA,0BAAA,eAAe,cAAcA,0BAAA,qBAAqB;AAAA,IAClG,UAAU,EAAE,QAAQA,0BAAA,gBAAgB,kBAAkBA,0BAAA,yBAAyB;AAAA,EACnF;AAAA,GAtDa;AAyDV,MAAM,+BAA+B,gBAAgB;AAAA,EACxD,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,WAAW,mBAAmB,yBAAyB,OAAO,UAAU,QAAQ;AACpF,CAAC;AAEM,MAAM,qBAAyC;",
  "names": ["DimmerSwitchRequirements"]
}
