{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/BasicVideoPlayerDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { OnOffServer as BaseOnOffServer } from \"../../../behavior/definitions/on-off/OnOffServer.js\";\nimport {\n    MediaPlaybackServer as BaseMediaPlaybackServer\n} from \"../../../behavior/definitions/media-playback/MediaPlaybackServer.js\";\nimport {\n    KeypadInputServer as BaseKeypadInputServer\n} from \"../../../behavior/definitions/keypad-input/KeypadInputServer.js\";\nimport { WakeOnLanServer as BaseWakeOnLanServer } from \"../../../behavior/definitions/wake-on-lan/WakeOnLanServer.js\";\nimport { ChannelServer as BaseChannelServer } from \"../../../behavior/definitions/channel/ChannelServer.js\";\nimport {\n    TargetNavigatorServer as BaseTargetNavigatorServer\n} from \"../../../behavior/definitions/target-navigator/TargetNavigatorServer.js\";\nimport { MediaInputServer as BaseMediaInputServer } from \"../../../behavior/definitions/media-input/MediaInputServer.js\";\nimport { LowPowerServer as BaseLowPowerServer } from \"../../../behavior/definitions/low-power/LowPowerServer.js\";\nimport {\n    AudioOutputServer as BaseAudioOutputServer\n} from \"../../../behavior/definitions/audio-output/AudioOutputServer.js\";\nimport {\n    ContentControlServer as BaseContentControlServer\n} from \"../../../behavior/definitions/content-control/ContentControlServer.js\";\nimport { MessagesServer as BaseMessagesServer } from \"../../../behavior/definitions/messages/MessagesServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * This defines conformance to the Basic Video Player device type.\n *\n * A Video Player (either Basic or Casting) represents a device that is able to play media to a physical output or to a\n * display screen which is part of the device.\n *\n * A Basic Video Player has playback controls (play, pause, etc.) and keypad remote controls (up, down, number input),\n * but is not able to launch content and is not a content app platform (the Casting Video Player device type is used\n * for these functions).\n *\n * For example, a Basic Video Player can be a traditional TV device a physical media playback device such as a DVD\n * Player, or a device that provides input to another device like a TV or computer monitor.\n *\n * Please see Video Player Architecture for additional Basic Video Player requirements relating to Video Player device\n * endpoint composition, commissioning, feature representation in clusters, and UI context.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 10.2\n */\nexport interface BasicVideoPlayerDevice extends Identity<typeof BasicVideoPlayerDeviceDefinition> {}\n\nexport namespace BasicVideoPlayerRequirements {\n    /**\n     * The OnOff cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link OnOffServer} for convenience.\n     */\n    export const OnOffServer = BaseOnOffServer;\n\n    /**\n     * The MediaPlayback cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link MediaPlaybackServer} for convenience.\n     */\n    export const MediaPlaybackServer = BaseMediaPlaybackServer;\n\n    /**\n     * The KeypadInput cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link KeypadInputServer} for convenience.\n     */\n    export const KeypadInputServer = BaseKeypadInputServer;\n\n    /**\n     * The WakeOnLan cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link WakeOnLanServer} for convenience.\n     */\n    export const WakeOnLanServer = BaseWakeOnLanServer;\n\n    /**\n     * The Channel cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ChannelServer} for convenience.\n     */\n    export const ChannelServer = BaseChannelServer;\n\n    /**\n     * The TargetNavigator cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link TargetNavigatorServer} for convenience.\n     */\n    export const TargetNavigatorServer = BaseTargetNavigatorServer;\n\n    /**\n     * The MediaInput cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link MediaInputServer} for convenience.\n     */\n    export const MediaInputServer = BaseMediaInputServer;\n\n    /**\n     * The LowPower cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link LowPowerServer} for convenience.\n     */\n    export const LowPowerServer = BaseLowPowerServer;\n\n    /**\n     * The AudioOutput cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link AudioOutputServer} for convenience.\n     */\n    export const AudioOutputServer = BaseAudioOutputServer;\n\n    /**\n     * The ContentControl cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ContentControlServer} for convenience.\n     */\n    export const ContentControlServer = BaseContentControlServer;\n\n    /**\n     * The Messages cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link MessagesServer} for convenience.\n     */\n    export const MessagesServer = BaseMessagesServer;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = {\n        mandatory: { OnOff: OnOffServer, MediaPlayback: MediaPlaybackServer, KeypadInput: KeypadInputServer },\n\n        optional: {\n            WakeOnLan: WakeOnLanServer,\n            Channel: ChannelServer,\n            TargetNavigator: TargetNavigatorServer,\n            MediaInput: MediaInputServer,\n            LowPower: LowPowerServer,\n            AudioOutput: AudioOutputServer,\n            ContentControl: ContentControlServer,\n            Messages: MessagesServer\n        }\n    };\n}\n\nexport const BasicVideoPlayerDeviceDefinition = MutableEndpoint({\n    name: \"BasicVideoPlayer\",\n    deviceType: 0x28,\n    deviceRevision: 2,\n    requirements: BasicVideoPlayerRequirements,\n    behaviors: SupportedBehaviors(\n        BasicVideoPlayerRequirements.server.mandatory.OnOff,\n        BasicVideoPlayerRequirements.server.mandatory.MediaPlayback,\n        BasicVideoPlayerRequirements.server.mandatory.KeypadInput\n    )\n});\n\nexport const BasicVideoPlayerDevice: BasicVideoPlayerDevice = BasicVideoPlayerDeviceDefinition;\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,eAAe,uBAAuB;AAC/C;AAAA,EACI,uBAAuB;AAAA,OACpB;AACP;AAAA,EACI,qBAAqB;AAAA,OAClB;AACP,SAAS,mBAAmB,2BAA2B;AACvD,SAAS,iBAAiB,yBAAyB;AACnD;AAAA,EACI,yBAAyB;AAAA,OACtB;AACP,SAAS,oBAAoB,4BAA4B;AACzD,SAAS,kBAAkB,0BAA0B;AACrD;AAAA,EACI,qBAAqB;AAAA,OAClB;AACP;AAAA,EACI,wBAAwB;AAAA,OACrB;AACP,SAAS,kBAAkB,0BAA0B;AACrD,SAAS,uBAAuB;AAChC,SAAS,0BAA0B;AAuB5B,IAAU;AAAA,CAAV,CAAUA,kCAAV;AAMI,EAAMA,8BAAA,cAAc;AAOpB,EAAMA,8BAAA,sBAAsB;AAO5B,EAAMA,8BAAA,oBAAoB;AAO1B,EAAMA,8BAAA,kBAAkB;AAOxB,EAAMA,8BAAA,gBAAgB;AAOtB,EAAMA,8BAAA,wBAAwB;AAO9B,EAAMA,8BAAA,mBAAmB;AAOzB,EAAMA,8BAAA,iBAAiB;AAOvB,EAAMA,8BAAA,oBAAoB;AAO1B,EAAMA,8BAAA,uBAAuB;AAO7B,EAAMA,8BAAA,iBAAiB;AAKvB,EAAMA,8BAAA,SAAS;AAAA,IAClB,WAAW,EAAE,OAAOA,8BAAA,aAAa,eAAeA,8BAAA,qBAAqB,aAAaA,8BAAA,kBAAkB;AAAA,IAEpG,UAAU;AAAA,MACN,WAAWA,8BAAA;AAAA,MACX,SAASA,8BAAA;AAAA,MACT,iBAAiBA,8BAAA;AAAA,MACjB,YAAYA,8BAAA;AAAA,MACZ,UAAUA,8BAAA;AAAA,MACV,aAAaA,8BAAA;AAAA,MACb,gBAAgBA,8BAAA;AAAA,MAChB,UAAUA,8BAAA;AAAA,IACd;AAAA,EACJ;AAAA,GA9Fa;AAiGV,MAAM,mCAAmC,gBAAgB;AAAA,EAC5D,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,WAAW;AAAA,IACP,6BAA6B,OAAO,UAAU;AAAA,IAC9C,6BAA6B,OAAO,UAAU;AAAA,IAC9C,6BAA6B,OAAO,UAAU;AAAA,EAClD;AACJ,CAAC;AAEM,MAAM,yBAAiD;",
  "names": ["BasicVideoPlayerRequirements"]
}
