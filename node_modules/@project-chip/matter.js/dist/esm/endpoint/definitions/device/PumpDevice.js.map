{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/PumpDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { OnOffServer as BaseOnOffServer } from \"../../../behavior/definitions/on-off/OnOffServer.js\";\nimport {\n    PumpConfigurationAndControlServer as BasePumpConfigurationAndControlServer\n} from \"../../../behavior/definitions/pump-configuration-and-control/PumpConfigurationAndControlServer.js\";\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport {\n    LevelControlServer as BaseLevelControlServer\n} from \"../../../behavior/definitions/level-control/LevelControlServer.js\";\nimport { GroupsServer as BaseGroupsServer } from \"../../../behavior/definitions/groups/GroupsServer.js\";\nimport {\n    ScenesManagementServer as BaseScenesManagementServer\n} from \"../../../behavior/definitions/scenes-management/ScenesManagementServer.js\";\nimport {\n    TemperatureMeasurementServer as BaseTemperatureMeasurementServer\n} from \"../../../behavior/definitions/temperature-measurement/TemperatureMeasurementServer.js\";\nimport {\n    PressureMeasurementServer as BasePressureMeasurementServer\n} from \"../../../behavior/definitions/pressure-measurement/PressureMeasurementServer.js\";\nimport {\n    FlowMeasurementServer as BaseFlowMeasurementServer\n} from \"../../../behavior/definitions/flow-measurement/FlowMeasurementServer.js\";\nimport {\n    TemperatureMeasurementBehavior as BaseTemperatureMeasurementBehavior\n} from \"../../../behavior/definitions/temperature-measurement/TemperatureMeasurementBehavior.js\";\nimport {\n    PressureMeasurementBehavior as BasePressureMeasurementBehavior\n} from \"../../../behavior/definitions/pressure-measurement/PressureMeasurementBehavior.js\";\nimport {\n    FlowMeasurementBehavior as BaseFlowMeasurementBehavior\n} from \"../../../behavior/definitions/flow-measurement/FlowMeasurementBehavior.js\";\nimport {\n    OccupancySensingBehavior as BaseOccupancySensingBehavior\n} from \"../../../behavior/definitions/occupancy-sensing/OccupancySensingBehavior.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * A Pump device is a pump that may have variable speed. It may have optional built-in sensors and a regulation\n * mechanism. It is typically used for pumping fluids like water.\n *\n * PumpDevice requires PumpConfigurationAndControl cluster but PumpConfigurationAndControl is not added by default\n * because you must select the features your device supports. You can add manually using PumpDevice.with().\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 5.3\n */\nexport interface PumpDevice extends Identity<typeof PumpDeviceDefinition> {}\n\nexport namespace PumpRequirements {\n    /**\n     * The OnOff cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link OnOffServer} for convenience.\n     */\n    export const OnOffServer = BaseOnOffServer;\n\n    /**\n     * The PumpConfigurationAndControl cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link PumpConfigurationAndControlServer} for convenience.\n     */\n    export const PumpConfigurationAndControlServer = BasePumpConfigurationAndControlServer;\n\n    /**\n     * The Identify cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * The LevelControl cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link LevelControlServer} for convenience.\n     */\n    export const LevelControlServer = BaseLevelControlServer;\n\n    /**\n     * The Groups cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link GroupsServer} for convenience.\n     */\n    export const GroupsServer = BaseGroupsServer;\n\n    /**\n     * The ScenesManagement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ScenesManagementServer} for convenience.\n     */\n    export const ScenesManagementServer = BaseScenesManagementServer;\n\n    /**\n     * The TemperatureMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link TemperatureMeasurementServer} for convenience.\n     */\n    export const TemperatureMeasurementServer = BaseTemperatureMeasurementServer;\n\n    /**\n     * The PressureMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link PressureMeasurementServer} for convenience.\n     */\n    export const PressureMeasurementServer = BasePressureMeasurementServer;\n\n    /**\n     * The FlowMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link FlowMeasurementServer} for convenience.\n     */\n    export const FlowMeasurementServer = BaseFlowMeasurementServer;\n\n    /**\n     * The TemperatureMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link TemperatureMeasurementBehavior} for convenience.\n     */\n    export const TemperatureMeasurementBehavior = BaseTemperatureMeasurementBehavior;\n\n    /**\n     * The PressureMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link PressureMeasurementBehavior} for convenience.\n     */\n    export const PressureMeasurementBehavior = BasePressureMeasurementBehavior;\n\n    /**\n     * The FlowMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link FlowMeasurementBehavior} for convenience.\n     */\n    export const FlowMeasurementBehavior = BaseFlowMeasurementBehavior;\n\n    /**\n     * The OccupancySensing cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link OccupancySensingBehavior} for convenience.\n     */\n    export const OccupancySensingBehavior = BaseOccupancySensingBehavior;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = {\n        mandatory: {\n            OnOff: OnOffServer,\n            PumpConfigurationAndControl: PumpConfigurationAndControlServer,\n            Identify: IdentifyServer\n        },\n\n        optional: {\n            LevelControl: LevelControlServer,\n            Groups: GroupsServer,\n            ScenesManagement: ScenesManagementServer,\n            TemperatureMeasurement: TemperatureMeasurementServer,\n            PressureMeasurement: PressureMeasurementServer,\n            FlowMeasurement: FlowMeasurementServer\n        }\n    };\n\n    /**\n     * A definition for each client cluster supported by the endpoint per the Matter specification.\n     */\n    export const client = {\n        optional: {\n            TemperatureMeasurement: TemperatureMeasurementBehavior,\n            PressureMeasurement: PressureMeasurementBehavior,\n            FlowMeasurement: FlowMeasurementBehavior,\n            OccupancySensing: OccupancySensingBehavior\n        },\n\n        mandatory: {}\n    };\n}\n\nexport const PumpDeviceDefinition = MutableEndpoint({\n    name: \"Pump\",\n    deviceType: 0x303,\n    deviceRevision: 3,\n    requirements: PumpRequirements,\n    behaviors: SupportedBehaviors(PumpRequirements.server.mandatory.OnOff, PumpRequirements.server.mandatory.Identify)\n});\n\nexport const PumpDevice: PumpDevice = PumpDeviceDefinition;\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,eAAe,uBAAuB;AAC/C;AAAA,EACI,qCAAqC;AAAA,OAClC;AACP,SAAS,kBAAkB,0BAA0B;AACrD;AAAA,EACI,sBAAsB;AAAA,OACnB;AACP,SAAS,gBAAgB,wBAAwB;AACjD;AAAA,EACI,0BAA0B;AAAA,OACvB;AACP;AAAA,EACI,gCAAgC;AAAA,OAC7B;AACP;AAAA,EACI,6BAA6B;AAAA,OAC1B;AACP;AAAA,EACI,yBAAyB;AAAA,OACtB;AACP;AAAA,EACI,kCAAkC;AAAA,OAC/B;AACP;AAAA,EACI,+BAA+B;AAAA,OAC5B;AACP;AAAA,EACI,2BAA2B;AAAA,OACxB;AACP;AAAA,EACI,4BAA4B;AAAA,OACzB;AACP,SAAS,uBAAuB;AAChC,SAAS,0BAA0B;AAc5B,IAAU;AAAA,CAAV,CAAUA,sBAAV;AAMI,EAAMA,kBAAA,cAAc;AAOpB,EAAMA,kBAAA,oCAAoC;AAO1C,EAAMA,kBAAA,iBAAiB;AAOvB,EAAMA,kBAAA,qBAAqB;AAO3B,EAAMA,kBAAA,eAAe;AAOrB,EAAMA,kBAAA,yBAAyB;AAO/B,EAAMA,kBAAA,+BAA+B;AAOrC,EAAMA,kBAAA,4BAA4B;AAOlC,EAAMA,kBAAA,wBAAwB;AAO9B,EAAMA,kBAAA,iCAAiC;AAOvC,EAAMA,kBAAA,8BAA8B;AAOpC,EAAMA,kBAAA,0BAA0B;AAOhC,EAAMA,kBAAA,2BAA2B;AAKjC,EAAMA,kBAAA,SAAS;AAAA,IAClB,WAAW;AAAA,MACP,OAAOA,kBAAA;AAAA,MACP,6BAA6BA,kBAAA;AAAA,MAC7B,UAAUA,kBAAA;AAAA,IACd;AAAA,IAEA,UAAU;AAAA,MACN,cAAcA,kBAAA;AAAA,MACd,QAAQA,kBAAA;AAAA,MACR,kBAAkBA,kBAAA;AAAA,MAClB,wBAAwBA,kBAAA;AAAA,MACxB,qBAAqBA,kBAAA;AAAA,MACrB,iBAAiBA,kBAAA;AAAA,IACrB;AAAA,EACJ;AAKO,EAAMA,kBAAA,SAAS;AAAA,IAClB,UAAU;AAAA,MACN,wBAAwBA,kBAAA;AAAA,MACxB,qBAAqBA,kBAAA;AAAA,MACrB,iBAAiBA,kBAAA;AAAA,MACjB,kBAAkBA,kBAAA;AAAA,IACtB;AAAA,IAEA,WAAW,CAAC;AAAA,EAChB;AAAA,GA5Ha;AA+HV,MAAM,uBAAuB,gBAAgB;AAAA,EAChD,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,WAAW,mBAAmB,iBAAiB,OAAO,UAAU,OAAO,iBAAiB,OAAO,UAAU,QAAQ;AACrH,CAAC;AAEM,MAAM,aAAyB;",
  "names": ["PumpRequirements"]
}
