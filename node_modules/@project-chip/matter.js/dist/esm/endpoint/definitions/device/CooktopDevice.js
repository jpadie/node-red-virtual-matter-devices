/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { OnOffServer as BaseOnOffServer } from "../../../behavior/definitions/on-off/OnOffServer.js";
import { IdentifyServer as BaseIdentifyServer } from "../../../behavior/definitions/identify/IdentifyServer.js";
import { MutableEndpoint } from "../../type/MutableEndpoint.js";
import { SupportedBehaviors } from "../../properties/SupportedBehaviors.js";
var CooktopRequirements;
((CooktopRequirements2) => {
  CooktopRequirements2.OnOffServer = BaseOnOffServer.with("OffOnly");
  CooktopRequirements2.IdentifyServer = BaseIdentifyServer;
  CooktopRequirements2.server = { mandatory: { OnOff: CooktopRequirements2.OnOffServer }, optional: { Identify: CooktopRequirements2.IdentifyServer } };
})(CooktopRequirements || (CooktopRequirements = {}));
const CooktopDeviceDefinition = MutableEndpoint({
  name: "Cooktop",
  deviceType: 120,
  deviceRevision: 1,
  requirements: CooktopRequirements,
  behaviors: SupportedBehaviors(CooktopRequirements.server.mandatory.OnOff)
});
const CooktopDevice = CooktopDeviceDefinition;
export {
  CooktopDevice,
  CooktopDeviceDefinition,
  CooktopRequirements
};
//# sourceMappingURL=CooktopDevice.js.map
