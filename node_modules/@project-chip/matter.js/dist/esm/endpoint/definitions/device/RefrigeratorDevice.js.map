{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/RefrigeratorDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport {\n    RefrigeratorAndTemperatureControlledCabinetModeServer as BaseRefrigeratorAndTemperatureControlledCabinetModeServer\n} from \"../../../behavior/definitions/refrigerator-and-temperature-controlled-cabinet-mode/RefrigeratorAndTemperatureControlledCabinetModeServer.js\";\nimport {\n    RefrigeratorAlarmServer as BaseRefrigeratorAlarmServer\n} from \"../../../behavior/definitions/refrigerator-alarm/RefrigeratorAlarmServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * A refrigerator represents a device that contains one or more cabinets that are capable of chilling or freezing food.\n * Examples of consumer products that may make use of this device type include refrigerators, freezers, and wine\n * coolers.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 13.2\n */\nexport interface RefrigeratorDevice extends Identity<typeof RefrigeratorDeviceDefinition> {}\n\nexport namespace RefrigeratorRequirements {\n    /**\n     * The Identify cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * The RefrigeratorAndTemperatureControlledCabinetMode cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation\n     * {@link RefrigeratorAndTemperatureControlledCabinetModeServer} for convenience.\n     */\n    export const RefrigeratorAndTemperatureControlledCabinetModeServer = BaseRefrigeratorAndTemperatureControlledCabinetModeServer;\n\n    /**\n     * The RefrigeratorAlarm cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link RefrigeratorAlarmServer} for convenience.\n     */\n    export const RefrigeratorAlarmServer = BaseRefrigeratorAlarmServer;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = {\n        optional: {\n            Identify: IdentifyServer,\n            RefrigeratorAndTemperatureControlledCabinetMode: RefrigeratorAndTemperatureControlledCabinetModeServer,\n            RefrigeratorAlarm: RefrigeratorAlarmServer\n        },\n        mandatory: {}\n    };\n}\n\nexport const RefrigeratorDeviceDefinition = MutableEndpoint({\n    name: \"Refrigerator\",\n    deviceType: 0x70,\n    deviceRevision: 1,\n    requirements: RefrigeratorRequirements,\n    behaviors: SupportedBehaviors()\n});\n\nexport const RefrigeratorDevice: RefrigeratorDevice = RefrigeratorDeviceDefinition;\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,kBAAkB,0BAA0B;AACrD;AAAA,EACI,yDAAyD;AAAA,OACtD;AACP;AAAA,EACI,2BAA2B;AAAA,OACxB;AACP,SAAS,uBAAuB;AAChC,SAAS,0BAA0B;AAY5B,IAAU;AAAA,CAAV,CAAUA,8BAAV;AAMI,EAAMA,0BAAA,iBAAiB;AAQvB,EAAMA,0BAAA,wDAAwD;AAO9D,EAAMA,0BAAA,0BAA0B;AAKhC,EAAMA,0BAAA,SAAS;AAAA,IAClB,UAAU;AAAA,MACN,UAAUA,0BAAA;AAAA,MACV,iDAAiDA,0BAAA;AAAA,MACjD,mBAAmBA,0BAAA;AAAA,IACvB;AAAA,IACA,WAAW,CAAC;AAAA,EAChB;AAAA,GAjCa;AAoCV,MAAM,+BAA+B,gBAAgB;AAAA,EACxD,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,WAAW,mBAAmB;AAClC,CAAC;AAEM,MAAM,qBAAyC;",
  "names": ["RefrigeratorRequirements"]
}
