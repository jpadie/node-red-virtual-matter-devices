{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/PumpControllerDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport { BindingBehavior as BaseBindingBehavior } from \"../../../behavior/definitions/binding/BindingBehavior.js\";\nimport { OnOffBehavior as BaseOnOffBehavior } from \"../../../behavior/definitions/on-off/OnOffBehavior.js\";\nimport {\n    PumpConfigurationAndControlBehavior as BasePumpConfigurationAndControlBehavior\n} from \"../../../behavior/definitions/pump-configuration-and-control/PumpConfigurationAndControlBehavior.js\";\nimport { IdentifyBehavior as BaseIdentifyBehavior } from \"../../../behavior/definitions/identify/IdentifyBehavior.js\";\nimport { GroupsBehavior as BaseGroupsBehavior } from \"../../../behavior/definitions/groups/GroupsBehavior.js\";\nimport {\n    LevelControlBehavior as BaseLevelControlBehavior\n} from \"../../../behavior/definitions/level-control/LevelControlBehavior.js\";\nimport {\n    ScenesManagementBehavior as BaseScenesManagementBehavior\n} from \"../../../behavior/definitions/scenes-management/ScenesManagementBehavior.js\";\nimport {\n    TemperatureMeasurementBehavior as BaseTemperatureMeasurementBehavior\n} from \"../../../behavior/definitions/temperature-measurement/TemperatureMeasurementBehavior.js\";\nimport {\n    PressureMeasurementBehavior as BasePressureMeasurementBehavior\n} from \"../../../behavior/definitions/pressure-measurement/PressureMeasurementBehavior.js\";\nimport {\n    FlowMeasurementBehavior as BaseFlowMeasurementBehavior\n} from \"../../../behavior/definitions/flow-measurement/FlowMeasurementBehavior.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * A Pump Controller device is capable of configuring and controlling a Pump device.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 6.5\n */\nexport interface PumpControllerDevice extends Identity<typeof PumpControllerDeviceDefinition> {}\n\nexport namespace PumpControllerRequirements {\n    /**\n     * The Identify cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * The Binding cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link BindingBehavior} for convenience.\n     */\n    export const BindingBehavior = BaseBindingBehavior;\n\n    /**\n     * The OnOff cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link OnOffBehavior} for convenience.\n     */\n    export const OnOffBehavior = BaseOnOffBehavior;\n\n    /**\n     * The PumpConfigurationAndControl cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link PumpConfigurationAndControlBehavior} for convenience.\n     */\n    export const PumpConfigurationAndControlBehavior = BasePumpConfigurationAndControlBehavior;\n\n    /**\n     * The Identify cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyBehavior} for convenience.\n     */\n    export const IdentifyBehavior = BaseIdentifyBehavior;\n\n    /**\n     * The Groups cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link GroupsBehavior} for convenience.\n     */\n    export const GroupsBehavior = BaseGroupsBehavior;\n\n    /**\n     * The LevelControl cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link LevelControlBehavior} for convenience.\n     */\n    export const LevelControlBehavior = BaseLevelControlBehavior;\n\n    /**\n     * The ScenesManagement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ScenesManagementBehavior} for convenience.\n     */\n    export const ScenesManagementBehavior = BaseScenesManagementBehavior;\n\n    /**\n     * The TemperatureMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link TemperatureMeasurementBehavior} for convenience.\n     */\n    export const TemperatureMeasurementBehavior = BaseTemperatureMeasurementBehavior;\n\n    /**\n     * The PressureMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link PressureMeasurementBehavior} for convenience.\n     */\n    export const PressureMeasurementBehavior = BasePressureMeasurementBehavior;\n\n    /**\n     * The FlowMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link FlowMeasurementBehavior} for convenience.\n     */\n    export const FlowMeasurementBehavior = BaseFlowMeasurementBehavior;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = { mandatory: { Identify: IdentifyServer } };\n\n    /**\n     * A definition for each client cluster supported by the endpoint per the Matter specification.\n     */\n    export const client = {\n        mandatory: {\n            Binding: BindingBehavior,\n            OnOff: OnOffBehavior,\n            PumpConfigurationAndControl: PumpConfigurationAndControlBehavior\n        },\n\n        optional: {\n            Identify: IdentifyBehavior,\n            Groups: GroupsBehavior,\n            LevelControl: LevelControlBehavior,\n            ScenesManagement: ScenesManagementBehavior,\n            TemperatureMeasurement: TemperatureMeasurementBehavior,\n            PressureMeasurement: PressureMeasurementBehavior,\n            FlowMeasurement: FlowMeasurementBehavior\n        }\n    };\n}\n\nexport const PumpControllerDeviceDefinition = MutableEndpoint({\n    name: \"PumpController\",\n    deviceType: 0x304,\n    deviceRevision: 3,\n    requirements: PumpControllerRequirements,\n    behaviors: SupportedBehaviors(PumpControllerRequirements.server.mandatory.Identify)\n});\n\nexport const PumpControllerDevice: PumpControllerDevice = PumpControllerDeviceDefinition;\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,kBAAkB,0BAA0B;AACrD,SAAS,mBAAmB,2BAA2B;AACvD,SAAS,iBAAiB,yBAAyB;AACnD;AAAA,EACI,uCAAuC;AAAA,OACpC;AACP,SAAS,oBAAoB,4BAA4B;AACzD,SAAS,kBAAkB,0BAA0B;AACrD;AAAA,EACI,wBAAwB;AAAA,OACrB;AACP;AAAA,EACI,4BAA4B;AAAA,OACzB;AACP;AAAA,EACI,kCAAkC;AAAA,OAC/B;AACP;AAAA,EACI,+BAA+B;AAAA,OAC5B;AACP;AAAA,EACI,2BAA2B;AAAA,OACxB;AACP,SAAS,uBAAuB;AAChC,SAAS,0BAA0B;AAU5B,IAAU;AAAA,CAAV,CAAUA,gCAAV;AAMI,EAAMA,4BAAA,iBAAiB;AAOvB,EAAMA,4BAAA,kBAAkB;AAOxB,EAAMA,4BAAA,gBAAgB;AAOtB,EAAMA,4BAAA,sCAAsC;AAO5C,EAAMA,4BAAA,mBAAmB;AAOzB,EAAMA,4BAAA,iBAAiB;AAOvB,EAAMA,4BAAA,uBAAuB;AAO7B,EAAMA,4BAAA,2BAA2B;AAOjC,EAAMA,4BAAA,iCAAiC;AAOvC,EAAMA,4BAAA,8BAA8B;AAOpC,EAAMA,4BAAA,0BAA0B;AAKhC,EAAMA,4BAAA,SAAS,EAAE,WAAW,EAAE,UAAUA,4BAAA,eAAe,EAAE;AAKzD,EAAMA,4BAAA,SAAS;AAAA,IAClB,WAAW;AAAA,MACP,SAASA,4BAAA;AAAA,MACT,OAAOA,4BAAA;AAAA,MACP,6BAA6BA,4BAAA;AAAA,IACjC;AAAA,IAEA,UAAU;AAAA,MACN,UAAUA,4BAAA;AAAA,MACV,QAAQA,4BAAA;AAAA,MACR,cAAcA,4BAAA;AAAA,MACd,kBAAkBA,4BAAA;AAAA,MAClB,wBAAwBA,4BAAA;AAAA,MACxB,qBAAqBA,4BAAA;AAAA,MACrB,iBAAiBA,4BAAA;AAAA,IACrB;AAAA,EACJ;AAAA,GAtGa;AAyGV,MAAM,iCAAiC,gBAAgB;AAAA,EAC1D,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,WAAW,mBAAmB,2BAA2B,OAAO,UAAU,QAAQ;AACtF,CAAC;AAEM,MAAM,uBAA6C;",
  "names": ["PumpControllerRequirements"]
}
