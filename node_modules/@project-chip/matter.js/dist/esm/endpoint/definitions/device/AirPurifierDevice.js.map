{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/AirPurifierDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport { FanControlServer as BaseFanControlServer } from \"../../../behavior/definitions/fan-control/FanControlServer.js\";\nimport { GroupsServer as BaseGroupsServer } from \"../../../behavior/definitions/groups/GroupsServer.js\";\nimport {\n    HepaFilterMonitoringServer as BaseHepaFilterMonitoringServer\n} from \"../../../behavior/definitions/hepa-filter-monitoring/HepaFilterMonitoringServer.js\";\nimport {\n    ActivatedCarbonFilterMonitoringServer as BaseActivatedCarbonFilterMonitoringServer\n} from \"../../../behavior/definitions/activated-carbon-filter-monitoring/ActivatedCarbonFilterMonitoringServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * An Air Purifier is a standalone device that is designed to clean the air in a room.\n *\n * It is a device that has a fan to control the air speed while it is operating. Optionally, it can report on the\n * condition of its filters.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 9.3\n */\nexport interface AirPurifierDevice extends Identity<typeof AirPurifierDeviceDefinition> {}\n\nexport namespace AirPurifierRequirements {\n    /**\n     * The Identify cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * The FanControl cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link FanControlServer} for convenience.\n     */\n    export const FanControlServer = BaseFanControlServer;\n\n    /**\n     * The Groups cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link GroupsServer} for convenience.\n     */\n    export const GroupsServer = BaseGroupsServer;\n\n    /**\n     * The HepaFilterMonitoring cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link HepaFilterMonitoringServer} for convenience.\n     */\n    export const HepaFilterMonitoringServer = BaseHepaFilterMonitoringServer;\n\n    /**\n     * The ActivatedCarbonFilterMonitoring cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link ActivatedCarbonFilterMonitoringServer} for\n     * convenience.\n     */\n    export const ActivatedCarbonFilterMonitoringServer = BaseActivatedCarbonFilterMonitoringServer;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = {\n        mandatory: { Identify: IdentifyServer, FanControl: FanControlServer },\n        optional: {\n            Groups: GroupsServer,\n            HepaFilterMonitoring: HepaFilterMonitoringServer,\n            ActivatedCarbonFilterMonitoring: ActivatedCarbonFilterMonitoringServer\n        }\n    };\n}\n\nexport const AirPurifierDeviceDefinition = MutableEndpoint({\n    name: \"AirPurifier\",\n    deviceType: 0x2d,\n    deviceRevision: 1,\n    requirements: AirPurifierRequirements,\n    behaviors: SupportedBehaviors(\n        AirPurifierRequirements.server.mandatory.Identify,\n        AirPurifierRequirements.server.mandatory.FanControl\n    )\n});\n\nexport const AirPurifierDevice: AirPurifierDevice = AirPurifierDeviceDefinition;\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,kBAAkB,0BAA0B;AACrD,SAAS,oBAAoB,4BAA4B;AACzD,SAAS,gBAAgB,wBAAwB;AACjD;AAAA,EACI,8BAA8B;AAAA,OAC3B;AACP;AAAA,EACI,yCAAyC;AAAA,OACtC;AACP,SAAS,uBAAuB;AAChC,SAAS,0BAA0B;AAa5B,IAAU;AAAA,CAAV,CAAUA,6BAAV;AAMI,EAAMA,yBAAA,iBAAiB;AAOvB,EAAMA,yBAAA,mBAAmB;AAOzB,EAAMA,yBAAA,eAAe;AAOrB,EAAMA,yBAAA,6BAA6B;AAQnC,EAAMA,yBAAA,wCAAwC;AAK9C,EAAMA,yBAAA,SAAS;AAAA,IAClB,WAAW,EAAE,UAAUA,yBAAA,gBAAgB,YAAYA,yBAAA,iBAAiB;AAAA,IACpE,UAAU;AAAA,MACN,QAAQA,yBAAA;AAAA,MACR,sBAAsBA,yBAAA;AAAA,MACtB,iCAAiCA,yBAAA;AAAA,IACrC;AAAA,EACJ;AAAA,GA/Ca;AAkDV,MAAM,8BAA8B,gBAAgB;AAAA,EACvD,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,WAAW;AAAA,IACP,wBAAwB,OAAO,UAAU;AAAA,IACzC,wBAAwB,OAAO,UAAU;AAAA,EAC7C;AACJ,CAAC;AAEM,MAAM,oBAAuC;",
  "names": ["AirPurifierRequirements"]
}
