/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import {
  TemperatureMeasurementServer as BaseTemperatureMeasurementServer
} from "../../../behavior/definitions/temperature-measurement/TemperatureMeasurementServer.js";
import { IdentifyServer as BaseIdentifyServer } from "../../../behavior/definitions/identify/IdentifyServer.js";
import { MutableEndpoint } from "../../type/MutableEndpoint.js";
import { SupportedBehaviors } from "../../properties/SupportedBehaviors.js";
var TemperatureSensorRequirements;
((TemperatureSensorRequirements2) => {
  TemperatureSensorRequirements2.TemperatureMeasurementServer = BaseTemperatureMeasurementServer;
  TemperatureSensorRequirements2.IdentifyServer = BaseIdentifyServer;
  TemperatureSensorRequirements2.server = { mandatory: { TemperatureMeasurement: TemperatureSensorRequirements2.TemperatureMeasurementServer, Identify: TemperatureSensorRequirements2.IdentifyServer } };
})(TemperatureSensorRequirements || (TemperatureSensorRequirements = {}));
const TemperatureSensorDeviceDefinition = MutableEndpoint({
  name: "TemperatureSensor",
  deviceType: 770,
  deviceRevision: 2,
  requirements: TemperatureSensorRequirements,
  behaviors: SupportedBehaviors(
    TemperatureSensorRequirements.server.mandatory.TemperatureMeasurement,
    TemperatureSensorRequirements.server.mandatory.Identify
  )
});
const TemperatureSensorDevice = TemperatureSensorDeviceDefinition;
export {
  TemperatureSensorDevice,
  TemperatureSensorDeviceDefinition,
  TemperatureSensorRequirements
};
//# sourceMappingURL=TemperatureSensorDevice.js.map
