/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { IdentifyServer as BaseIdentifyServer } from "../../../behavior/definitions/identify/IdentifyServer.js";
import { FanControlServer as BaseFanControlServer } from "../../../behavior/definitions/fan-control/FanControlServer.js";
import { GroupsServer as BaseGroupsServer } from "../../../behavior/definitions/groups/GroupsServer.js";
import {
  HepaFilterMonitoringServer as BaseHepaFilterMonitoringServer
} from "../../../behavior/definitions/hepa-filter-monitoring/HepaFilterMonitoringServer.js";
import {
  ActivatedCarbonFilterMonitoringServer as BaseActivatedCarbonFilterMonitoringServer
} from "../../../behavior/definitions/activated-carbon-filter-monitoring/ActivatedCarbonFilterMonitoringServer.js";
import { MutableEndpoint } from "../../type/MutableEndpoint.js";
import { SupportedBehaviors } from "../../properties/SupportedBehaviors.js";
var AirPurifierRequirements;
((AirPurifierRequirements2) => {
  AirPurifierRequirements2.IdentifyServer = BaseIdentifyServer;
  AirPurifierRequirements2.FanControlServer = BaseFanControlServer;
  AirPurifierRequirements2.GroupsServer = BaseGroupsServer;
  AirPurifierRequirements2.HepaFilterMonitoringServer = BaseHepaFilterMonitoringServer;
  AirPurifierRequirements2.ActivatedCarbonFilterMonitoringServer = BaseActivatedCarbonFilterMonitoringServer;
  AirPurifierRequirements2.server = {
    mandatory: { Identify: AirPurifierRequirements2.IdentifyServer, FanControl: AirPurifierRequirements2.FanControlServer },
    optional: {
      Groups: AirPurifierRequirements2.GroupsServer,
      HepaFilterMonitoring: AirPurifierRequirements2.HepaFilterMonitoringServer,
      ActivatedCarbonFilterMonitoring: AirPurifierRequirements2.ActivatedCarbonFilterMonitoringServer
    }
  };
})(AirPurifierRequirements || (AirPurifierRequirements = {}));
const AirPurifierDeviceDefinition = MutableEndpoint({
  name: "AirPurifier",
  deviceType: 45,
  deviceRevision: 1,
  requirements: AirPurifierRequirements,
  behaviors: SupportedBehaviors(
    AirPurifierRequirements.server.mandatory.Identify,
    AirPurifierRequirements.server.mandatory.FanControl
  )
});
const AirPurifierDevice = AirPurifierDeviceDefinition;
export {
  AirPurifierDevice,
  AirPurifierDeviceDefinition,
  AirPurifierRequirements
};
//# sourceMappingURL=AirPurifierDevice.js.map
