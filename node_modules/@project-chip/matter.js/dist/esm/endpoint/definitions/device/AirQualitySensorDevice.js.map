{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/AirQualitySensorDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport { AirQualityServer as BaseAirQualityServer } from \"../../../behavior/definitions/air-quality/AirQualityServer.js\";\nimport {\n    TemperatureMeasurementServer as BaseTemperatureMeasurementServer\n} from \"../../../behavior/definitions/temperature-measurement/TemperatureMeasurementServer.js\";\nimport {\n    RelativeHumidityMeasurementServer as BaseRelativeHumidityMeasurementServer\n} from \"../../../behavior/definitions/relative-humidity-measurement/RelativeHumidityMeasurementServer.js\";\nimport {\n    CarbonMonoxideConcentrationMeasurementServer as BaseCarbonMonoxideConcentrationMeasurementServer\n} from \"../../../behavior/definitions/carbon-monoxide-concentration-measurement/CarbonMonoxideConcentrationMeasurementServer.js\";\nimport {\n    CarbonDioxideConcentrationMeasurementServer as BaseCarbonDioxideConcentrationMeasurementServer\n} from \"../../../behavior/definitions/carbon-dioxide-concentration-measurement/CarbonDioxideConcentrationMeasurementServer.js\";\nimport {\n    NitrogenDioxideConcentrationMeasurementServer as BaseNitrogenDioxideConcentrationMeasurementServer\n} from \"../../../behavior/definitions/nitrogen-dioxide-concentration-measurement/NitrogenDioxideConcentrationMeasurementServer.js\";\nimport {\n    OzoneConcentrationMeasurementServer as BaseOzoneConcentrationMeasurementServer\n} from \"../../../behavior/definitions/ozone-concentration-measurement/OzoneConcentrationMeasurementServer.js\";\nimport {\n    FormaldehydeConcentrationMeasurementServer as BaseFormaldehydeConcentrationMeasurementServer\n} from \"../../../behavior/definitions/formaldehyde-concentration-measurement/FormaldehydeConcentrationMeasurementServer.js\";\nimport {\n    Pm1ConcentrationMeasurementServer as BasePm1ConcentrationMeasurementServer\n} from \"../../../behavior/definitions/pm1-concentration-measurement/Pm1ConcentrationMeasurementServer.js\";\nimport {\n    Pm25ConcentrationMeasurementServer as BasePm25ConcentrationMeasurementServer\n} from \"../../../behavior/definitions/pm25-concentration-measurement/Pm25ConcentrationMeasurementServer.js\";\nimport {\n    Pm10ConcentrationMeasurementServer as BasePm10ConcentrationMeasurementServer\n} from \"../../../behavior/definitions/pm10-concentration-measurement/Pm10ConcentrationMeasurementServer.js\";\nimport {\n    RadonConcentrationMeasurementServer as BaseRadonConcentrationMeasurementServer\n} from \"../../../behavior/definitions/radon-concentration-measurement/RadonConcentrationMeasurementServer.js\";\nimport {\n    TotalVolatileOrganicCompoundsConcentrationMeasurementServer as BaseTotalVolatileOrganicCompoundsConcentrationMeasurementServer\n} from \"../../../behavior/definitions/total-volatile-organic-compounds-concentration-measurement/TotalVolatileOrganicCompoundsConcentrationMeasurementServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * This defines conformance for the Air Quality Sensor device type.\n *\n * An air quality sensor is a device designed to monitor and measure various parameters related to the quality of\n * ambient air in indoor or outdoor environments.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 7.10\n */\nexport interface AirQualitySensorDevice extends Identity<typeof AirQualitySensorDeviceDefinition> {}\n\nexport namespace AirQualitySensorRequirements {\n    /**\n     * The Identify cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * The AirQuality cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link AirQualityServer} for convenience.\n     */\n    export const AirQualityServer = BaseAirQualityServer;\n\n    /**\n     * The TemperatureMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link TemperatureMeasurementServer} for convenience.\n     */\n    export const TemperatureMeasurementServer = BaseTemperatureMeasurementServer;\n\n    /**\n     * The RelativeHumidityMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link RelativeHumidityMeasurementServer} for convenience.\n     */\n    export const RelativeHumidityMeasurementServer = BaseRelativeHumidityMeasurementServer;\n\n    /**\n     * The CarbonMonoxideConcentrationMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link CarbonMonoxideConcentrationMeasurementServer} for\n     * convenience.\n     */\n    export const CarbonMonoxideConcentrationMeasurementServer = BaseCarbonMonoxideConcentrationMeasurementServer;\n\n    /**\n     * The CarbonDioxideConcentrationMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link CarbonDioxideConcentrationMeasurementServer} for\n     * convenience.\n     */\n    export const CarbonDioxideConcentrationMeasurementServer = BaseCarbonDioxideConcentrationMeasurementServer;\n\n    /**\n     * The NitrogenDioxideConcentrationMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link NitrogenDioxideConcentrationMeasurementServer} for\n     * convenience.\n     */\n    export const NitrogenDioxideConcentrationMeasurementServer = BaseNitrogenDioxideConcentrationMeasurementServer;\n\n    /**\n     * The OzoneConcentrationMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link OzoneConcentrationMeasurementServer} for convenience.\n     */\n    export const OzoneConcentrationMeasurementServer = BaseOzoneConcentrationMeasurementServer;\n\n    /**\n     * The FormaldehydeConcentrationMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link FormaldehydeConcentrationMeasurementServer} for\n     * convenience.\n     */\n    export const FormaldehydeConcentrationMeasurementServer = BaseFormaldehydeConcentrationMeasurementServer;\n\n    /**\n     * The Pm1ConcentrationMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link Pm1ConcentrationMeasurementServer} for convenience.\n     */\n    export const Pm1ConcentrationMeasurementServer = BasePm1ConcentrationMeasurementServer;\n\n    /**\n     * The Pm25ConcentrationMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link Pm25ConcentrationMeasurementServer} for convenience.\n     */\n    export const Pm25ConcentrationMeasurementServer = BasePm25ConcentrationMeasurementServer;\n\n    /**\n     * The Pm10ConcentrationMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link Pm10ConcentrationMeasurementServer} for convenience.\n     */\n    export const Pm10ConcentrationMeasurementServer = BasePm10ConcentrationMeasurementServer;\n\n    /**\n     * The RadonConcentrationMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link RadonConcentrationMeasurementServer} for convenience.\n     */\n    export const RadonConcentrationMeasurementServer = BaseRadonConcentrationMeasurementServer;\n\n    /**\n     * The TotalVolatileOrganicCompoundsConcentrationMeasurement cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation\n     * {@link TotalVolatileOrganicCompoundsConcentrationMeasurementServer} for convenience.\n     */\n    export const TotalVolatileOrganicCompoundsConcentrationMeasurementServer = BaseTotalVolatileOrganicCompoundsConcentrationMeasurementServer;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = {\n        mandatory: { Identify: IdentifyServer, AirQuality: AirQualityServer },\n\n        optional: {\n            TemperatureMeasurement: TemperatureMeasurementServer,\n            RelativeHumidityMeasurement: RelativeHumidityMeasurementServer,\n            CarbonMonoxideConcentrationMeasurement: CarbonMonoxideConcentrationMeasurementServer,\n            CarbonDioxideConcentrationMeasurement: CarbonDioxideConcentrationMeasurementServer,\n            NitrogenDioxideConcentrationMeasurement: NitrogenDioxideConcentrationMeasurementServer,\n            OzoneConcentrationMeasurement: OzoneConcentrationMeasurementServer,\n            FormaldehydeConcentrationMeasurement: FormaldehydeConcentrationMeasurementServer,\n            Pm1ConcentrationMeasurement: Pm1ConcentrationMeasurementServer,\n            Pm25ConcentrationMeasurement: Pm25ConcentrationMeasurementServer,\n            Pm10ConcentrationMeasurement: Pm10ConcentrationMeasurementServer,\n            RadonConcentrationMeasurement: RadonConcentrationMeasurementServer,\n            TotalVolatileOrganicCompoundsConcentrationMeasurement: TotalVolatileOrganicCompoundsConcentrationMeasurementServer\n        }\n    };\n}\n\nexport const AirQualitySensorDeviceDefinition = MutableEndpoint({\n    name: \"AirQualitySensor\",\n    deviceType: 0x2c,\n    deviceRevision: 1,\n    requirements: AirQualitySensorRequirements,\n    behaviors: SupportedBehaviors(\n        AirQualitySensorRequirements.server.mandatory.Identify,\n        AirQualitySensorRequirements.server.mandatory.AirQuality\n    )\n});\n\nexport const AirQualitySensorDevice: AirQualitySensorDevice = AirQualitySensorDeviceDefinition;\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,kBAAkB,0BAA0B;AACrD,SAAS,oBAAoB,4BAA4B;AACzD;AAAA,EACI,gCAAgC;AAAA,OAC7B;AACP;AAAA,EACI,qCAAqC;AAAA,OAClC;AACP;AAAA,EACI,gDAAgD;AAAA,OAC7C;AACP;AAAA,EACI,+CAA+C;AAAA,OAC5C;AACP;AAAA,EACI,iDAAiD;AAAA,OAC9C;AACP;AAAA,EACI,uCAAuC;AAAA,OACpC;AACP;AAAA,EACI,8CAA8C;AAAA,OAC3C;AACP;AAAA,EACI,qCAAqC;AAAA,OAClC;AACP;AAAA,EACI,sCAAsC;AAAA,OACnC;AACP;AAAA,EACI,sCAAsC;AAAA,OACnC;AACP;AAAA,EACI,uCAAuC;AAAA,OACpC;AACP;AAAA,EACI,+DAA+D;AAAA,OAC5D;AACP,SAAS,uBAAuB;AAChC,SAAS,0BAA0B;AAa5B,IAAU;AAAA,CAAV,CAAUA,kCAAV;AAMI,EAAMA,8BAAA,iBAAiB;AAOvB,EAAMA,8BAAA,mBAAmB;AAOzB,EAAMA,8BAAA,+BAA+B;AAOrC,EAAMA,8BAAA,oCAAoC;AAQ1C,EAAMA,8BAAA,+CAA+C;AAQrD,EAAMA,8BAAA,8CAA8C;AAQpD,EAAMA,8BAAA,gDAAgD;AAOtD,EAAMA,8BAAA,sCAAsC;AAQ5C,EAAMA,8BAAA,6CAA6C;AAOnD,EAAMA,8BAAA,oCAAoC;AAO1C,EAAMA,8BAAA,qCAAqC;AAO3C,EAAMA,8BAAA,qCAAqC;AAO3C,EAAMA,8BAAA,sCAAsC;AAQ5C,EAAMA,8BAAA,8DAA8D;AAKpE,EAAMA,8BAAA,SAAS;AAAA,IAClB,WAAW,EAAE,UAAUA,8BAAA,gBAAgB,YAAYA,8BAAA,iBAAiB;AAAA,IAEpE,UAAU;AAAA,MACN,wBAAwBA,8BAAA;AAAA,MACxB,6BAA6BA,8BAAA;AAAA,MAC7B,wCAAwCA,8BAAA;AAAA,MACxC,uCAAuCA,8BAAA;AAAA,MACvC,yCAAyCA,8BAAA;AAAA,MACzC,+BAA+BA,8BAAA;AAAA,MAC/B,sCAAsCA,8BAAA;AAAA,MACtC,6BAA6BA,8BAAA;AAAA,MAC7B,8BAA8BA,8BAAA;AAAA,MAC9B,8BAA8BA,8BAAA;AAAA,MAC9B,+BAA+BA,8BAAA;AAAA,MAC/B,uDAAuDA,8BAAA;AAAA,IAC3D;AAAA,EACJ;AAAA,GA5Ha;AA+HV,MAAM,mCAAmC,gBAAgB;AAAA,EAC5D,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,WAAW;AAAA,IACP,6BAA6B,OAAO,UAAU;AAAA,IAC9C,6BAA6B,OAAO,UAAU;AAAA,EAClD;AACJ,CAAC;AAEM,MAAM,yBAAiD;",
  "names": ["AirQualitySensorRequirements"]
}
