{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/CooktopDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { OnOffServer as BaseOnOffServer } from \"../../../behavior/definitions/on-off/OnOffServer.js\";\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * A cooktop is a cooking surface that heats food either by transferring currents from an electromagnetic field located\n * below the glass surface directly to the magnetic induction cookware placed above or through traditional gas or\n * electric burners.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 13.8\n */\nexport interface CooktopDevice extends Identity<typeof CooktopDeviceDefinition> {}\n\nexport namespace CooktopRequirements {\n    /**\n     * The OnOff cluster is required by the Matter specification.\n     *\n     * This version of {@link OnOffServer} is specialized per the specification.\n     */\n    export const OnOffServer = BaseOnOffServer.with(\"OffOnly\");\n\n    /**\n     * The Identify cluster is optional per the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = { mandatory: { OnOff: OnOffServer }, optional: { Identify: IdentifyServer } };\n}\n\nexport const CooktopDeviceDefinition = MutableEndpoint({\n    name: \"Cooktop\",\n    deviceType: 0x78,\n    deviceRevision: 1,\n    requirements: CooktopRequirements,\n    behaviors: SupportedBehaviors(CooktopRequirements.server.mandatory.OnOff)\n});\n\nexport const CooktopDevice: CooktopDevice = CooktopDeviceDefinition;\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,eAAe,uBAAuB;AAC/C,SAAS,kBAAkB,0BAA0B;AACrD,SAAS,uBAAuB;AAChC,SAAS,0BAA0B;AAY5B,IAAU;AAAA,CAAV,CAAUA,yBAAV;AAMI,EAAMA,qBAAA,cAAc,gBAAgB,KAAK,SAAS;AAOlD,EAAMA,qBAAA,iBAAiB;AAKvB,EAAMA,qBAAA,SAAS,EAAE,WAAW,EAAE,OAAOA,qBAAA,YAAY,GAAG,UAAU,EAAE,UAAUA,qBAAA,eAAe,EAAE;AAAA,GAlBrF;AAqBV,MAAM,0BAA0B,gBAAgB;AAAA,EACnD,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,WAAW,mBAAmB,oBAAoB,OAAO,UAAU,KAAK;AAC5E,CAAC;AAEM,MAAM,gBAA+B;",
  "names": ["CooktopRequirements"]
}
