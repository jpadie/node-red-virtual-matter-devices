{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/device/TemperatureSensorDevice.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport {\n    TemperatureMeasurementServer as BaseTemperatureMeasurementServer\n} from \"../../../behavior/definitions/temperature-measurement/TemperatureMeasurementServer.js\";\nimport { IdentifyServer as BaseIdentifyServer } from \"../../../behavior/definitions/identify/IdentifyServer.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * A Temperature Sensor device reports measurements of temperature.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 7.4\n */\nexport interface TemperatureSensorDevice extends Identity<typeof TemperatureSensorDeviceDefinition> {}\n\nexport namespace TemperatureSensorRequirements {\n    /**\n     * The TemperatureMeasurement cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link TemperatureMeasurementServer} for convenience.\n     */\n    export const TemperatureMeasurementServer = BaseTemperatureMeasurementServer;\n\n    /**\n     * The Identify cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link IdentifyServer} for convenience.\n     */\n    export const IdentifyServer = BaseIdentifyServer;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = { mandatory: { TemperatureMeasurement: TemperatureMeasurementServer, Identify: IdentifyServer } };\n}\n\nexport const TemperatureSensorDeviceDefinition = MutableEndpoint({\n    name: \"TemperatureSensor\",\n    deviceType: 0x302,\n    deviceRevision: 2,\n    requirements: TemperatureSensorRequirements,\n    behaviors: SupportedBehaviors(\n        TemperatureSensorRequirements.server.mandatory.TemperatureMeasurement,\n        TemperatureSensorRequirements.server.mandatory.Identify\n    )\n});\n\nexport const TemperatureSensorDevice: TemperatureSensorDevice = TemperatureSensorDeviceDefinition;\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA,EACI,gCAAgC;AAAA,OAC7B;AACP,SAAS,kBAAkB,0BAA0B;AACrD,SAAS,uBAAuB;AAChC,SAAS,0BAA0B;AAU5B,IAAU;AAAA,CAAV,CAAUA,mCAAV;AAMI,EAAMA,+BAAA,+BAA+B;AAOrC,EAAMA,+BAAA,iBAAiB;AAKvB,EAAMA,+BAAA,SAAS,EAAE,WAAW,EAAE,wBAAwBA,+BAAA,8BAA8B,UAAUA,+BAAA,eAAe,EAAE;AAAA,GAlBzG;AAqBV,MAAM,oCAAoC,gBAAgB;AAAA,EAC7D,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,WAAW;AAAA,IACP,8BAA8B,OAAO,UAAU;AAAA,IAC/C,8BAA8B,OAAO,UAAU;AAAA,EACnD;AACJ,CAAC;AAEM,MAAM,0BAAmD;",
  "names": ["TemperatureSensorRequirements"]
}
