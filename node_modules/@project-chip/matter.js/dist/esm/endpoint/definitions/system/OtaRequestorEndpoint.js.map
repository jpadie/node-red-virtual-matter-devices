{
  "version": 3,
  "sources": ["../../../../../src/endpoint/definitions/system/OtaRequestorEndpoint.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport {\n    OtaSoftwareUpdateRequestorServer as BaseOtaSoftwareUpdateRequestorServer\n} from \"../../../behavior/definitions/ota-software-update-requestor/OtaSoftwareUpdateRequestorServer.js\";\nimport {\n    OtaSoftwareUpdateProviderBehavior as BaseOtaSoftwareUpdateProviderBehavior\n} from \"../../../behavior/definitions/ota-software-update-provider/OtaSoftwareUpdateProviderBehavior.js\";\nimport { MutableEndpoint } from \"../../type/MutableEndpoint.js\";\nimport { DeviceClasses } from \"../../../device/DeviceTypes.js\";\nimport { SupportedBehaviors } from \"../../properties/SupportedBehaviors.js\";\nimport { Identity } from \"../../../util/Type.js\";\n\n/**\n * An OTA Requestor is a device that is capable of receiving an OTA software update.\n *\n * @see {@link MatterSpecification.v13.Device} \u00A7 2.3\n */\nexport interface OtaRequestorEndpoint extends Identity<typeof OtaRequestorEndpointDefinition> {}\n\nexport namespace OtaRequestorRequirements {\n    /**\n     * The OtaSoftwareUpdateRequestor cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link OtaSoftwareUpdateRequestorServer} for convenience.\n     */\n    export const OtaSoftwareUpdateRequestorServer = BaseOtaSoftwareUpdateRequestorServer;\n\n    /**\n     * The OtaSoftwareUpdateProvider cluster is required by the Matter specification.\n     *\n     * We provide this alias to the default implementation {@link OtaSoftwareUpdateProviderBehavior} for convenience.\n     */\n    export const OtaSoftwareUpdateProviderBehavior = BaseOtaSoftwareUpdateProviderBehavior;\n\n    /**\n     * An implementation for each server cluster supported by the endpoint per the Matter specification.\n     */\n    export const server = { mandatory: { OtaSoftwareUpdateRequestor: OtaSoftwareUpdateRequestorServer } };\n\n    /**\n     * A definition for each client cluster supported by the endpoint per the Matter specification.\n     */\n    export const client = { mandatory: { OtaSoftwareUpdateProvider: OtaSoftwareUpdateProviderBehavior } };\n}\n\nexport const OtaRequestorEndpointDefinition = MutableEndpoint({\n    name: \"OtaRequestor\",\n    deviceType: 0x12,\n    deviceRevision: 1,\n    deviceClass: DeviceClasses.Utility,\n    requirements: OtaRequestorRequirements,\n    behaviors: SupportedBehaviors(OtaRequestorRequirements.server.mandatory.OtaSoftwareUpdateRequestor)\n});\n\nexport const OtaRequestorEndpoint: OtaRequestorEndpoint = OtaRequestorEndpointDefinition;\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA,EACI,oCAAoC;AAAA,OACjC;AACP;AAAA,EACI,qCAAqC;AAAA,OAClC;AACP,SAAS,uBAAuB;AAChC,SAAS,qBAAqB;AAC9B,SAAS,0BAA0B;AAU5B,IAAU;AAAA,CAAV,CAAUA,8BAAV;AAMI,EAAMA,0BAAA,mCAAmC;AAOzC,EAAMA,0BAAA,oCAAoC;AAK1C,EAAMA,0BAAA,SAAS,EAAE,WAAW,EAAE,4BAA4BA,0BAAA,iCAAiC,EAAE;AAK7F,EAAMA,0BAAA,SAAS,EAAE,WAAW,EAAE,2BAA2BA,0BAAA,kCAAkC,EAAE;AAAA,GAvBvF;AA0BV,MAAM,iCAAiC,gBAAgB;AAAA,EAC1D,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,aAAa,cAAc;AAAA,EAC3B,cAAc;AAAA,EACd,WAAW,mBAAmB,yBAAyB,OAAO,UAAU,0BAA0B;AACtG,CAAC;AAEM,MAAM,uBAA6C;",
  "names": ["OtaRequestorRequirements"]
}
