/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import {
  OtaSoftwareUpdateRequestorServer as BaseOtaSoftwareUpdateRequestorServer
} from "../../../behavior/definitions/ota-software-update-requestor/OtaSoftwareUpdateRequestorServer.js";
import {
  OtaSoftwareUpdateProviderBehavior as BaseOtaSoftwareUpdateProviderBehavior
} from "../../../behavior/definitions/ota-software-update-provider/OtaSoftwareUpdateProviderBehavior.js";
import { MutableEndpoint } from "../../type/MutableEndpoint.js";
import { DeviceClasses } from "../../../device/DeviceTypes.js";
import { SupportedBehaviors } from "../../properties/SupportedBehaviors.js";
var OtaRequestorRequirements;
((OtaRequestorRequirements2) => {
  OtaRequestorRequirements2.OtaSoftwareUpdateRequestorServer = BaseOtaSoftwareUpdateRequestorServer;
  OtaRequestorRequirements2.OtaSoftwareUpdateProviderBehavior = BaseOtaSoftwareUpdateProviderBehavior;
  OtaRequestorRequirements2.server = { mandatory: { OtaSoftwareUpdateRequestor: OtaRequestorRequirements2.OtaSoftwareUpdateRequestorServer } };
  OtaRequestorRequirements2.client = { mandatory: { OtaSoftwareUpdateProvider: OtaRequestorRequirements2.OtaSoftwareUpdateProviderBehavior } };
})(OtaRequestorRequirements || (OtaRequestorRequirements = {}));
const OtaRequestorEndpointDefinition = MutableEndpoint({
  name: "OtaRequestor",
  deviceType: 18,
  deviceRevision: 1,
  deviceClass: DeviceClasses.Utility,
  requirements: OtaRequestorRequirements,
  behaviors: SupportedBehaviors(OtaRequestorRequirements.server.mandatory.OtaSoftwareUpdateRequestor)
});
const OtaRequestorEndpoint = OtaRequestorEndpointDefinition;
export {
  OtaRequestorEndpoint,
  OtaRequestorEndpointDefinition,
  OtaRequestorRequirements
};
//# sourceMappingURL=OtaRequestorEndpoint.js.map
