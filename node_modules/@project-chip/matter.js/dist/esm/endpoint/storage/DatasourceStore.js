/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
function DatasourceStore(partStore, behaviorId) {
  return {
    initialValues: partStore.initialValues[behaviorId],
    async set(transaction, values) {
      const participant = participantFor(transaction, partStore);
      if (!participant.mutations) {
        participant.mutations = {};
      }
      const behaviorMutations = participant.mutations[behaviorId];
      if (behaviorMutations) {
        Object.assign(behaviorMutations, values);
      } else {
        participant.mutations[behaviorId] = { ...values };
      }
    }
  };
}
function participantFor(transaction, partStore) {
  let participant = transaction.getParticipant(partStore);
  if (participant) {
    return participant;
  }
  participant = {
    role: partStore,
    mutations: void 0,
    toString() {
      return partStore.toString();
    },
    commit1() {
    },
    async commit2() {
      if (this.mutations) {
        await partStore.set(this.mutations);
      }
    },
    rollback() {
      delete this.mutations;
    }
  };
  transaction.addParticipants(participant);
  return participant;
}
export {
  DatasourceStore
};
//# sourceMappingURL=DatasourceStore.js.map
