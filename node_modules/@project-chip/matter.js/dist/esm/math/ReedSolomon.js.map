{
  "version": 3,
  "sources": ["../../../src/math/ReedSolomon.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { UnexpectedDataError } from \"../common/MatterError.js\";\nimport { ByteArray } from \"../util/ByteArray.js\";\n\nclass GaloisField {\n    private readonly exp = new Array<number>();\n    private readonly log = new Array<number>();\n    readonly size: number;\n\n    constructor(\n        private readonly prime = 0x11d,\n        generator = 2,\n        c_exp = 8,\n    ) {\n        this.size = Math.floor(Math.pow(2, c_exp) - 1);\n        let x = 1;\n        for (let i = 0; i < this.size; i++) {\n            this.exp[i] = x;\n            this.log[x] = i;\n            x = this.multiplyNoLut(x, generator);\n        }\n\n        for (let i = this.size; i < this.size * 2; i++) {\n            this.exp[i] = this.exp[i - this.size];\n        }\n    }\n\n    public multiply(x: number, y: number) {\n        if (x === 0 || y === 0) return 0;\n        return this.exp[(this.log[x] + this.log[y]) % this.size];\n    }\n\n    public multiplyPolynom(p: number[], q: number[]) {\n        const result = new Array<number>();\n        const logP = new Array<number>();\n        for (let i = 0; i < p.length; i++) {\n            logP[i] = this.log[p[i]];\n        }\n        for (let j = 0; j < q.length; j++) {\n            if (q[j] === 0) continue;\n            const lq = this.log[q[j]];\n            for (let i = 0; i < p.length; i++) {\n                if (p[i] === 0) continue;\n                result[i + j] ^= this.exp[logP[i] + lq];\n            }\n        }\n        return result;\n    }\n\n    public power(x: number, power: number) {\n        return this.exp[(this.log[x] * power) % this.size];\n    }\n\n    private multiplyNoLut(x: number, y: number) {\n        let result = 0;\n        while (y > 0) {\n            if ((y & 1) !== 0) result = result ^ x;\n            y = y >> 1;\n            x = x << 1;\n            if (x > this.size) {\n                x = x ^ this.prime;\n            }\n        }\n        return result;\n    }\n}\n\nexport class ReedSolomon {\n    private readonly galoisField = new GaloisField();\n\n    computeErrorCorrection(data: ByteArray, ecLength: number) {\n        const { length } = data;\n        if (length + ecLength > this.galoisField.size) throw new UnexpectedDataError(\"Message is too long\");\n\n        const generator = this.generatePolynom(ecLength);\n        const { length: generatorLength } = generator;\n        const buffer = new ByteArray(length + generatorLength - 1);\n        buffer.set(data, 0);\n        for (let i = 0; i < length; i++) {\n            const coef = buffer[i];\n            if (coef === 0) continue;\n            for (let j = 0; j < generatorLength; j++) {\n                buffer[i + j] ^= this.galoisField.multiply(generator[j], coef);\n            }\n        }\n        return buffer.slice(length);\n    }\n\n    private generatePolynom(ecLength: number) {\n        let result = [1];\n        for (let i = 0; i < ecLength; i++) {\n            result = this.galoisField.multiplyPolynom(result, [1, this.galoisField.power(2, i)]);\n        }\n        return result;\n    }\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,SAAS,2BAA2B;AACpC,SAAS,iBAAiB;AAE1B,MAAM,YAAY;AAAA,EAKd,YACqB,QAAQ,KACzB,YAAY,GACZ,QAAQ,GACV;AAHmB;AAIjB,SAAK,OAAO,KAAK,MAAM,KAAK,IAAI,GAAG,KAAK,IAAI,CAAC;AAC7C,QAAI,IAAI;AACR,aAAS,IAAI,GAAG,IAAI,KAAK,MAAM,KAAK;AAChC,WAAK,IAAI,CAAC,IAAI;AACd,WAAK,IAAI,CAAC,IAAI;AACd,UAAI,KAAK,cAAc,GAAG,SAAS;AAAA,IACvC;AAEA,aAAS,IAAI,KAAK,MAAM,IAAI,KAAK,OAAO,GAAG,KAAK;AAC5C,WAAK,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI;AAAA,IACxC;AAAA,EACJ;AAAA,EApBiB,MAAM,IAAI,MAAc;AAAA,EACxB,MAAM,IAAI,MAAc;AAAA,EAChC;AAAA,EAoBF,SAAS,GAAW,GAAW;AAClC,QAAI,MAAM,KAAK,MAAM,EAAG,QAAO;AAC/B,WAAO,KAAK,KAAK,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,KAAK,IAAI;AAAA,EAC3D;AAAA,EAEO,gBAAgB,GAAa,GAAa;AAC7C,UAAM,SAAS,IAAI,MAAc;AACjC,UAAM,OAAO,IAAI,MAAc;AAC/B,aAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AAC/B,WAAK,CAAC,IAAI,KAAK,IAAI,EAAE,CAAC,CAAC;AAAA,IAC3B;AACA,aAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AAC/B,UAAI,EAAE,CAAC,MAAM,EAAG;AAChB,YAAM,KAAK,KAAK,IAAI,EAAE,CAAC,CAAC;AACxB,eAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AAC/B,YAAI,EAAE,CAAC,MAAM,EAAG;AAChB,eAAO,IAAI,CAAC,KAAK,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE;AAAA,MAC1C;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EAEO,MAAM,GAAW,OAAe;AACnC,WAAO,KAAK,IAAK,KAAK,IAAI,CAAC,IAAI,QAAS,KAAK,IAAI;AAAA,EACrD;AAAA,EAEQ,cAAc,GAAW,GAAW;AACxC,QAAI,SAAS;AACb,WAAO,IAAI,GAAG;AACV,WAAK,IAAI,OAAO,EAAG,UAAS,SAAS;AACrC,UAAI,KAAK;AACT,UAAI,KAAK;AACT,UAAI,IAAI,KAAK,MAAM;AACf,YAAI,IAAI,KAAK;AAAA,MACjB;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AACJ;AAEO,MAAM,YAAY;AAAA,EACJ,cAAc,IAAI,YAAY;AAAA,EAE/C,uBAAuB,MAAiB,UAAkB;AACtD,UAAM,EAAE,OAAO,IAAI;AACnB,QAAI,SAAS,WAAW,KAAK,YAAY,KAAM,OAAM,IAAI,oBAAoB,qBAAqB;AAElG,UAAM,YAAY,KAAK,gBAAgB,QAAQ;AAC/C,UAAM,EAAE,QAAQ,gBAAgB,IAAI;AACpC,UAAM,SAAS,IAAI,UAAU,SAAS,kBAAkB,CAAC;AACzD,WAAO,IAAI,MAAM,CAAC;AAClB,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC7B,YAAM,OAAO,OAAO,CAAC;AACrB,UAAI,SAAS,EAAG;AAChB,eAAS,IAAI,GAAG,IAAI,iBAAiB,KAAK;AACtC,eAAO,IAAI,CAAC,KAAK,KAAK,YAAY,SAAS,UAAU,CAAC,GAAG,IAAI;AAAA,MACjE;AAAA,IACJ;AACA,WAAO,OAAO,MAAM,MAAM;AAAA,EAC9B;AAAA,EAEQ,gBAAgB,UAAkB;AACtC,QAAI,SAAS,CAAC,CAAC;AACf,aAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAC/B,eAAS,KAAK,YAAY,gBAAgB,QAAQ,CAAC,GAAG,KAAK,YAAY,MAAM,GAAG,CAAC,CAAC,CAAC;AAAA,IACvF;AACA,WAAO;AAAA,EACX;AACJ;",
  "names": []
}
