{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/MicrowaveOvenControlCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport {\n    Attribute,\n    FixedAttribute,\n    OptionalFixedAttribute,\n    Command,\n    TlvNoResponse,\n    OptionalCommand\n} from \"../Cluster.js\";\nimport { TlvUInt8, TlvUInt16, TlvUInt32 } from \"../../tlv/TlvNumber.js\";\nimport { TlvArray } from \"../../tlv/TlvArray.js\";\nimport { BitFlag } from \"../../schema/BitmapSchema.js\";\nimport { TlvOptionalField, TlvObject, TlvField } from \"../../tlv/TlvObject.js\";\nimport { TlvBoolean } from \"../../tlv/TlvBoolean.js\";\nimport { TypeFromSchema } from \"../../tlv/TlvSchema.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace MicrowaveOvenControl {\n    /**\n     * These are optional features supported by MicrowaveOvenControlCluster.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.4\n     */\n    export enum Feature {\n        /**\n         * PowerAsNumber (PWRNUM)\n         *\n         * Power is specified as a unitless number or a percentage\n         */\n        PowerAsNumber = \"PowerAsNumber\",\n\n        /**\n         * PowerInWatts (WATTS)\n         *\n         * Power is specified in Watts\n         */\n        PowerInWatts = \"PowerInWatts\",\n\n        /**\n         * PowerNumberLimits (PWRLMTS)\n         *\n         * Supports the limit attributes used with the PWRNUM feature\n         */\n        PowerNumberLimits = \"PowerNumberLimits\"\n    }\n\n    /**\n     * Input to the MicrowaveOvenControl setCookingParameters command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.6.2\n     */\n    export const TlvSetCookingParametersRequest = TlvObject({\n        /**\n         * This field shall indicate the value to which the CurrentMode attribute of the Microwave Oven Mode cluster\n         * should be set. The value of this field shall be one from the list of SupportedModes from the Microwave Oven\n         * Mode cluster.\n         *\n         * If this field is missing, the CurrentMode attribute shall be set to a mode having the Normal mode tag.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.6.2.1\n         */\n        cookMode: TlvOptionalField(0, TlvUInt8),\n\n        /**\n         * This field shall indicate the CookTime associated with the operation of the device. The value of this field\n         * shall be subject to the constraints of the CookTime attribute of this cluster.\n         *\n         * If this field is missing, the CookTime attribute shall be set to 30 seconds by the server.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.6.2.2\n         */\n        cookTime: TlvOptionalField(1, TlvUInt32.bound({ min: 1 })),\n\n        /**\n         * This field shall indicate the PowerSetting associated with the operation of the device. The value of this\n         * field shall be subject to the constraints of the PowerSetting attribute of this cluster. If the PowerSetting\n         * field does not conform to the constraints of the PowerSetting attribute, the server shall return a\n         * CONSTRAINT_ERROR status.\n         *\n         * If this field is missing, the PowerSetting attribute shall be set to 100 if MaxPower is not supported by the\n         * server, otherwise it shall be set to MaxPower if the MaxPower attribute is supported by the server.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.6.2.3\n         */\n        powerSetting: TlvOptionalField(2, TlvUInt8),\n\n        /**\n         * This field shall indicate the value to which the SelectedWattIndex attribute is set. If the value of this\n         * field is greater than or equal to the length of the SupportedWatts attribute list, the server shall return a\n         * CONSTRAINT_ERROR status and the value of the SelectedWattIndex attribute shall be unchanged.\n         *\n         * If this field is missing, the SelectedWattIndex attribute shall be set by the server to the index associated\n         * with the highest Watt setting for the selected CookMode.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.6.2.4\n         */\n        wattSettingIndex: TlvOptionalField(3, TlvUInt8),\n\n        /**\n         * This field shall indicate whether or not oven operation shall be started when the command is received.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.6.2.5\n         */\n        startAfterSetting: TlvOptionalField(4, TlvBoolean)\n    });\n\n    /**\n     * Input to the MicrowaveOvenControl setCookingParameters command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.6.2\n     */\n    export interface SetCookingParametersRequest extends TypeFromSchema<typeof TlvSetCookingParametersRequest> {}\n\n    /**\n     * Input to the MicrowaveOvenControl addMoreTime command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.6.3\n     */\n    export const TlvAddMoreTimeRequest = TlvObject({\n        /**\n         * This field shall indicate the number of seconds to be added to the CookTime attribute.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.6.3.1\n         */\n        timeToAdd: TlvField(0, TlvUInt32.bound({ min: 1 }))\n    });\n\n    /**\n     * Input to the MicrowaveOvenControl addMoreTime command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.6.3\n     */\n    export interface AddMoreTimeRequest extends TypeFromSchema<typeof TlvAddMoreTimeRequest> {}\n\n    /**\n     * A MicrowaveOvenControlCluster supports these elements if it supports feature PowerAsNumber.\n     */\n    export const PowerAsNumberComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * Indicates the power level associated with the operation of the device.\n             *\n             * If the MinPower, MaxPower, and PowerStep attributes are not supported, the minimum value of this\n             * attribute shall be 10, the maximum value of this attribute shall be 100, the value shall be in even\n             * multiples of 10, and the default value shall be 100.\n             *\n             * If the MinPower, MaxPower, and PowerStep attributes are supported:\n             *\n             *   \u2022 The value of this attribute shall be between MinPower and MaxPower inclusive.\n             *\n             *   \u2022 The value of this attribute shall be an integer multiple of PowerStep.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.5.3\n             */\n            powerSetting: Attribute(0x2, TlvUInt8)\n        }\n    });\n\n    /**\n     * A MicrowaveOvenControlCluster supports these elements if it supports feature PowerNumberLimits.\n     */\n    export const PowerNumberLimitsComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * Indicates the minimum power level that can be set on the server. The value of this attribute shall be\n             * less than or equal to the value of MaxPower. The value of this attribute\n             *\n             * shall be an integer multiple of PowerStep.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.5.4\n             */\n            minPower: FixedAttribute(0x3, TlvUInt8.bound({ min: 1 }), { default: 10 }),\n\n            /**\n             * Indicates the maximum power level that can be set on the server. The value of this attribute shall be\n             * greater than or equal to the value of MinPower. The value of this attribute shall be an integer multiple\n             * of PowerStep.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.5.5\n             */\n            maxPower: FixedAttribute(0x4, TlvUInt8.bound({ max: 100 }), { default: 100 }),\n\n            /**\n             * Indicates the increment of power that can be set on the server.\n             *\n             * For example, if MinPower is 1, MaxPower is 10, and PowerSetting can be set to any integer between\n             * MinPower and MaxPower, PowerStep would be set to 1.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.5.6\n             */\n            powerStep: FixedAttribute(0x5, TlvUInt8, { default: 10 })\n        }\n    });\n\n    /**\n     * A MicrowaveOvenControlCluster supports these elements if it supports feature PowerInWatts.\n     */\n    export const PowerInWattsComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * Indicates the list of power levels (in W) supported by the server.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.5.7\n             */\n            supportedWatts: FixedAttribute(0x6, TlvArray(TlvUInt16, { minLength: 1, maxLength: 10 })),\n\n            /**\n             * Indicates the index into the list of SupportedWatts of the currently selected power setting.\n             *\n             * The index shall be a valid index into the SupportedWatts list.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.5.8\n             */\n            selectedWattIndex: Attribute(0x7, TlvUInt8)\n        }\n    });\n\n    /**\n     * These elements and properties are present in all MicrowaveOvenControl clusters.\n     */\n    export const Base = MutableCluster.Component({\n        id: 0x5f,\n        name: \"MicrowaveOvenControl\",\n        revision: 1,\n\n        features: {\n            /**\n             * PowerAsNumber\n             *\n             * Power is specified as a unitless number or a percentage\n             */\n            powerAsNumber: BitFlag(0),\n\n            /**\n             * PowerInWatts\n             *\n             * Power is specified in Watts\n             */\n            powerInWatts: BitFlag(1),\n\n            /**\n             * PowerNumberLimits\n             *\n             * Supports the limit attributes used with the PWRNUM feature\n             */\n            powerNumberLimits: BitFlag(2)\n        },\n\n        attributes: {\n            /**\n             * Indicates the total cook time associated with the operation of the device.\n             *\n             * This attribute shall remain unchanged during the operation of the oven unless the value is changed via a\n             * command or out-of-band action.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.5.1\n             */\n            cookTime: Attribute(0x0, TlvUInt32.bound({ min: 1 }), { default: 30 }),\n\n            /**\n             * Indicates the maximum value to which the CookTime attribute can be set.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.5.2\n             */\n            maxCookTime: FixedAttribute(0x1, TlvUInt32.bound({ min: 1, max: 86400 })),\n\n            /**\n             * Indicates the rating, in Watts, of the microwave power of the oven.\n             *\n             * Supporting this attribute can assist clients in suggesting cooking settings for various foods and\n             * beverages.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.5.9\n             */\n            wattRating: OptionalFixedAttribute(0x8, TlvUInt16)\n        },\n\n        commands: {\n            /**\n             * This command is used to set the cooking parameters associated with the operation of the device.\n             *\n             * This command supports the following fields:\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.6.2\n             */\n            setCookingParameters: Command(0x0, TlvSetCookingParametersRequest, 0x0, TlvNoResponse),\n\n            /**\n             * This command is used to add more time to the CookTime attribute of the server. This command supports\n             * these fields:\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13.6.3\n             */\n            addMoreTime: OptionalCommand(0x1, TlvAddMoreTimeRequest, 0x1, TlvNoResponse)\n        },\n\n        /**\n         * This metadata controls which MicrowaveOvenControlCluster elements matter.js activates for specific feature\n         * combinations.\n         */\n        extensions: MutableCluster.Extensions(\n            { flags: { powerAsNumber: true }, component: PowerAsNumberComponent },\n            { flags: { powerNumberLimits: true }, component: PowerNumberLimitsComponent },\n            { flags: { powerInWatts: true }, component: PowerInWattsComponent },\n            { flags: { powerNumberLimits: true, powerAsNumber: false }, component: false },\n            { flags: { powerAsNumber: true, powerInWatts: true }, component: false },\n            { flags: { powerAsNumber: false, powerInWatts: false }, component: false }\n        )\n    });\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster.ExtensibleOnly(Base);\n\n    /**\n     * This cluster defines the requirements for the Microwave Oven Control cluster.\n     *\n     * This cluster has dependencies with the Operational State and Microwave Oven Mode clusters. The Operational State\n     * cluster and the Microwave Oven Mode clusters, or derivatives of those clusters shall appear on the same endpoint\n     * as this cluster.\n     *\n     * Per the Matter specification you cannot use {@link MicrowaveOvenControlCluster} without enabling certain feature\n     * combinations. You must use the {@link with} factory method to obtain a working cluster.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 8.13\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    const PWRNUM = { powerAsNumber: true };\n    const PWRLMTS = { powerNumberLimits: true };\n    const WATTS = { powerInWatts: true };\n\n    /**\n     * @see {@link Complete}\n     */\n    export const CompleteInstance = MutableCluster({\n        id: Base.id,\n        name: Base.name,\n        revision: Base.revision,\n        features: Base.features,\n\n        attributes: {\n            ...Base.attributes,\n            powerSetting: MutableCluster.AsConditional(\n                PowerAsNumberComponent.attributes.powerSetting,\n                { mandatoryIf: [PWRNUM] }\n            ),\n            minPower: MutableCluster.AsConditional(\n                PowerNumberLimitsComponent.attributes.minPower,\n                { mandatoryIf: [PWRLMTS] }\n            ),\n            maxPower: MutableCluster.AsConditional(\n                PowerNumberLimitsComponent.attributes.maxPower,\n                { mandatoryIf: [PWRLMTS] }\n            ),\n            powerStep: MutableCluster.AsConditional(\n                PowerNumberLimitsComponent.attributes.powerStep,\n                { mandatoryIf: [PWRLMTS] }\n            ),\n            supportedWatts: MutableCluster.AsConditional(\n                PowerInWattsComponent.attributes.supportedWatts,\n                { mandatoryIf: [WATTS] }\n            ),\n            selectedWattIndex: MutableCluster.AsConditional(\n                PowerInWattsComponent.attributes.selectedWattIndex,\n                { mandatoryIf: [WATTS] }\n            )\n        },\n\n        commands: Base.commands\n    });\n\n    /**\n     * This cluster supports all MicrowaveOvenControl features. It may support illegal feature combinations.\n     *\n     * If you use this cluster you must manually specify which features are active and ensure the set of active\n     * features is legal per the Matter specification.\n     */\n    export interface Complete extends Identity<typeof CompleteInstance> {}\n\n    export const Complete: Complete = CompleteInstance;\n}\n\nexport type MicrowaveOvenControlCluster = MicrowaveOvenControl.Cluster;\nexport const MicrowaveOvenControlCluster = MicrowaveOvenControl.Cluster;\nClusterRegistry.register(MicrowaveOvenControl.Complete);\n"],
  "mappings": "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",
  "names": ["MicrowaveOvenControl", "Feature"]
}
