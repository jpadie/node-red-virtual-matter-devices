{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/EthernetNetworkDiagnosticsCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { Attribute, Command, TlvNoResponse, AccessLevel, OptionalAttribute } from \"../Cluster.js\";\nimport { TlvUInt64, TlvEnum } from \"../../tlv/TlvNumber.js\";\nimport { TlvNoArguments } from \"../../tlv/TlvNoArguments.js\";\nimport { BitFlag } from \"../../schema/BitmapSchema.js\";\nimport { TlvNullable } from \"../../tlv/TlvNullable.js\";\nimport { TlvBoolean } from \"../../tlv/TlvBoolean.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace EthernetNetworkDiagnostics {\n    /**\n     * These are optional features supported by EthernetNetworkDiagnosticsCluster.\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.16.4\n     */\n    export enum Feature {\n        /**\n         * PacketCounts (PKTCNT)\n         *\n         * Node makes available the counts for the number of received and transmitted packets on the ethernet interface.\n         */\n        PacketCounts = \"PacketCounts\",\n\n        /**\n         * ErrorCounts (ERRCNT)\n         *\n         * Node makes available the counts for the number of errors that have occurred during the reception and\n         * transmission of packets on the ethernet interface.\n         */\n        ErrorCounts = \"ErrorCounts\"\n    }\n\n    /**\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.16.5.1\n     */\n    export enum PhyRate {\n        /**\n         * PHY rate is 10Mbps\n         */\n        Rate10M = 0,\n\n        /**\n         * PHY rate is 100Mbps\n         */\n        Rate100M = 1,\n\n        /**\n         * PHY rate is 1Gbps\n         */\n        Rate1G = 2,\n\n        /**\n         * PHY rate is 2.5Gbps\n         */\n        Rate25G = 3,\n\n        /**\n         * PHY rate is 5Gbps\n         */\n        Rate5G = 4,\n\n        /**\n         * PHY rate is 10Gbps\n         */\n        Rate10G = 5,\n\n        /**\n         * PHY rate is 40Gbps\n         */\n        Rate40G = 6,\n\n        /**\n         * PHY rate is 100Gbps\n         */\n        Rate100G = 7,\n\n        /**\n         * PHY rate is 200Gbps\n         */\n        Rate200G = 8,\n\n        /**\n         * PHY rate is 400Gbps\n         */\n        Rate400G = 9\n    }\n\n    /**\n     * A EthernetNetworkDiagnosticsCluster supports these elements if it supports feature PacketCounts.\n     */\n    export const PacketCountsComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * The PacketRxCount attribute shall indicate the number of packets that have been received on the ethernet\n             * network interface. The PacketRxCount attribute shall be reset to 0 upon a reboot of the Node.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.16.6.3\n             */\n            packetRxCount: Attribute(0x2, TlvUInt64, { omitChanges: true, default: 0 }),\n\n            /**\n             * The PacketTxCount attribute shall indicate the number of packets that have been successfully transferred\n             * on the ethernet network interface. The PacketTxCount attribute shall be reset to 0 upon a reboot of the\n             * Node.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.16.6.4\n             */\n            packetTxCount: Attribute(0x3, TlvUInt64, { omitChanges: true, default: 0 })\n        }\n    });\n\n    /**\n     * A EthernetNetworkDiagnosticsCluster supports these elements if it supports feature ErrorCounts.\n     */\n    export const ErrorCountsComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * The TxErrCount attribute shall indicate the number of failed packet transmissions that have occurred on\n             * the ethernet network interface. The TxErrCount attribute shall be reset to 0 upon a\n             *\n             * reboot of the Node.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.16.6.5\n             */\n            txErrCount: Attribute(0x4, TlvUInt64, { omitChanges: true, default: 0 }),\n\n            /**\n             * The CollisionCount attribute shall indicate the number of collisions that have occurred while attempting\n             * to transmit a packet on the ethernet network interface. The CollisionCount attribute shall be reset to 0\n             * upon a reboot of the Node.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.16.6.6\n             */\n            collisionCount: Attribute(0x5, TlvUInt64, { omitChanges: true, default: 0 }),\n\n            /**\n             * The OverrunCount attribute shall indicate the number of packets dropped either at ingress or egress, due\n             * to lack of buffer memory to retain all packets on the ethernet network interface. The OverrunCount\n             * attribute shall be reset to 0 upon a reboot of the Node.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.16.6.7\n             */\n            overrunCount: Attribute(0x6, TlvUInt64, { omitChanges: true, default: 0 })\n        }\n    });\n\n    /**\n     * A EthernetNetworkDiagnosticsCluster supports these elements if it supports features PacketCounts or ErrorCounts.\n     */\n    export const PacketCountsOrErrorCountsComponent = MutableCluster.Component({\n        commands: {\n            /**\n             * Reception of this command shall reset the following attributes to 0:\n             *\n             *   \u2022 PacketRxCount\n             *\n             *   \u2022 PacketTxCount\n             *\n             *   \u2022 TxErrCount\n             *\n             *   \u2022 CollisionCount\n             *\n             *   \u2022 OverrunCount\n             *\n             * This command has no associated data.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.16.7.1\n             */\n            resetCounts: Command(0x0, TlvNoArguments, 0x0, TlvNoResponse, { invokeAcl: AccessLevel.Manage })\n        }\n    });\n\n    /**\n     * These elements and properties are present in all EthernetNetworkDiagnostics clusters.\n     */\n    export const Base = MutableCluster.Component({\n        id: 0x37,\n        name: \"EthernetNetworkDiagnostics\",\n        revision: 1,\n\n        features: {\n            /**\n             * PacketCounts\n             *\n             * Node makes available the counts for the number of received and transmitted packets on the ethernet\n             * interface.\n             */\n            packetCounts: BitFlag(0),\n\n            /**\n             * ErrorCounts\n             *\n             * Node makes available the counts for the number of errors that have occurred during the reception and\n             * transmission of packets on the ethernet interface.\n             */\n            errorCounts: BitFlag(1)\n        },\n\n        attributes: {\n            /**\n             * The PHYRate attribute shall indicate the current nominal, usable speed at the top of the physical layer\n             * of the Node. A value of null shall indicate that the interface is not currently configured or\n             * operational.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.16.6.1\n             */\n            phyRate: OptionalAttribute(0x0, TlvNullable(TlvEnum<PhyRate>()), { default: null }),\n\n            /**\n             * The FullDuplex attribute shall indicate if the Node is currently utilizing the full-duplex operating\n             * mode. A value of null shall indicate that the interface is not currently configured or operational.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.16.6.2\n             */\n            fullDuplex: OptionalAttribute(0x1, TlvNullable(TlvBoolean), { default: null }),\n\n            /**\n             * The CarrierDetect attribute shall indicate the value of the Carrier Detect control signal present on the\n             * ethernet network interface. A value of null shall indicate that the interface is not currently\n             * configured or operational.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.16.6.8\n             */\n            carrierDetect: OptionalAttribute(0x7, TlvNullable(TlvBoolean), { omitChanges: true, default: null }),\n\n            /**\n             * The TimeSinceReset attribute shall indicate the duration of time, in minutes, that it has been since the\n             * ethernet network interface has reset for any reason.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.16.6.9\n             */\n            timeSinceReset: OptionalAttribute(0x8, TlvUInt64, { omitChanges: true, default: 0 })\n        },\n\n        /**\n         * This metadata controls which EthernetNetworkDiagnosticsCluster elements matter.js activates for specific\n         * feature combinations.\n         */\n        extensions: MutableCluster.Extensions(\n            { flags: { packetCounts: true }, component: PacketCountsComponent },\n            { flags: { errorCounts: true }, component: ErrorCountsComponent },\n            { flags: { packetCounts: true }, component: PacketCountsOrErrorCountsComponent },\n            { flags: { errorCounts: true }, component: PacketCountsOrErrorCountsComponent }\n        )\n    });\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster(Base);\n\n    /**\n     * The Ethernet Network Diagnostics Cluster provides a means to acquire standardized diagnostics metrics that may\n     * be used by a Node to assist a user or Administrator in diagnosing potential problems. The Ethernet Network\n     * Diagnostics Cluster attempts to centralize all metrics that are relevant to a potential Ethernet connection to a\n     * Node.\n     *\n     * EthernetNetworkDiagnosticsCluster supports optional features that you can enable with the\n     * EthernetNetworkDiagnosticsCluster.with() factory method.\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.16\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    const PKTCNT = { packetCounts: true };\n    const ERRCNT = { errorCounts: true };\n\n    /**\n     * @see {@link Complete}\n     */\n    export const CompleteInstance = MutableCluster({\n        id: Cluster.id,\n        name: Cluster.name,\n        revision: Cluster.revision,\n        features: Cluster.features,\n\n        attributes: {\n            ...Cluster.attributes,\n            packetRxCount: MutableCluster.AsConditional(\n                PacketCountsComponent.attributes.packetRxCount,\n                { mandatoryIf: [PKTCNT] }\n            ),\n            packetTxCount: MutableCluster.AsConditional(\n                PacketCountsComponent.attributes.packetTxCount,\n                { mandatoryIf: [PKTCNT] }\n            ),\n            txErrCount: MutableCluster.AsConditional(\n                ErrorCountsComponent.attributes.txErrCount,\n                { mandatoryIf: [ERRCNT] }\n            ),\n            collisionCount: MutableCluster.AsConditional(\n                ErrorCountsComponent.attributes.collisionCount,\n                { mandatoryIf: [ERRCNT] }\n            ),\n            overrunCount: MutableCluster.AsConditional(\n                ErrorCountsComponent.attributes.overrunCount,\n                { mandatoryIf: [ERRCNT] }\n            )\n        },\n\n        commands: {\n            resetCounts: MutableCluster.AsConditional(\n                PacketCountsOrErrorCountsComponent.commands.resetCounts,\n                { mandatoryIf: [PKTCNT, ERRCNT] }\n            )\n        }\n    });\n\n    /**\n     * This cluster supports all EthernetNetworkDiagnostics features. It may support illegal feature combinations.\n     *\n     * If you use this cluster you must manually specify which features are active and ensure the set of active\n     * features is legal per the Matter specification.\n     */\n    export interface Complete extends Identity<typeof CompleteInstance> {}\n\n    export const Complete: Complete = CompleteInstance;\n}\n\nexport type EthernetNetworkDiagnosticsCluster = EthernetNetworkDiagnostics.Cluster;\nexport const EthernetNetworkDiagnosticsCluster = EthernetNetworkDiagnostics.Cluster;\nClusterRegistry.register(EthernetNetworkDiagnostics.Complete);\n"],
  "mappings": "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",
  "names": ["EthernetNetworkDiagnostics", "Feature", "PhyRate"]
}
