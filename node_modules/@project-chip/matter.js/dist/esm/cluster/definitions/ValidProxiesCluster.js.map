{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/ValidProxiesCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { FixedAttribute, Command } from \"../Cluster.js\";\nimport { TlvArray } from \"../../tlv/TlvArray.js\";\nimport { TlvField, TlvObject } from \"../../tlv/TlvObject.js\";\nimport { TlvNodeId } from \"../../datatype/NodeId.js\";\nimport { TypeFromSchema } from \"../../tlv/TlvSchema.js\";\nimport { TlvNoArguments } from \"../../tlv/TlvNoArguments.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace ValidProxies {\n    /**\n     * Encapsulates the Node ID of a Valid Proxy.\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 9.15.14.4.1\n     */\n    export const TlvValidProxy = TlvObject({ nodeId: TlvField(1, TlvNodeId) });\n\n    /**\n     * Encapsulates the Node ID of a Valid Proxy.\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 9.15.14.4.1\n     */\n    export interface ValidProxy extends TypeFromSchema<typeof TlvValidProxy> {}\n\n    /**\n     * This command is used during proxy discovery, as specified in Section 9.15.7, \u201CProxy Discovery & Assignment Flow\u201D.\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 9.15.14.6.2\n     */\n    export const TlvGetValidProxiesResponse = TlvObject({ proxyNodeIdList: TlvField(0, TlvArray(TlvNodeId)) });\n\n    /**\n     * This command is used during proxy discovery, as specified in Section 9.15.7, \u201CProxy Discovery & Assignment Flow\u201D.\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 9.15.14.6.2\n     */\n    export interface GetValidProxiesResponse extends TypeFromSchema<typeof TlvGetValidProxiesResponse> {}\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster({\n        id: 0x44,\n        name: \"ValidProxies\",\n        revision: 1,\n\n        attributes: {\n            /**\n             * List of valid proxies that can proxy this Node. Each entry in this list is fabric-scoped.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 9.15.14.5.1\n             */\n            validProxyList: FixedAttribute(0x0, TlvArray(TlvValidProxy), { persistent: true, default: [] })\n        },\n\n        commands: {\n            /**\n             * This command is used during proxy discovery, as specified in Section 9.15.7, \u201CProxy Discovery &\n             * Assignment Flow\u201D.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 9.15.14.6.1\n             */\n            getValidProxiesRequest: Command(0x0, TlvNoArguments, 0x1, TlvGetValidProxiesResponse)\n        }\n    });\n\n    /**\n     * This cluster provides a means for a device to be told of the valid set of possible proxies that can proxy\n     * subscriptions on its behalf as per Section 9.15.7, \u201CProxy Discovery & Assignment Flow\u201D.\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 9.15.14\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    export const Complete = Cluster;\n}\n\nexport type ValidProxiesCluster = ValidProxies.Cluster;\nexport const ValidProxiesCluster = ValidProxies.Cluster;\nClusterRegistry.register(ValidProxies.Complete);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,sBAAsB;AAC/B,SAAS,gBAAgB,eAAe;AACxC,SAAS,gBAAgB;AACzB,SAAS,UAAU,iBAAiB;AACpC,SAAS,iBAAiB;AAE1B,SAAS,sBAAsB;AAE/B,SAAS,uBAAuB;AAEzB,IAAU;AAAA,CAAV,CAAUA,kBAAV;AAMI,EAAMA,cAAA,gBAAgB,UAAU,EAAE,QAAQ,SAAS,GAAG,SAAS,EAAE,CAAC;AAclE,EAAMA,cAAA,6BAA6B,UAAU,EAAE,iBAAiB,SAAS,GAAG,SAAS,SAAS,CAAC,EAAE,CAAC;AAYlG,EAAMA,cAAA,kBAAkB,eAAe;AAAA,IAC1C,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,IAEV,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMR,gBAAgB,eAAe,GAAK,SAASA,cAAA,aAAa,GAAG,EAAE,YAAY,MAAM,SAAS,CAAC,EAAE,CAAC;AAAA,IAClG;AAAA,IAEA,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAON,wBAAwB,QAAQ,GAAK,gBAAgB,GAAKA,cAAA,0BAA0B;AAAA,IACxF;AAAA,EACJ,CAAC;AAUM,EAAMA,cAAA,UAAmBA,cAAA;AACzB,EAAMA,cAAA,WAAWA,cAAA;AAAA,GAlEX;AAsEV,MAAM,sBAAsB,aAAa;AAChD,gBAAgB,SAAS,aAAa,QAAQ;",
  "names": ["ValidProxies"]
}
