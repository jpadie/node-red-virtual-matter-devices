{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/ResourceMonitoringCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport {\n    Attribute,\n    FixedAttribute,\n    OptionalAttribute,\n    OptionalWritableAttribute,\n    OptionalCommand,\n    TlvNoResponse\n} from \"../Cluster.js\";\nimport { TlvPercent, TlvEnum, TlvEpochS } from \"../../tlv/TlvNumber.js\";\nimport { TlvArray } from \"../../tlv/TlvArray.js\";\nimport { TlvField, TlvObject } from \"../../tlv/TlvObject.js\";\nimport { TlvString } from \"../../tlv/TlvString.js\";\nimport { TypeFromSchema } from \"../../tlv/TlvSchema.js\";\nimport { BitFlag } from \"../../schema/BitmapSchema.js\";\nimport { TlvBoolean } from \"../../tlv/TlvBoolean.js\";\nimport { TlvNullable } from \"../../tlv/TlvNullable.js\";\nimport { TlvNoArguments } from \"../../tlv/TlvNoArguments.js\";\nimport { Identity } from \"../../util/Type.js\";\n\nexport namespace ResourceMonitoring {\n    /**\n     * These are optional features supported by ResourceMonitoringCluster.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.8.4\n     */\n    export enum Feature {\n        /**\n         * Condition (CON)\n         *\n         * Supports monitoring the condition of the resource in percentage\n         */\n        Condition = \"Condition\",\n\n        /**\n         * Warning (WRN)\n         *\n         * Supports warning indication\n         */\n        Warning = \"Warning\",\n\n        /**\n         * ReplacementProductList (REP)\n         *\n         * Supports specifying the list of replacement products\n         */\n        ReplacementProductList = \"ReplacementProductList\"\n    }\n\n    /**\n     * Indicates the direction in which the condition of the resource changes over time.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.8.5.1\n     */\n    export enum DegradationDirection {\n        /**\n         * The degradation of the resource is indicated by an upwards moving/increasing value\n         */\n        Up = 0,\n\n        /**\n         * The degradation of the resource is indicated by a downwards moving/decreasing value\n         */\n        Down = 1\n    }\n\n    /**\n     * Indicate the type of identifier used to describe the product. Devices SHOULD use globally-recognized IDs over\n     * OEM specific ones.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.8.5.3\n     */\n    export enum ProductIdentifierType {\n        /**\n         * 12-digit Universal Product Code\n         */\n        Upc = 0,\n\n        /**\n         * 8-digit Global Trade Item Number\n         */\n        Gtin8 = 1,\n\n        /**\n         * 13-digit European Article Number\n         */\n        Ean = 2,\n\n        /**\n         * 14-digit Global Trade Item Number\n         */\n        Gtin14 = 3,\n\n        /**\n         * Original Equipment Manufacturer part number\n         */\n        Oem = 4\n    }\n\n    /**\n     * Indicates the product identifier that can be used as a replacement for the resource.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.8.5.4\n     */\n    export const TlvReplacementProduct = TlvObject({\n        productIdentifierType: TlvField(0, TlvEnum<ProductIdentifierType>()),\n        productIdentifierValue: TlvField(1, TlvString.bound({ maxLength: 20 }))\n    });\n\n    /**\n     * Indicates the product identifier that can be used as a replacement for the resource.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.8.5.4\n     */\n    export interface ReplacementProduct extends TypeFromSchema<typeof TlvReplacementProduct> {}\n\n    /**\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.8.5.2\n     */\n    export enum ChangeIndication {\n        /**\n         * Resource is in good condition, no intervention required\n         */\n        Ok = 0,\n\n        /**\n         * Resource will be exhausted soon, intervention will shortly be required\n         */\n        Warning = 1,\n\n        /**\n         * Resource is exhausted, immediate intervention is required\n         */\n        Critical = 2\n    }\n\n    /**\n     * A ResourceMonitoringCluster supports these elements if it supports feature Condition.\n     */\n    export const ConditionComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * Indicates the current condition of the resource in percent.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.8.6.1\n             */\n            condition: Attribute(0x0, TlvPercent),\n\n            /**\n             * Indicates the direction of change for the condition of the resource over time, which helps to determine\n             * whether a higher or lower condition value is considered optimal.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.8.6.2\n             */\n            degradationDirection: FixedAttribute(0x1, TlvEnum<DegradationDirection>())\n        }\n    });\n\n    /**\n     * A ResourceMonitoringCluster supports these elements if it supports feature ReplacementProductList.\n     */\n    export const ReplacementProductListComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * Indicates the list of supported products that may be used as replacements for the current resource. Each\n             * item in this list represents a unique ReplacementProductStruct.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.8.6.6\n             */\n            replacementProductList: FixedAttribute(\n                0x5,\n                TlvArray(TlvReplacementProduct, { maxLength: 5 }),\n                { default: [] }\n            )\n        }\n    });\n\n    /**\n     * ResourceMonitoring is a derived cluster, not to be used directly. These elements are present in all clusters\n     * derived from ResourceMonitoring.\n     */\n    export const Base = MutableCluster.Component({\n        features: {\n            /**\n             * Condition\n             *\n             * Supports monitoring the condition of the resource in percentage\n             */\n            condition: BitFlag(0),\n\n            /**\n             * Warning\n             *\n             * Supports warning indication\n             */\n            warning: BitFlag(1),\n\n            /**\n             * ReplacementProductList\n             *\n             * Supports specifying the list of replacement products\n             */\n            replacementProductList: BitFlag(2)\n        },\n\n        name: \"ResourceMonitoring\",\n        revision: 1,\n\n        attributes: {\n            /**\n             * This attribute shall be populated with a value from ChangeIndicationEnum that is indicative of the\n             * current requirement to change the resource.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.8.6.3\n             */\n            changeIndication: Attribute(0x2, TlvEnum<ChangeIndication>(), { default: ChangeIndication.Ok }),\n\n            /**\n             * Indicates whether a resource is currently installed. A value of true shall indicate that a resource is\n             * installed. A value of false shall indicate that a resource is not installed.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.8.6.4\n             */\n            inPlaceIndicator: OptionalAttribute(0x3, TlvBoolean),\n\n            /**\n             * This attribute may indicates the time at which the resource has been changed, if supported by the\n             * server. The attribute shall be null if it was never set or is unknown.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.8.6.5\n             */\n            lastChangedTime: OptionalWritableAttribute(\n                0x4,\n                TlvNullable(TlvEpochS),\n                { persistent: true, default: null }\n            )\n        },\n\n        commands: {\n            /**\n             * Upon receipt, the device shall reset the Condition and ChangeIndicator attributes, indicating full\n             * resource availability and readiness for use, as initially configured. Invocation of this command may\n             * cause the LastChangedTime to be updated automatically based on the clock of the server, if the server\n             * supports setting the attribute.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.8.7.1\n             */\n            resetCondition: OptionalCommand(0x0, TlvNoArguments, 0x0, TlvNoResponse)\n        },\n\n        /**\n         * This metadata controls which ResourceMonitoringCluster elements matter.js activates for specific feature\n         * combinations.\n         */\n        extensions: MutableCluster.Extensions(\n            { flags: { condition: true }, component: ConditionComponent },\n            { flags: { replacementProductList: true }, component: ReplacementProductListComponent }\n        )\n    });\n\n    const CON = { condition: true };\n    const REP = { replacementProductList: true };\n\n    /**\n     * @see {@link Complete}\n     */\n    export const CompleteInstance = MutableCluster.Component({\n        name: Base.name,\n        revision: Base.revision,\n        features: Base.features,\n\n        attributes: {\n            ...Base.attributes,\n            condition: MutableCluster.AsConditional(ConditionComponent.attributes.condition, { mandatoryIf: [CON] }),\n            degradationDirection: MutableCluster.AsConditional(\n                ConditionComponent.attributes.degradationDirection,\n                { mandatoryIf: [CON] }\n            ),\n            replacementProductList: MutableCluster.AsConditional(\n                ReplacementProductListComponent.attributes.replacementProductList,\n                { mandatoryIf: [REP] }\n            )\n        },\n\n        commands: Base.commands\n    });\n\n    /**\n     * This cluster supports all ResourceMonitoring features. It may support illegal feature combinations.\n     *\n     * If you use this cluster you must manually specify which features are active and ensure the set of active\n     * features is legal per the Matter specification.\n     */\n    export interface Complete extends Identity<typeof CompleteInstance> {}\n\n    export const Complete: Complete = CompleteInstance;\n}\n"],
  "mappings": "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",
  "names": ["ResourceMonitoring", "Feature", "DegradationDirection", "ProductIdentifierType", "ChangeIndication"]
}
