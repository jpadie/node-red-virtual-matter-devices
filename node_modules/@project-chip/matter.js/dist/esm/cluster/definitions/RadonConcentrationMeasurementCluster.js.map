{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/RadonConcentrationMeasurementCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { ConcentrationMeasurement } from \"./ConcentrationMeasurementCluster.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace RadonConcentrationMeasurement {\n    export const Base = { ...ConcentrationMeasurement.Base, id: 0x42f, name: \"RadonConcentrationMeasurement\" } as const;\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster.ExtensibleOnly(Base);\n\n    /**\n     * This alias specializes the semantics of {@link ConcentrationMeasurement.Base}.\n     *\n     * Per the Matter specification you cannot use {@link RadonConcentrationMeasurementCluster} without enabling\n     * certain feature combinations. You must use the {@link with} factory method to obtain a working cluster.\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n\n    /**\n     * This cluster supports all RadonConcentrationMeasurement features. It may support illegal feature combinations.\n     *\n     * If you use this cluster you must manually specify which features are active and ensure the set of active\n     * features is legal per the Matter specification.\n     */\n    export const CompleteInstance = MutableCluster({\n        ...ConcentrationMeasurement.Complete,\n        id: 0x42f,\n        name: \"RadonConcentrationMeasurement\"\n    });\n\n    export interface Complete extends Identity<typeof CompleteInstance> {}\n    export const Complete: Complete = CompleteInstance;\n}\n\nexport type RadonConcentrationMeasurementCluster = RadonConcentrationMeasurement.Cluster;\nexport const RadonConcentrationMeasurementCluster = RadonConcentrationMeasurement.Cluster;\nClusterRegistry.register(RadonConcentrationMeasurement.Complete);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,sBAAsB;AAC/B,SAAS,gCAAgC;AAEzC,SAAS,uBAAuB;AAEzB,IAAU;AAAA,CAAV,CAAUA,mCAAV;AACI,EAAMA,+BAAA,OAAO,EAAE,GAAG,yBAAyB,MAAM,IAAI,MAAO,MAAM,gCAAgC;AAKlG,EAAMA,+BAAA,kBAAkB,eAAe,eAAeA,+BAAA,IAAI;AAU1D,EAAMA,+BAAA,UAAmBA,+BAAA;AAQzB,EAAMA,+BAAA,mBAAmB,eAAe;AAAA,IAC3C,GAAG,yBAAyB;AAAA,IAC5B,IAAI;AAAA,IACJ,MAAM;AAAA,EACV,CAAC;AAGM,EAAMA,+BAAA,WAAqBA,+BAAA;AAAA,GA/BrB;AAmCV,MAAM,uCAAuC,8BAA8B;AAClF,gBAAgB,SAAS,8BAA8B,QAAQ;",
  "names": ["RadonConcentrationMeasurement"]
}
