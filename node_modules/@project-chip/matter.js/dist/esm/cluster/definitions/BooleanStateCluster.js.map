{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/BooleanStateCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { Attribute, OptionalEvent, EventPriority } from \"../Cluster.js\";\nimport { TlvBoolean } from \"../../tlv/TlvBoolean.js\";\nimport { TlvField, TlvObject } from \"../../tlv/TlvObject.js\";\nimport { TypeFromSchema } from \"../../tlv/TlvSchema.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace BooleanState {\n    /**\n     * Body of the BooleanState stateChange event\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.7.5.1\n     */\n    export const TlvStateChangeEvent = TlvObject({\n        /**\n         * This field shall indicate the new value of the StateValue attribute.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.7.5.1.1\n         */\n        stateValue: TlvField(0, TlvBoolean)\n    });\n\n    /**\n     * Body of the BooleanState stateChange event\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.7.5.1\n     */\n    export interface StateChangeEvent extends TypeFromSchema<typeof TlvStateChangeEvent> {}\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster({\n        id: 0x45,\n        name: \"BooleanState\",\n        revision: 1,\n\n        attributes: {\n            /**\n             * This represents a boolean state.\n             *\n             * The semantics of this boolean state are defined by the device type using this cluster.\n             *\n             * For example, in a Contact Sensor device type, FALSE=open or no contact, TRUE=closed or contact.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.7.4.1\n             */\n            stateValue: Attribute(0x0, TlvBoolean)\n        },\n\n        events: {\n            /**\n             * If this event is supported, it shall be generated when the StateValue attribute changes.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.7.5.1\n             */\n            stateChange: OptionalEvent(0x0, EventPriority.Info, TlvStateChangeEvent)\n        }\n    });\n\n    /**\n     * This cluster provides an interface to a boolean state.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.7\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    export const Complete = Cluster;\n}\n\nexport type BooleanStateCluster = BooleanState.Cluster;\nexport const BooleanStateCluster = BooleanState.Cluster;\nClusterRegistry.register(BooleanState.Complete);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,sBAAsB;AAC/B,SAAS,WAAW,eAAe,qBAAqB;AACxD,SAAS,kBAAkB;AAC3B,SAAS,UAAU,iBAAiB;AAGpC,SAAS,uBAAuB;AAEzB,IAAU;AAAA,CAAV,CAAUA,kBAAV;AAMI,EAAMA,cAAA,sBAAsB,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMzC,YAAY,SAAS,GAAG,UAAU;AAAA,EACtC,CAAC;AAYM,EAAMA,cAAA,kBAAkB,eAAe;AAAA,IAC1C,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,IAEV,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUR,YAAY,UAAU,GAAK,UAAU;AAAA,IACzC;AAAA,IAEA,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMJ,aAAa,cAAc,GAAK,cAAc,MAAMA,cAAA,mBAAmB;AAAA,IAC3E;AAAA,EACJ,CAAC;AASM,EAAMA,cAAA,UAAmBA,cAAA;AACzB,EAAMA,cAAA,WAAWA,cAAA;AAAA,GA7DX;AAiEV,MAAM,sBAAsB,aAAa;AAChD,gBAAgB,SAAS,aAAa,QAAQ;",
  "names": ["BooleanState"]
}
