{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/LowPowerCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { Command, TlvNoResponse } from \"../Cluster.js\";\nimport { TlvNoArguments } from \"../../tlv/TlvNoArguments.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace LowPower {\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster({\n        id: 0x508,\n        name: \"LowPower\",\n        revision: 1,\n\n        commands: {\n            /**\n             * This command shall put the device into low power mode.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.11.4.1\n             */\n            sleep: Command(0x0, TlvNoArguments, 0x0, TlvNoResponse)\n        }\n    });\n\n    /**\n     * This cluster provides an interface for managing low power mode on a device.\n     *\n     * This cluster would be supported on an endpoint that represents a physical device with a low power mode. This\n     * cluster provides a sleep() command to allow clients to manually put the device into low power mode. There is no\n     * command here to wake up a sleeping device because that operation often involves other protocols such as Wake On\n     * LAN. Most devices automatically enter low power mode based upon inactivity.\n     *\n     * The cluster server for Low Power is implemented by a device that supports a low power mode, such as a TV,\n     * Set-top box, or Smart Speaker.\n     *\n     * NOTE\n     *\n     * We have considered a \u201CDisableLowPowerMode\u201D command but have not added it due to suspected issues with energy\n     * consumption regulations. This can be added in the future.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.11\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    export const Complete = Cluster;\n}\n\nexport type LowPowerCluster = LowPower.Cluster;\nexport const LowPowerCluster = LowPower.Cluster;\nClusterRegistry.register(LowPower.Complete);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,sBAAsB;AAC/B,SAAS,SAAS,qBAAqB;AACvC,SAAS,sBAAsB;AAE/B,SAAS,uBAAuB;AAEzB,IAAU;AAAA,CAAV,CAAUA,cAAV;AAII,EAAMA,UAAA,kBAAkB,eAAe;AAAA,IAC1C,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,IAEV,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMN,OAAO,QAAQ,GAAK,gBAAgB,GAAK,aAAa;AAAA,IAC1D;AAAA,EACJ,CAAC;AAsBM,EAAMA,UAAA,UAAmBA,UAAA;AACzB,EAAMA,UAAA,WAAWA,UAAA;AAAA,GAxCX;AA4CV,MAAM,kBAAkB,SAAS;AACxC,gBAAgB,SAAS,SAAS,QAAQ;",
  "names": ["LowPower"]
}
