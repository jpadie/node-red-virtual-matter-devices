{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/IlluminanceMeasurementCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { Attribute, OptionalAttribute } from \"../Cluster.js\";\nimport { TlvUInt16, TlvUInt8 } from \"../../tlv/TlvNumber.js\";\nimport { TlvNullable } from \"../../tlv/TlvNullable.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace IlluminanceMeasurement {\n    /**\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.2.4.1\n     */\n    export enum LightSensorType {\n        /**\n         * Indicates photodiode sensor type\n         */\n        Photodiode = 0,\n\n        /**\n         * Indicates CMOS sensor type\n         */\n        Cmos = 1\n    }\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster({\n        id: 0x400,\n        name: \"IlluminanceMeasurement\",\n        revision: 3,\n\n        attributes: {\n            /**\n             * The MeasuredValue attribute represents the illuminance in Lux (symbol lx) as follows:\n             *\n             *   \u2022 MeasuredValue = 10,000 x log10(illuminance) + 1,\n             *\n             * where 1 lx <= illuminance <= 3.576 Mlx, corresponding to a MeasuredValue in the range 1 to 0xFFFE. The\n             * MeasuredValue attribute can take the following values:\n             *\n             *   \u2022 0 indicates a value of illuminance that is too low to be measured,\n             *\n             *   \u2022 MinMeasuredValue <= MeasuredValue <= MaxMeasuredValue under normal circumstances,\n             *\n             *   \u2022 null indicates that the illuminance measurement is invalid.\n             *\n             * The MeasuredValue attribute is updated continuously as new measurements are made.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.2.5.1\n             */\n            measuredValue: Attribute(0x0, TlvNullable(TlvUInt16), { default: 0 }),\n\n            /**\n             * The MinMeasuredValue attribute indicates the minimum value of MeasuredValue that can be measured. A\n             * value of null indicates that this attribute is not defined. See Measured Value for more details.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.2.5.2\n             */\n            minMeasuredValue: Attribute(0x1, TlvNullable(TlvUInt16.bound({ min: 1 }))),\n\n            /**\n             * The MaxMeasuredValue attribute indicates the maximum value of MeasuredValue that can be measured. A\n             * value of null indicates that this attribute is not defined. See Measured Value for more details.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.2.5.3\n             */\n            maxMeasuredValue: Attribute(0x2, TlvNullable(TlvUInt16.bound({ max: 65534 }))),\n\n            /**\n             * See Measured Value.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.2.5.4\n             */\n            tolerance: OptionalAttribute(0x3, TlvUInt16.bound({ max: 2048 })),\n\n            /**\n             * The LightSensorType attribute specifies the electronic type of the light sensor. This attribute shall be\n             * set to one of the non-reserved values listed in LightSensorTypeEnum or null in case the sensor type is\n             * unknown.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.2.5.5\n             */\n            lightSensorType: OptionalAttribute(0x4, TlvNullable(TlvUInt8), { default: null })\n        }\n    });\n\n    /**\n     * The Illuminance Measurement cluster provides an interface to illuminance measurement functionality, including\n     * configuration and provision of notifications of illuminance measurements.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.2\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    export const Complete = Cluster;\n}\n\nexport type IlluminanceMeasurementCluster = IlluminanceMeasurement.Cluster;\nexport const IlluminanceMeasurementCluster = IlluminanceMeasurement.Cluster;\nClusterRegistry.register(IlluminanceMeasurement.Complete);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,sBAAsB;AAC/B,SAAS,WAAW,yBAAyB;AAC7C,SAAS,WAAW,gBAAgB;AACpC,SAAS,mBAAmB;AAE5B,SAAS,uBAAuB;AAEzB,IAAU;AAAA,CAAV,CAAUA,4BAAV;AAII,MAAK;AAAL,IAAKC,qBAAL;AAIH,IAAAA,kCAAA,gBAAa,KAAb;AAKA,IAAAA,kCAAA,UAAO,KAAP;AAAA,KATQ,kBAAAD,wBAAA,oBAAAA,wBAAA;AAeL,EAAMA,wBAAA,kBAAkB,eAAe;AAAA,IAC1C,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,IAEV,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmBR,eAAe,UAAU,GAAK,YAAY,SAAS,GAAG,EAAE,SAAS,EAAE,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQpE,kBAAkB,UAAU,GAAK,YAAY,UAAU,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQzE,kBAAkB,UAAU,GAAK,YAAY,UAAU,MAAM,EAAE,KAAK,MAAM,CAAC,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAO7E,WAAW,kBAAkB,GAAK,UAAU,MAAM,EAAE,KAAK,KAAK,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAShE,iBAAiB,kBAAkB,GAAK,YAAY,QAAQ,GAAG,EAAE,SAAS,KAAK,CAAC;AAAA,IACpF;AAAA,EACJ,CAAC;AAUM,EAAMA,wBAAA,UAAmBA,wBAAA;AACzB,EAAMA,wBAAA,WAAWA,wBAAA;AAAA,GAxFX;AA4FV,MAAM,gCAAgC,uBAAuB;AACpE,gBAAgB,SAAS,uBAAuB,QAAQ;",
  "names": ["IlluminanceMeasurement", "LightSensorType"]
}
