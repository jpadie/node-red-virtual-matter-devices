/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { MutableCluster } from "../mutation/MutableCluster.js";
import { BitFlag } from "../../schema/BitmapSchema.js";
import { FixedAttribute, Attribute } from "../Cluster.js";
import { TlvArray } from "../../tlv/TlvArray.js";
import { ModeBase } from "./ModeBaseCluster.js";
import { TlvUInt8 } from "../../tlv/TlvNumber.js";
import { ClusterRegistry } from "../ClusterRegistry.js";
var MicrowaveOvenMode;
((MicrowaveOvenMode2) => {
  let Feature;
  ((Feature2) => {
    Feature2["OnOff"] = "OnOff";
  })(Feature = MicrowaveOvenMode2.Feature || (MicrowaveOvenMode2.Feature = {}));
  let ModeTag;
  ((ModeTag2) => {
    ModeTag2[ModeTag2["Normal"] = 16384] = "Normal";
    ModeTag2[ModeTag2["Defrost"] = 16385] = "Defrost";
  })(ModeTag = MicrowaveOvenMode2.ModeTag || (MicrowaveOvenMode2.ModeTag = {}));
  MicrowaveOvenMode2.Base = MutableCluster.Component({
    id: 94,
    name: "MicrowaveOvenMode",
    revision: 1,
    features: {
      /**
       * OnOff
       *
       * This feature creates a dependency between an OnOff cluster instance and this cluster instance on the
       * same endpoint. See OnMode for more information.
       *
       * @see {@link MatterSpecification.v13.Cluster} ยง 1.10.4.1
       */
      onOff: BitFlag(0)
    },
    attributes: {
      /**
       * @see {@link MatterSpecification.v13.Cluster} ยง 8.12.4
       */
      supportedModes: FixedAttribute(
        0,
        TlvArray(ModeBase.TlvModeOption, { minLength: 2, maxLength: 255 }),
        { default: [] }
      ),
      /**
       * @see {@link MatterSpecification.v13.Cluster} ยง 8.12.4
       */
      currentMode: Attribute(1, TlvUInt8, { scene: true, persistent: true })
    },
    /**
     * This metadata controls which MicrowaveOvenModeCluster elements matter.js activates for specific feature
     * combinations.
     */
    extensions: MutableCluster.Extensions()
  });
  MicrowaveOvenMode2.ClusterInstance = MutableCluster(MicrowaveOvenMode2.Base);
  MicrowaveOvenMode2.Cluster = MicrowaveOvenMode2.ClusterInstance;
  MicrowaveOvenMode2.Complete = MicrowaveOvenMode2.Cluster;
})(MicrowaveOvenMode || (MicrowaveOvenMode = {}));
const MicrowaveOvenModeCluster = MicrowaveOvenMode.Cluster;
ClusterRegistry.register(MicrowaveOvenMode.Complete);
export {
  MicrowaveOvenMode,
  MicrowaveOvenModeCluster
};
//# sourceMappingURL=MicrowaveOvenModeCluster.js.map
