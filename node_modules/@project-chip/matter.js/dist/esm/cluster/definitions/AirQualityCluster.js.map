{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/AirQualityCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { BitFlag } from \"../../schema/BitmapSchema.js\";\nimport { Attribute } from \"../Cluster.js\";\nimport { TlvEnum } from \"../../tlv/TlvNumber.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace AirQuality {\n    /**\n     * These are optional features supported by AirQualityCluster.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.9.4\n     */\n    export enum Feature {\n        /**\n         * Fair (FAIR)\n         *\n         * Cluster supports the Fair air quality level\n         */\n        Fair = \"Fair\",\n\n        /**\n         * Moderate (MOD)\n         *\n         * Cluster supports the Moderate air quality level\n         */\n        Moderate = \"Moderate\",\n\n        /**\n         * VeryPoor (VPOOR)\n         *\n         * Cluster supports the Very poor air quality level\n         */\n        VeryPoor = \"VeryPoor\",\n\n        /**\n         * ExtremelyPoor (XPOOR)\n         *\n         * Cluster supports the Extremely poor air quality level\n         */\n        ExtremelyPoor = \"ExtremelyPoor\"\n    }\n\n    /**\n     * The AirQualityEnum provides a representation of the quality of the analyzed air. It is up to the device\n     * manufacturer to determine the mapping between the measured values and their corresponding enumeration values.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.9.5.1\n     */\n    export enum AirQualityEnum {\n        /**\n         * The air quality is unknown.\n         */\n        Unknown = 0,\n\n        /**\n         * The air quality is good.\n         */\n        Good = 1,\n\n        /**\n         * The air quality is fair.\n         */\n        Fair = 2,\n\n        /**\n         * The air quality is moderate.\n         */\n        Moderate = 3,\n\n        /**\n         * The air quality is poor.\n         */\n        Poor = 4,\n\n        /**\n         * The air quality is very poor.\n         */\n        VeryPoor = 5,\n\n        /**\n         * The air quality is extremely poor.\n         */\n        ExtremelyPoor = 6\n    }\n\n    /**\n     * These elements and properties are present in all AirQuality clusters.\n     */\n    export const Base = MutableCluster.Component({\n        id: 0x5b,\n        name: \"AirQuality\",\n        revision: 1,\n\n        features: {\n            /**\n             * Fair\n             *\n             * Cluster supports the Fair air quality level\n             */\n            fair: BitFlag(0),\n\n            /**\n             * Moderate\n             *\n             * Cluster supports the Moderate air quality level\n             */\n            moderate: BitFlag(1),\n\n            /**\n             * VeryPoor\n             *\n             * Cluster supports the Very poor air quality level\n             */\n            veryPoor: BitFlag(2),\n\n            /**\n             * ExtremelyPoor\n             *\n             * Cluster supports the Extremely poor air quality level\n             */\n            extremelyPoor: BitFlag(3)\n        },\n\n        attributes: {\n            /**\n             * Indicates a value from AirQualityEnum that is indicative of the currently measured air quality.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.9.6.1\n             */\n            airQuality: Attribute(0x0, TlvEnum<AirQualityEnum>(), { default: AirQualityEnum.Unknown })\n        },\n\n        /**\n         * This metadata controls which AirQualityCluster elements matter.js activates for specific feature\n         * combinations.\n         */\n        extensions: MutableCluster.Extensions()\n    });\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster(Base);\n\n    /**\n     * This cluster provides an interface to air quality classification using distinct levels with human-readable\n     * labels.\n     *\n     * AirQualityCluster supports optional features that you can enable with the AirQualityCluster.with() factory\n     * method.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.9\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    export const Complete = Cluster;\n}\n\nexport type AirQualityCluster = AirQuality.Cluster;\nexport const AirQualityCluster = AirQuality.Cluster;\nClusterRegistry.register(AirQuality.Complete);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,sBAAsB;AAC/B,SAAS,eAAe;AACxB,SAAS,iBAAiB;AAC1B,SAAS,eAAe;AAExB,SAAS,uBAAuB;AAEzB,IAAU;AAAA,CAAV,CAAUA,gBAAV;AAMI,MAAK;AAAL,IAAKC,aAAL;AAMH,IAAAA,SAAA,UAAO;AAOP,IAAAA,SAAA,cAAW;AAOX,IAAAA,SAAA,cAAW;AAOX,IAAAA,SAAA,mBAAgB;AAAA,KA3BR,UAAAD,YAAA,YAAAA,YAAA;AAoCL,MAAK;AAAL,IAAKE,oBAAL;AAIH,IAAAA,gCAAA,aAAU,KAAV;AAKA,IAAAA,gCAAA,UAAO,KAAP;AAKA,IAAAA,gCAAA,UAAO,KAAP;AAKA,IAAAA,gCAAA,cAAW,KAAX;AAKA,IAAAA,gCAAA,UAAO,KAAP;AAKA,IAAAA,gCAAA,cAAW,KAAX;AAKA,IAAAA,gCAAA,mBAAgB,KAAhB;AAAA,KAlCQ,iBAAAF,YAAA,mBAAAA,YAAA;AAwCL,EAAMA,YAAA,OAAO,eAAe,UAAU;AAAA,IACzC,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,IAEV,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMN,MAAM,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOf,UAAU,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOnB,UAAU,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOnB,eAAe,QAAQ,CAAC;AAAA,IAC5B;AAAA,IAEA,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMR,YAAY,UAAU,GAAK,QAAwB,GAAG,EAAE,SAAS,gBAAuB,CAAC;AAAA,IAC7F;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,YAAY,eAAe,WAAW;AAAA,EAC1C,CAAC;AAKM,EAAMA,YAAA,kBAAkB,eAAeA,YAAA,IAAI;AAa3C,EAAMA,YAAA,UAAmBA,YAAA;AACzB,EAAMA,YAAA,WAAWA,YAAA;AAAA,GAtJX;AA0JV,MAAM,oBAAoB,WAAW;AAC5C,gBAAgB,SAAS,WAAW,QAAQ;",
  "names": ["AirQuality", "Feature", "AirQualityEnum"]
}
