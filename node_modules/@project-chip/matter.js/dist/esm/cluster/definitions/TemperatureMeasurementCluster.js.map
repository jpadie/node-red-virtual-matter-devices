{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/TemperatureMeasurementCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { Attribute, OptionalAttribute } from \"../Cluster.js\";\nimport { TlvInt16, TlvUInt16 } from \"../../tlv/TlvNumber.js\";\nimport { TlvNullable } from \"../../tlv/TlvNullable.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace TemperatureMeasurement {\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster({\n        id: 0x402,\n        name: \"TemperatureMeasurement\",\n        revision: 4,\n\n        attributes: {\n            /**\n             * Indicates the measured temperature. The null value indicates that the temperature is unknown.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.3.4.1\n             */\n            measuredValue: Attribute(0x0, TlvNullable(TlvInt16)),\n\n            /**\n             * Indicates the minimum value of MeasuredValue that is capable of being measured. See Measured Value for\n             * more details.\n             *\n             * The null value indicates that the value is not available.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.3.4.2\n             */\n            minMeasuredValue: Attribute(0x1, TlvNullable(TlvInt16.bound({ min: -27315 })), { default: -27315 }),\n\n            /**\n             * This attribute indicates the maximum value of MeasuredValue that is capable of being measured. See\n             * Measured Value for more details.\n             *\n             * The null value indicates that the value is not available.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.3.4.3\n             */\n            maxMeasuredValue: Attribute(0x2, TlvNullable(TlvInt16.bound({ max: 32767 })), { default: 32767 }),\n\n            /**\n             * See Measured Value.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.3.4.4\n             */\n            tolerance: OptionalAttribute(0x3, TlvUInt16.bound({ max: 2048 }), { default: 0 })\n        }\n    });\n\n    /**\n     * This cluster provides an interface to temperature measurement functionality, including configuration and\n     * provision of notifications of temperature measurements.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.3\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    export const Complete = Cluster;\n}\n\nexport type TemperatureMeasurementCluster = TemperatureMeasurement.Cluster;\nexport const TemperatureMeasurementCluster = TemperatureMeasurement.Cluster;\nClusterRegistry.register(TemperatureMeasurement.Complete);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,sBAAsB;AAC/B,SAAS,WAAW,yBAAyB;AAC7C,SAAS,UAAU,iBAAiB;AACpC,SAAS,mBAAmB;AAE5B,SAAS,uBAAuB;AAEzB,IAAU;AAAA,CAAV,CAAUA,4BAAV;AAII,EAAMA,wBAAA,kBAAkB,eAAe;AAAA,IAC1C,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,IAEV,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMR,eAAe,UAAU,GAAK,YAAY,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUnD,kBAAkB,UAAU,GAAK,YAAY,SAAS,MAAM,EAAE,KAAK,OAAO,CAAC,CAAC,GAAG,EAAE,SAAS,OAAO,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUlG,kBAAkB,UAAU,GAAK,YAAY,SAAS,MAAM,EAAE,KAAK,MAAM,CAAC,CAAC,GAAG,EAAE,SAAS,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOhG,WAAW,kBAAkB,GAAK,UAAU,MAAM,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,CAAC;AAAA,IACpF;AAAA,EACJ,CAAC;AAUM,EAAMA,wBAAA,UAAmBA,wBAAA;AACzB,EAAMA,wBAAA,WAAWA,wBAAA;AAAA,GAvDX;AA2DV,MAAM,gCAAgC,uBAAuB;AACpE,gBAAgB,SAAS,uBAAuB,QAAQ;",
  "names": ["TemperatureMeasurement"]
}
