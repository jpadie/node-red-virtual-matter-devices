{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/ThreadNetworkDiagnosticsCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport {\n    Attribute,\n    Command,\n    TlvNoResponse,\n    AccessLevel,\n    OptionalAttribute,\n    OptionalEvent,\n    EventPriority\n} from \"../Cluster.js\";\nimport { TlvUInt64, TlvUInt16, TlvUInt32, TlvEnum, TlvUInt8, TlvInt8 } from \"../../tlv/TlvNumber.js\";\nimport { TlvNoArguments } from \"../../tlv/TlvNoArguments.js\";\nimport { BitFlag } from \"../../schema/BitmapSchema.js\";\nimport { TlvNullable } from \"../../tlv/TlvNullable.js\";\nimport { TlvString, TlvByteString } from \"../../tlv/TlvString.js\";\nimport { TlvArray } from \"../../tlv/TlvArray.js\";\nimport { TlvField, TlvObject } from \"../../tlv/TlvObject.js\";\nimport { TlvBoolean } from \"../../tlv/TlvBoolean.js\";\nimport { TypeFromSchema } from \"../../tlv/TlvSchema.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace ThreadNetworkDiagnostics {\n    /**\n     * These are optional features supported by ThreadNetworkDiagnosticsCluster.\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.4\n     */\n    export enum Feature {\n        /**\n         * PacketCounts (PKTCNT)\n         *\n         * Server supports the counts for the number of received and transmitted packets on the Thread interface.\n         */\n        PacketCounts = \"PacketCounts\",\n\n        /**\n         * ErrorCounts (ERRCNT)\n         *\n         * Server supports the counts for the number of errors that have occurred during the reception and transmission\n         * of packets on the Thread interface.\n         */\n        ErrorCounts = \"ErrorCounts\",\n\n        /**\n         * MleCounts (MLECNT)\n         *\n         * Server supports the counts for various MLE layer happenings.\n         */\n        MleCounts = \"MleCounts\",\n\n        /**\n         * MacCounts (MACCNT)\n         *\n         * Server supports the counts for various MAC layer happenings.\n         */\n        MacCounts = \"MacCounts\"\n    }\n\n    /**\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.3\n     */\n    export enum RoutingRole {\n        /**\n         * Unspecified routing role.\n         */\n        Unspecified = 0,\n\n        /**\n         * The Node does not currently have a role as a result of the Thread interface not currently being configured\n         * or operational.\n         */\n        Unassigned = 1,\n\n        /**\n         * The Node acts as a Sleepy End Device with RX-off-when-idle sleepy radio behavior.\n         */\n        SleepyEndDevice = 2,\n\n        /**\n         * The Node acts as an End Device without RX- off-when-idle sleepy radio behavior.\n         */\n        EndDevice = 3,\n\n        /**\n         * The Node acts as an Router Eligible End Device.\n         */\n        Reed = 4,\n\n        /**\n         * The Node acts as a Router Device.\n         */\n        Router = 5,\n\n        /**\n         * The Node acts as a Leader Device.\n         */\n        Leader = 6\n    }\n\n    /**\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.4\n     */\n    export const TlvNeighborTable = TlvObject({\n        /**\n         * This field shall specify the IEEE 802.15.4 extended address for the neighboring Node.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.4.1\n         */\n        extAddress: TlvField(0, TlvUInt64),\n\n        /**\n         * This field shall specify the duration of time, in seconds, since a frame has been received from the\n         * neighboring Node.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.4.2\n         */\n        age: TlvField(1, TlvUInt32),\n\n        /**\n         * This field shall specify the RLOC16 of the neighboring Node.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.4.3\n         */\n        rloc16: TlvField(2, TlvUInt16),\n\n        /**\n         * This field shall specify the number of link layer frames that have been received from the neighboring node.\n         * This field shall be reset to 0 upon a reboot of the Node.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.4.4\n         */\n        linkFrameCounter: TlvField(3, TlvUInt32),\n\n        /**\n         * This field shall specify the number of Mesh Link Establishment frames that have been received from the\n         * neighboring node. This field shall be reset to 0 upon a reboot of the Node.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.4.5\n         */\n        mleFrameCounter: TlvField(4, TlvUInt32),\n\n        /**\n         * This field shall specify the implementation specific mix of IEEE 802.15.4 PDU receive quality indicators,\n         * scaled from 0 to 255.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.4.6\n         */\n        lqi: TlvField(5, TlvUInt8),\n\n        /**\n         * This field SHOULD specify the average RSSI across all received frames from the neighboring Node since the\n         * receiving Node\u2019s last reboot. If there is no known received frames this field SHOULD have the value of null.\n         * This field shall have the units of dBm, having the range -128 dBm to 0 dBm.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.4.7\n         */\n        averageRssi: TlvField(6, TlvNullable(TlvInt8.bound({ max: 0 }))),\n\n        /**\n         * This field shall specify the RSSI of the most recently received frame from the neighboring Node. If there is\n         * no known last received frame the LastRssi field SHOULD have the value of null. This field shall have the\n         * units of dBm, having the range -128 dBm to 0 dBm.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.4.8\n         */\n        lastRssi: TlvField(7, TlvNullable(TlvInt8.bound({ max: 0 }))),\n\n        /**\n         * This field shall specify the percentage of received frames from the neighboring Node that have resulted in\n         * errors.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.4.9\n         */\n        frameErrorRate: TlvField(8, TlvUInt8.bound({ max: 100 })),\n\n        /**\n         * This field shall specify the percentage of received messages from the neighboring Node that have resulted in\n         * errors.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.4.10\n         */\n        messageErrorRate: TlvField(9, TlvUInt8.bound({ max: 100 })),\n\n        /**\n         * This field shall specify if the neighboring Node is capable of receiving frames while the Node is in an idle\n         * state.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.4.11\n         */\n        rxOnWhenIdle: TlvField(10, TlvBoolean),\n\n        /**\n         * This field shall specify if the neighboring Node is a full Thread device.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.4.12\n         */\n        fullThreadDevice: TlvField(11, TlvBoolean),\n\n        /**\n         * This field shall specify if the neighboring Node requires the full Network Data. If set to False, the\n         * neighboring Node only requires the stable Network Data.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.4.13\n         */\n        fullNetworkData: TlvField(12, TlvBoolean),\n\n        /**\n         * This field shall specify if the neighboring Node is a direct child of the Node reporting the NeighborTable\n         * attribute.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.4.14\n         */\n        isChild: TlvField(13, TlvBoolean)\n    });\n\n    /**\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.4\n     */\n    export interface NeighborTable extends TypeFromSchema<typeof TlvNeighborTable> {}\n\n    /**\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.5\n     */\n    export const TlvRouteTable = TlvObject({\n        /**\n         * This field shall specify the IEEE 802.15.4 extended address for the Node for which this route table entry\n         * corresponds.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.5.1\n         */\n        extAddress: TlvField(0, TlvUInt64),\n\n        /**\n         * This field shall specify the RLOC16 for the Node for which this route table entry corresponds.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.5.2\n         */\n        rloc16: TlvField(1, TlvUInt16),\n\n        /**\n         * This field shall specify the Router ID for the Node for which this route table entry corresponds.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.5.3\n         */\n        routerId: TlvField(2, TlvUInt8),\n\n        /**\n         * This field shall specify the Router ID for the next hop in the route to the Node for which this route table\n         * entry corresponds.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.5.4\n         */\n        nextHop: TlvField(3, TlvUInt8),\n\n        /**\n         * This Field shall specify the cost of the route to the Node for which this route table entry corresponds.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.5.5\n         */\n        pathCost: TlvField(4, TlvUInt8),\n\n        /**\n         * This field shall specify the implementation specific mix of IEEE 802.15.4 PDU receive quality indicators,\n         * scaled from 0 to 255, from the perspective of the Node reporting the neighbor table.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.5.6\n         */\n        lqiIn: TlvField(5, TlvUInt8),\n\n        /**\n         * This field shall specify the implementation specific mix of IEEE 802.15.4 PDU receive quality indicators,\n         * scaled from 0 to 255, from the perspective of the Node specified within the NextHop field.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.5.7\n         */\n        lqiOut: TlvField(6, TlvUInt8),\n\n        /**\n         * This field shall specify the duration of time, in seconds, since a frame has been received from the Node for\n         * which this route table entry corresponds.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.5.8\n         */\n        age: TlvField(7, TlvUInt8),\n\n        /**\n         * This field shall specify if the router ID as defined within the RouterId field has been allocated.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.5.9\n         */\n        allocated: TlvField(8, TlvBoolean),\n\n        /**\n         * This field shall specify if a link has been established to the Node for which this route table entry\n         *\n         * corresponds.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.5.10\n         */\n        linkEstablished: TlvField(9, TlvBoolean)\n    });\n\n    /**\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.5\n     */\n    export interface RouteTable extends TypeFromSchema<typeof TlvRouteTable> {}\n\n    /**\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.6\n     */\n    export const TlvSecurityPolicy = TlvObject({\n        /**\n         * This field shall specify the interval of time, in hours, that Thread security keys are rotated. Null when\n         * there is no dataset configured.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.6.1\n         */\n        rotationTime: TlvField(0, TlvUInt16),\n\n        /**\n         * This field shall specify the flags as specified in Thread 1.3.0 section 8.10.1.15. Null when there is no\n         * dataset configured.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.6.2\n         */\n        flags: TlvField(1, TlvUInt16)\n    });\n\n    /**\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.6\n     */\n    export interface SecurityPolicy extends TypeFromSchema<typeof TlvSecurityPolicy> {}\n\n    /**\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.7\n     */\n    export const TlvOperationalDatasetComponents = TlvObject({\n        /**\n         * This field shall be True if the Node has an active timestamp present, else False.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.7.1\n         */\n        activeTimestampPresent: TlvField(0, TlvBoolean),\n\n        /**\n         * This field shall be True if the Node has a pending timestamp is present, else False.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.7.2\n         */\n        pendingTimestampPresent: TlvField(1, TlvBoolean),\n\n        /**\n         * This field shall be True if the Node has the Thread master key, else False.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.7.3\n         */\n        masterKeyPresent: TlvField(2, TlvBoolean),\n\n        /**\n         * This field shall be True if the Node has the Thread network\u2019s name, else False.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.7.4\n         */\n        networkNamePresent: TlvField(3, TlvBoolean),\n\n        /**\n         * This field shall be True if the Node has an extended Pan ID, else False.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.7.5\n         */\n        extendedPanIdPresent: TlvField(4, TlvBoolean),\n\n        /**\n         * This field shall be True if the Node has the mesh local prefix, else False.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.7.6\n         */\n        meshLocalPrefixPresent: TlvField(5, TlvBoolean),\n\n        /**\n         * This field shall be True if the Node has the Thread network delay set, else False.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.7.7\n         */\n        delayPresent: TlvField(6, TlvBoolean),\n\n        /**\n         * This field shall be True if the Node has a Pan ID, else False.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.7.8\n         */\n        panIdPresent: TlvField(7, TlvBoolean),\n\n        /**\n         * This field shall be True if the Node has configured an operational channel for the Thread network, else\n         * False.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.7.9\n         */\n        channelPresent: TlvField(8, TlvBoolean),\n\n        /**\n         * This field shall be True if the Node has been configured with the Thread network Pskc, else False.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.7.10\n         */\n        pskcPresent: TlvField(9, TlvBoolean),\n\n        /**\n         * This field shall be True if the Node has been configured with the Thread network security policies, else\n         * False.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.7.11\n         */\n        securityPolicyPresent: TlvField(10, TlvBoolean),\n\n        /**\n         * This field shall be True if the Node has available a mask of available channels, else False.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.7.12\n         */\n        channelMaskPresent: TlvField(11, TlvBoolean)\n    });\n\n    /**\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.7\n     */\n    export interface OperationalDatasetComponents extends TypeFromSchema<typeof TlvOperationalDatasetComponents> {}\n\n    /**\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.1\n     */\n    export enum NetworkFault {\n        /**\n         * Indicates an unspecified fault.\n         */\n        Unspecified = 0,\n\n        /**\n         * Indicates the Thread link is down.\n         */\n        LinkDown = 1,\n\n        /**\n         * Indicates there has been Thread hardware failure.\n         */\n        HardwareFailure = 2,\n\n        /**\n         * Indicates the Thread network is jammed.\n         */\n        NetworkJammed = 3\n    }\n\n    /**\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.5.2\n     */\n    export enum ConnectionStatus {\n        /**\n         * Node is connected\n         */\n        Connected = 0,\n\n        /**\n         * Node is not connected\n         */\n        NotConnected = 1\n    }\n\n    /**\n     * Body of the ThreadNetworkDiagnostics connectionStatus event\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.8.2\n     */\n    export const TlvConnectionStatusEvent = TlvObject({ connectionStatus: TlvField(0, TlvEnum<ConnectionStatus>()) });\n\n    /**\n     * Body of the ThreadNetworkDiagnostics connectionStatus event\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.8.2\n     */\n    export interface ConnectionStatusEvent extends TypeFromSchema<typeof TlvConnectionStatusEvent> {}\n\n    /**\n     * Body of the ThreadNetworkDiagnostics networkFaultChange event\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.8.1\n     */\n    export const TlvNetworkFaultChangeEvent = TlvObject({\n        /**\n         * This field shall represent the set of faults currently detected, as per Section 11.14.5.1, \u201CNetworkFaultEnum\n         * Type\u201D.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.8.1.1\n         */\n        current: TlvField(0, TlvArray(TlvEnum<NetworkFault>(), { maxLength: 4 })),\n\n        /**\n         * This field shall represent the set of faults detected prior to this change event, as per Section 11.14.5.1,\n         * \u201CNetworkFaultEnum Type\u201D.\n         *\n         * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.8.1.2\n         */\n        previous: TlvField(1, TlvArray(TlvEnum<NetworkFault>(), { maxLength: 4 }))\n    });\n\n    /**\n     * Body of the ThreadNetworkDiagnostics networkFaultChange event\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.8.1\n     */\n    export interface NetworkFaultChangeEvent extends TypeFromSchema<typeof TlvNetworkFaultChangeEvent> {}\n\n    /**\n     * A ThreadNetworkDiagnosticsCluster supports these elements if it supports feature ErrorCounts.\n     */\n    export const ErrorCountsComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * The OverrunCount attribute shall indicate the number of packets dropped either at ingress or egress, due\n             * to lack of buffer memory to retain all packets on the ethernet network interface. The OverrunCount\n             * attribute shall be reset to 0 upon a reboot of the Node.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.7\n             */\n            overrunCount: Attribute(0x6, TlvUInt64, { omitChanges: true, default: 0 })\n        },\n\n        commands: {\n            /**\n             * Reception of this command shall reset the following attributes to 0:\n             *\n             *   \u2022 OverrunCount\n             *\n             * This command has no associated data. Upon completion, this command shall send a status code set to a\n             * value of SUCCESS back to the initiator.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.7.1\n             */\n            resetCounts: Command(0x0, TlvNoArguments, 0x0, TlvNoResponse, { invokeAcl: AccessLevel.Manage })\n        }\n    });\n\n    /**\n     * A ThreadNetworkDiagnosticsCluster supports these elements if it supports feature MleCounts.\n     */\n    export const MleCountsComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * The DetachedRoleCount attribute shall indicate the number of times the Node entered the\n             * OT_DEVICE_ROLE_DETACHED role as specified within the Thread specification. This value shall only be\n             * reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.15\n             */\n            detachedRoleCount: OptionalAttribute(0xe, TlvUInt16, { omitChanges: true, default: 0 }),\n\n            /**\n             * The ChildRoleCount attribute shall indicate the number of times the Node entered the\n             * OT_DEVICE_ROLE_CHILD role as specified within the Thread specification. This value shall only be reset\n             * upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.16\n             */\n            childRoleCount: OptionalAttribute(0xf, TlvUInt16, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RouterRoleCount attribute shall indicate the number of times the Node entered the\n             * OT_DEVICE_ROLE_ROUTER role as specified within the Thread specification. This value shall only be reset\n             * upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.17\n             */\n            routerRoleCount: OptionalAttribute(0x10, TlvUInt16, { omitChanges: true, default: 0 }),\n\n            /**\n             * The LeaderRoleCount attribute shall indicate the number of times the Node entered the\n             * OT_DEVICE_ROLE_LEADER role as specified within the Thread specification. This value shall only be reset\n             * upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.18\n             */\n            leaderRoleCount: OptionalAttribute(0x11, TlvUInt16, { omitChanges: true, default: 0 }),\n\n            /**\n             * The AttachAttemptCount attribute shall indicate the number of attempts that have been made to attach to\n             * a Thread network while the Node was detached from all Thread networks. This value shall only be reset\n             * upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.19\n             */\n            attachAttemptCount: OptionalAttribute(0x12, TlvUInt16, { omitChanges: true, default: 0 }),\n\n            /**\n             * The PartitionIdChangeCount attribute shall indicate the number of times that the Thread network that the\n             * Node is connected to has changed its Partition ID. This value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.20\n             */\n            partitionIdChangeCount: OptionalAttribute(0x13, TlvUInt16, { omitChanges: true, default: 0 }),\n\n            /**\n             * The BetterPartitionAttachAttemptCount attribute shall indicate the number of times a Node has attempted\n             * to attach to a different Thread partition that it has determined is better than the partition it is\n             * currently attached to. This value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.21\n             */\n            betterPartitionAttachAttemptCount: OptionalAttribute(0x14, TlvUInt16, { omitChanges: true, default: 0 }),\n\n            /**\n             * The ParentChangeCount attribute shall indicate the number of times a Node has changed its parent. This\n             * value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.22\n             */\n            parentChangeCount: OptionalAttribute(0x15, TlvUInt16, { omitChanges: true, default: 0 })\n        }\n    });\n\n    /**\n     * A ThreadNetworkDiagnosticsCluster supports these elements if it supports feature MacCounts.\n     */\n    export const MacCountsComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * The TxTotalCount attribute shall indicate the total number of unique MAC frame transmission requests.\n             * The TxTotalCount attribute shall only be incremented by 1 for each MAC transmission request regardless\n             * of the amount of CCA failures, CSMA-CA attempts, or retransmissions. This value shall only be reset upon\n             * a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.23\n             */\n            txTotalCount: OptionalAttribute(0x16, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The TxUnicastCount attribute shall indicate the total number of unique unicast MAC frame transmission\n             * requests. The TxUnicastCount attribute shall only be incremented by 1 for each unicast MAC transmission\n             * request regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions. This value shall\n             * only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.24\n             */\n            txUnicastCount: OptionalAttribute(0x17, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The TxBroadcastCount attribute shall indicate the total number of unique broadcast MAC frame\n             * transmission requests. The TxBroadcastCount attribute shall only be incremented by 1 for each broadcast\n             * MAC transmission request regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions.\n             * This value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.25\n             */\n            txBroadcastCount: OptionalAttribute(0x18, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The TxAckRequestedCount attribute shall indicate the total number of unique MAC frame transmission\n             * requests with requested acknowledgment. The TxAckRequestedCount attribute shall only be incremented by 1\n             * for each MAC transmission request with requested acknowledgment regardless of the amount of CCA\n             * failures, CSMA-CA attempts, or retransmissions. This value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.26\n             */\n            txAckRequestedCount: OptionalAttribute(0x19, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The TxAckedCount attribute shall indicate the total number of unique MAC frame transmission requests\n             * that were acked. The TxAckedCount attribute shall only be incremented by 1 for each MAC transmission\n             * request that is acked regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions.\n             * This value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.27\n             */\n            txAckedCount: OptionalAttribute(0x1a, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The TxNoAckRequestedCount attribute shall indicate the total number of unique MAC frame transmission\n             * requests without requested acknowledgment. The TxNoAckRequestedCount attribute shall only be incremented\n             * by 1 for each MAC transmission request that is does not request acknowledgement regardless of the amount\n             * of CCA failures, CSMA-CA attempts, or retransmissions.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.28\n             */\n            txNoAckRequestedCount: OptionalAttribute(0x1b, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The TxDataCount attribute shall indicate the total number of unique MAC Data frame transmission\n             * requests. The TxDataCount attribute shall only be incremented by 1 for each MAC Data frame transmission\n             * request regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions. This value shall\n             * only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.29\n             */\n            txDataCount: OptionalAttribute(0x1c, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The TxDataPollCount attribute shall indicate the total number of unique MAC Data Poll frame transmission\n             * requests. The TxDataPollCount attribute shall only be incremented by 1 for each MAC Data Poll frame\n             * transmission request regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions.\n             * This value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.30\n             */\n            txDataPollCount: OptionalAttribute(0x1d, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The TxBeaconCount attribute shall indicate the total number of unique MAC Beacon frame transmission\n             * requests. The TxBeaconCount attribute shall only be incremented by 1 for each MAC Beacon frame\n             * transmission request regardless of the amount of CCA failures, CSMA-CA attempts, or retransmissions.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.31\n             */\n            txBeaconCount: OptionalAttribute(0x1e, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The TxBeaconRequestCount attribute shall indicate the total number of unique MAC Beacon Request frame\n             * transmission requests. The TxBeaconRequestCount attribute shall only be incremented by 1 for each MAC\n             * Beacon Request frame transmission request regardless of the amount of CCA failures, CSMA-CA attempts, or\n             * retransmissions. This value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.32\n             */\n            txBeaconRequestCount: OptionalAttribute(0x1f, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The TxOtherCount attribute shall indicate the total number of unique MAC frame transmission requests\n             * that are not counted by any other attribute. The TxOtherCount attribute shall only be incremented by 1\n             * for each MAC frame transmission request regardless of the amount of CCA failures, CSMA-CA attempts, or\n             * retransmissions. This value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.33\n             */\n            txOtherCount: OptionalAttribute(0x20, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The TxRetryCount attribute shall indicate the total number of MAC retransmission attempts. The\n             * TxRetryCount attribute shall only be incremented by 1 for each retransmission attempt that may be\n             * triggered by lack of acknowledgement, CSMA/CA failure, or other type of transmission error. This value\n             * shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.34\n             */\n            txRetryCount: OptionalAttribute(0x21, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The TxDirectMaxRetryExpiryCount attribute shall indicate the total number of unique MAC transmission\n             * packets that meet maximal retry limit for direct packets. The TxDirectMaxRetryExpiryCount attribute\n             * shall only be incremented by 1 for each unique MAC transmission packets that meets the maximal retry\n             * limit for direct packets. This value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.35\n             */\n            txDirectMaxRetryExpiryCount: OptionalAttribute(0x22, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The TxIndirectMaxRetryExpiryCount attribute shall indicate the total number of unique MAC transmission\n             * packets that meet maximal retry limit for indirect packets. The TxIndirectMaxRetryExpiryCount attribute\n             * shall only be incremented by 1 for each unique MAC transmission packets that meets the maximal retry\n             * limit for indirect packets. This value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.36\n             */\n            txIndirectMaxRetryExpiryCount: OptionalAttribute(0x23, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The TxErrCcaCount attribute shall indicate the total number of CCA failures. The TxErrCcaCount attribute\n             * shall only be incremented by 1 for each instance of a CCA failure. This value shall only be reset upon a\n             * Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.37\n             */\n            txErrCcaCount: OptionalAttribute(0x24, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The TxErrAbortCount attribute shall indicate the total number of unique MAC transmission request\n             * failures caused by an abort error. The TxErrAbortCount attribute shall only be incremented by 1 for each\n             * unique MAC transmission request failure caused by an abort error.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.38\n             */\n            txErrAbortCount: OptionalAttribute(0x25, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The TxErrBusyChannelCount attribute shall indicate the total number of unique MAC transmission request\n             * failures caused by an error as the result of a busy channel (a CSMA/CA fail). The TxErrBusyChannelCount\n             * attribute shall only be incremented by 1 for each unique MAC transmission request failure caused by a\n             * busy channel such as a CSMA/CA failure.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.39\n             */\n            txErrBusyChannelCount: OptionalAttribute(0x26, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxTotalCount attribute shall indicate the total number of received unique MAC frames. This value\n             * shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.40\n             */\n            rxTotalCount: OptionalAttribute(0x27, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxUnicastCount attribute shall indicate the total number of received unique unicast MAC frames. This\n             * value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.41\n             */\n            rxUnicastCount: OptionalAttribute(0x28, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxBroadcastCount attribute shall indicate the total number of received unique broadcast MAC frames.\n             * This value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.42\n             */\n            rxBroadcastCount: OptionalAttribute(0x29, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxDataCount attribute shall indicate the total number of received unique MAC Data frames. This value\n             * shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.43\n             */\n            rxDataCount: OptionalAttribute(0x2a, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxDataPollCount attribute shall indicate the total number of received unique MAC Data Poll frames.\n             * This value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.44\n             */\n            rxDataPollCount: OptionalAttribute(0x2b, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxBeaconCount attribute shall indicate the total number of received unique MAC Beacon frames. This\n             * value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.45\n             */\n            rxBeaconCount: OptionalAttribute(0x2c, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxBeaconRequestCount attribute shall indicate the total number of received unique MAC Beacon Request\n             * frames. This value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.46\n             */\n            rxBeaconRequestCount: OptionalAttribute(0x2d, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxOtherCount attribute shall indicate the total number of received unique MAC frame requests that\n             * are not counted by any other attribute. This value shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.47\n             */\n            rxOtherCount: OptionalAttribute(0x2e, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxAddressFilteredCount attribute shall indicate the total number of received unique MAC frame\n             * requests that have been dropped as a result of MAC filtering. This value shall only be reset upon a Node\n             * reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.48\n             */\n            rxAddressFilteredCount: OptionalAttribute(0x2f, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxDestAddrFilteredCount attribute shall indicate the total number of received unique MAC frame\n             * requests that have been dropped as a result of a destination address check. This value shall only be\n             * reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.49\n             */\n            rxDestAddrFilteredCount: OptionalAttribute(0x30, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxDuplicatedCount attribute shall indicate the total number of received MAC frame requests that have\n             * been dropped as a result of being a duplicate of a previously received MAC frame request. This value\n             * shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.50\n             */\n            rxDuplicatedCount: OptionalAttribute(0x31, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxErrNoFrameCount attribute shall indicate the total number of received unique MAC frame requests\n             * that have been dropped as a result of missing or malformed frame contents. This value shall only be\n             * reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.51\n             */\n            rxErrNoFrameCount: OptionalAttribute(0x32, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxErrUnknownNeighborCount attribute shall indicate the total number of received unique MAC frame\n             * requests that have been dropped as a result of originating from an unknown neighbor device. This value\n             * shall only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.52\n             */\n            rxErrUnknownNeighborCount: OptionalAttribute(0x33, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxErrInvalidSrcAddrCount attribute shall indicate the total number of received unique MAC frame\n             * requests that have been dropped as a result of containing an invalid source address. This value shall\n             * only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.53\n             */\n            rxErrInvalidSrcAddrCount: OptionalAttribute(0x34, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxErrSecCount attribute shall indicate the total number of received unique MAC frame requests that\n             * have been dropped as a result of an error with the security of the received frame. This value shall only\n             * be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.54\n             */\n            rxErrSecCount: OptionalAttribute(0x35, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxErrFcsCount attribute shall indicate the total number of received unique MAC frame requests that\n             * have been dropped as a result of an error with the FCS of the received frame. This value shall only be\n             * reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.55\n             */\n            rxErrFcsCount: OptionalAttribute(0x36, TlvUInt32, { omitChanges: true, default: 0 }),\n\n            /**\n             * The RxErrOtherCount attribute shall indicate the total number of received unique MAC frame requests that\n             * have been dropped as a result of an error that is not counted by any other attribute. This value shall\n             * only be reset upon a Node reboot.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.56\n             */\n            rxErrOtherCount: OptionalAttribute(0x37, TlvUInt32, { omitChanges: true, default: 0 })\n        }\n    });\n\n    /**\n     * These elements and properties are present in all ThreadNetworkDiagnostics clusters.\n     */\n    export const Base = MutableCluster.Component({\n        id: 0x35,\n        name: \"ThreadNetworkDiagnostics\",\n        revision: 2,\n\n        features: {\n            /**\n             * PacketCounts\n             *\n             * Server supports the counts for the number of received and transmitted packets on the Thread interface.\n             */\n            packetCounts: BitFlag(0),\n\n            /**\n             * ErrorCounts\n             *\n             * Server supports the counts for the number of errors that have occurred during the reception and\n             * transmission of packets on the Thread interface.\n             */\n            errorCounts: BitFlag(1),\n\n            /**\n             * MleCounts\n             *\n             * Server supports the counts for various MLE layer happenings.\n             */\n            mleCounts: BitFlag(2),\n\n            /**\n             * MacCounts\n             *\n             * Server supports the counts for various MAC layer happenings.\n             */\n            macCounts: BitFlag(3)\n        },\n\n        attributes: {\n            /**\n             * The Channel attribute shall indicate the 802.15.4 channel number configured on the Node\u2019s Thread\n             * interface (that is, the Active Operational Dataset\u2019s current Channel value). A value of null shall\n             * indicate that the Thread interface is not currently configured or operational.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.1\n             */\n            channel: Attribute(0x0, TlvNullable(TlvUInt16)),\n\n            /**\n             * The RoutingRole attribute shall indicate the role that this Node has within the routing of messages\n             * through the Thread network, as defined by RoutingRoleEnum. The potential roles are defined in the\n             * following table. A value of null shall indicate that the Thread interface is not currently configured or\n             * operational.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.2\n             */\n            routingRole: Attribute(0x1, TlvNullable(TlvEnum<RoutingRole>())),\n\n            /**\n             * The NetworkName attribute shall indicate a human-readable (displayable) name for the Thread network that\n             * the Node has been configured to join to. A value of null shall indicate that the Thread interface is not\n             * currently configured or operational.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.3\n             */\n            networkName: Attribute(0x2, TlvNullable(TlvString.bound({ maxLength: 16 }))),\n\n            /**\n             * The PanId attribute shall indicate the 16-bit identifier of the Node on the Thread network. A value of\n             * null shall indicate that the Thread interface is not currently configured or operational.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.4\n             */\n            panId: Attribute(0x3, TlvNullable(TlvUInt16)),\n\n            /**\n             * The ExtendedPanId attribute shall indicate the unique 64-bit identifier of the Node on the Thread\n             * network. A value of null shall indicate that the Thread interface is not currently configured or\n             * operational.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.5\n             */\n            extendedPanId: Attribute(0x4, TlvNullable(TlvUInt64)),\n\n            /**\n             * The MeshLocalPrefix attribute shall indicate the mesh-local IPv6 prefix for the Thread network that the\n             * Node has been configured to join to. A value of null shall indicate that the Thread interface is not\n             * currently configured or operational.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.6\n             */\n            meshLocalPrefix: Attribute(0x5, TlvNullable(TlvByteString)),\n\n            /**\n             * The NeighborTable attribute shall indicate the current list of Nodes that comprise the neighbor table on\n             * the Node.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.8\n             */\n            neighborTable: Attribute(0x7, TlvArray(TlvNeighborTable), { default: [] }),\n\n            /**\n             * The RouteTable attribute shall indicate the current list of router capable Nodes for which routes have\n             * been established.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.9\n             */\n            routeTable: Attribute(0x8, TlvArray(TlvRouteTable), { default: [] }),\n\n            /**\n             * The PartitionId attribute shall indicate the Thread Leader Partition Id for the Thread network to which\n             * the Node is joined. Null if not attached to a Thread network.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.10\n             */\n            partitionId: Attribute(0x9, TlvNullable(TlvUInt32)),\n\n            /**\n             * The Weighting attribute shall indicate the Thread Leader Weight used when operating in the Leader role.\n             * Null if not attached to a Thread network.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.11\n             */\n            weighting: Attribute(0xa, TlvNullable(TlvUInt16.bound({ max: 255 }))),\n\n            /**\n             * The DataVersion attribute shall indicate the full Network Data Version the Node currently uses. Null if\n             * not attached to a Thread network.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.12\n             */\n            dataVersion: Attribute(0xb, TlvNullable(TlvUInt16.bound({ max: 255 }))),\n\n            /**\n             * The StableDataVersion attribute shall indicate the Network Data Version for the stable subset of\n             *\n             * data the Node currently uses. Null if not attached to a Thread network.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.13\n             */\n            stableDataVersion: Attribute(0xc, TlvNullable(TlvUInt16.bound({ max: 255 }))),\n\n            /**\n             * The LeaderRouterId attribute shall indicate the 8-bit LeaderRouterId the Node shall attempt to utilize\n             * upon becoming a router or leader on the Thread network. Null if not attached to a Thread network.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.14\n             */\n            leaderRouterId: Attribute(0xd, TlvNullable(TlvUInt8.bound({ max: 62 }))),\n\n            /**\n             * Null when there is no dataset configured.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.57\n             */\n            activeTimestamp: OptionalAttribute(0x38, TlvNullable(TlvUInt64), { default: 0 }),\n\n            /**\n             * Null when there is no dataset configured.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.58\n             */\n            pendingTimestamp: OptionalAttribute(0x39, TlvNullable(TlvUInt64), { default: 0 }),\n\n            /**\n             * Null when there is no dataset configured.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.59\n             */\n            delay: OptionalAttribute(0x3a, TlvNullable(TlvUInt32), { default: 0 }),\n\n            /**\n             * The SecurityPolicy attribute indicates the current security policies for the Thread partition to which a\n             * Node is connected. Null when there is no dataset configured.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.60\n             */\n            securityPolicy: Attribute(0x3b, TlvNullable(TlvSecurityPolicy)),\n\n            /**\n             * The ChannelPage0Mask attribute indicates the channels within channel page 0, in the 2.4GHz ISM band. The\n             * channels are represented in most significant bit order, with bit value 1 meaning selected, bit value 0\n             * meaning unselected. For example, the most significant bit of the left-most byte indicates channel 0. If\n             * channel 0 and channel 10 are selected, the mask would be: 80 20 00 00. Null when there is no dataset\n             * configured.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.61\n             */\n            channelPage0Mask: Attribute(0x3c, TlvNullable(TlvByteString.bound({ length: 4 }))),\n\n            /**\n             * The OperationalDatasetComponents attribute is a collection of flags to indicate the presence of various\n             * operationally acquired values.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6.62\n             */\n            operationalDatasetComponents: Attribute(0x3d, TlvNullable(TlvOperationalDatasetComponents)),\n\n            /**\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.6\n             */\n            activeNetworkFaultsList: Attribute(\n                0x3e,\n                TlvArray(TlvEnum<NetworkFault>(), { maxLength: 4 }),\n                { default: [] }\n            )\n        },\n\n        events: {\n            /**\n             * The ConnectionStatus Event shall indicate that a Node\u2019s connection status to a Thread network has\n             * changed.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.8.2\n             */\n            connectionStatus: OptionalEvent(0x0, EventPriority.Info, TlvConnectionStatusEvent),\n\n            /**\n             * The NetworkFaultChange Event shall indicate a change in the set of network faults currently detected by\n             * the Node.\n             *\n             * @see {@link MatterSpecification.v13.Core} \u00A7 11.14.8.1\n             */\n            networkFaultChange: OptionalEvent(0x1, EventPriority.Info, TlvNetworkFaultChangeEvent)\n        },\n\n        /**\n         * This metadata controls which ThreadNetworkDiagnosticsCluster elements matter.js activates for specific\n         * feature combinations.\n         */\n        extensions: MutableCluster.Extensions(\n            { flags: { errorCounts: true }, component: ErrorCountsComponent },\n            { flags: { mleCounts: true }, component: MleCountsComponent },\n            { flags: { macCounts: true }, component: MacCountsComponent }\n        )\n    });\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster(Base);\n\n    /**\n     * The Thread Network Diagnostics Cluster provides a means to acquire standardized diagnostics metrics that may be\n     * used by a Node to assist a user or Administrator in diagnosing potential problems. The Thread Network\n     * Diagnostics Cluster attempts to centralize all metrics that are relevant to a potential Thread radio running on\n     * a Node.\n     *\n     * ThreadNetworkDiagnosticsCluster supports optional features that you can enable with the\n     * ThreadNetworkDiagnosticsCluster.with() factory method.\n     *\n     * @see {@link MatterSpecification.v13.Core} \u00A7 11.14\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    const ERRCNT = { errorCounts: true };\n    const MLECNT = { mleCounts: true };\n    const MACCNT = { macCounts: true };\n\n    /**\n     * @see {@link Complete}\n     */\n    export const CompleteInstance = MutableCluster({\n        id: Cluster.id,\n        name: Cluster.name,\n        revision: Cluster.revision,\n        features: Cluster.features,\n\n        attributes: {\n            ...Cluster.attributes,\n            overrunCount: MutableCluster.AsConditional(\n                ErrorCountsComponent.attributes.overrunCount,\n                { mandatoryIf: [ERRCNT] }\n            ),\n            detachedRoleCount: MutableCluster.AsConditional(\n                MleCountsComponent.attributes.detachedRoleCount,\n                { optionalIf: [MLECNT] }\n            ),\n            childRoleCount: MutableCluster.AsConditional(\n                MleCountsComponent.attributes.childRoleCount,\n                { optionalIf: [MLECNT] }\n            ),\n            routerRoleCount: MutableCluster.AsConditional(\n                MleCountsComponent.attributes.routerRoleCount,\n                { optionalIf: [MLECNT] }\n            ),\n            leaderRoleCount: MutableCluster.AsConditional(\n                MleCountsComponent.attributes.leaderRoleCount,\n                { optionalIf: [MLECNT] }\n            ),\n            attachAttemptCount: MutableCluster.AsConditional(\n                MleCountsComponent.attributes.attachAttemptCount,\n                { optionalIf: [MLECNT] }\n            ),\n            partitionIdChangeCount: MutableCluster.AsConditional(\n                MleCountsComponent.attributes.partitionIdChangeCount,\n                { optionalIf: [MLECNT] }\n            ),\n            betterPartitionAttachAttemptCount: MutableCluster.AsConditional(\n                MleCountsComponent.attributes.betterPartitionAttachAttemptCount,\n                { optionalIf: [MLECNT] }\n            ),\n            parentChangeCount: MutableCluster.AsConditional(\n                MleCountsComponent.attributes.parentChangeCount,\n                { optionalIf: [MLECNT] }\n            ),\n            txTotalCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txTotalCount,\n                { optionalIf: [MACCNT] }\n            ),\n            txUnicastCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txUnicastCount,\n                { optionalIf: [MACCNT] }\n            ),\n            txBroadcastCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txBroadcastCount,\n                { optionalIf: [MACCNT] }\n            ),\n            txAckRequestedCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txAckRequestedCount,\n                { optionalIf: [MACCNT] }\n            ),\n            txAckedCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txAckedCount,\n                { optionalIf: [MACCNT] }\n            ),\n            txNoAckRequestedCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txNoAckRequestedCount,\n                { optionalIf: [MACCNT] }\n            ),\n            txDataCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txDataCount,\n                { optionalIf: [MACCNT] }\n            ),\n            txDataPollCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txDataPollCount,\n                { optionalIf: [MACCNT] }\n            ),\n            txBeaconCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txBeaconCount,\n                { optionalIf: [MACCNT] }\n            ),\n            txBeaconRequestCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txBeaconRequestCount,\n                { optionalIf: [MACCNT] }\n            ),\n            txOtherCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txOtherCount,\n                { optionalIf: [MACCNT] }\n            ),\n            txRetryCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txRetryCount,\n                { optionalIf: [MACCNT] }\n            ),\n            txDirectMaxRetryExpiryCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txDirectMaxRetryExpiryCount,\n                { optionalIf: [MACCNT] }\n            ),\n            txIndirectMaxRetryExpiryCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txIndirectMaxRetryExpiryCount,\n                { optionalIf: [MACCNT] }\n            ),\n            txErrCcaCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txErrCcaCount,\n                { optionalIf: [MACCNT] }\n            ),\n            txErrAbortCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txErrAbortCount,\n                { optionalIf: [MACCNT] }\n            ),\n            txErrBusyChannelCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.txErrBusyChannelCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxTotalCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxTotalCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxUnicastCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxUnicastCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxBroadcastCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxBroadcastCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxDataCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxDataCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxDataPollCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxDataPollCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxBeaconCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxBeaconCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxBeaconRequestCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxBeaconRequestCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxOtherCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxOtherCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxAddressFilteredCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxAddressFilteredCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxDestAddrFilteredCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxDestAddrFilteredCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxDuplicatedCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxDuplicatedCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxErrNoFrameCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxErrNoFrameCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxErrUnknownNeighborCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxErrUnknownNeighborCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxErrInvalidSrcAddrCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxErrInvalidSrcAddrCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxErrSecCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxErrSecCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxErrFcsCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxErrFcsCount,\n                { optionalIf: [MACCNT] }\n            ),\n            rxErrOtherCount: MutableCluster.AsConditional(\n                MacCountsComponent.attributes.rxErrOtherCount,\n                { optionalIf: [MACCNT] }\n            )\n        },\n\n        commands: {\n            resetCounts: MutableCluster.AsConditional(\n                ErrorCountsComponent.commands.resetCounts,\n                { mandatoryIf: [ERRCNT] }\n            )\n        },\n\n        events: Cluster.events\n    });\n\n    /**\n     * This cluster supports all ThreadNetworkDiagnostics features. It may support illegal feature combinations.\n     *\n     * If you use this cluster you must manually specify which features are active and ensure the set of active\n     * features is legal per the Matter specification.\n     */\n    export interface Complete extends Identity<typeof CompleteInstance> {}\n\n    export const Complete: Complete = CompleteInstance;\n}\n\nexport type ThreadNetworkDiagnosticsCluster = ThreadNetworkDiagnostics.Cluster;\nexport const ThreadNetworkDiagnosticsCluster = ThreadNetworkDiagnostics.Cluster;\nClusterRegistry.register(ThreadNetworkDiagnostics.Complete);\n"],
  "mappings": "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",
  "names": ["ThreadNetworkDiagnostics", "Feature", "RoutingRole", "NetworkFault", "ConnectionStatus"]
}
