{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/PressureMeasurementCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { Attribute, OptionalAttribute } from \"../Cluster.js\";\nimport { TlvInt16, TlvUInt16, TlvInt8 } from \"../../tlv/TlvNumber.js\";\nimport { TlvNullable } from \"../../tlv/TlvNullable.js\";\nimport { BitFlag } from \"../../schema/BitmapSchema.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace PressureMeasurement {\n    /**\n     * These are optional features supported by PressureMeasurementCluster.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.4.4\n     */\n    export enum Feature {\n        /**\n         * Extended (EXT)\n         *\n         * Extended range and resolution\n         */\n        Extended = \"Extended\"\n    }\n\n    /**\n     * A PressureMeasurementCluster supports these elements if it supports feature Extended.\n     */\n    export const ExtendedComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * Indicates the pressure in Pascals as follows:\n             *\n             * ScaledValue = 10Scale x Pressure [Pa]\n             *\n             * The null value indicates that the value is not available.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.4.5.5\n             */\n            scaledValue: Attribute(0x10, TlvNullable(TlvInt16), { default: 0 }),\n\n            /**\n             * Indicates the minimum value of ScaledValue that can be measured. The null value indicates that the value\n             * is not available.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.4.5.6\n             */\n            minScaledValue: Attribute(0x11, TlvNullable(TlvInt16.bound({ min: -32767 })), { default: 0 }),\n\n            /**\n             * Indicates the maximum value of ScaledValue that can be measured. The null value indicates that the value\n             * is not available.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.4.5.7\n             */\n            maxScaledValue: Attribute(0x12, TlvNullable(TlvInt16), { default: 0 }),\n\n            /**\n             * Indicates the magnitude of the possible error that is associated with Scaled\n             *\n             * Value. The true value is located in the range\n             *\n             * (ScaledValue \u2013 ScaledTolerance) to (ScaledValue + ScaledTolerance).\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.4.5.8\n             */\n            scaledTolerance: OptionalAttribute(0x13, TlvUInt16.bound({ max: 2048 }), { default: 0 }),\n\n            /**\n             * Indicates the base 10 exponent used to obtain ScaledValue (see ScaledValue).\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.4.5.9\n             */\n            scale: Attribute(0x14, TlvInt8.bound({ min: -127 }), { default: 0 })\n        }\n    });\n\n    /**\n     * These elements and properties are present in all PressureMeasurement clusters.\n     */\n    export const Base = MutableCluster.Component({\n        id: 0x403,\n        name: \"PressureMeasurement\",\n        revision: 3,\n\n        features: {\n            /**\n             * Extended\n             *\n             * Extended range and resolution\n             */\n            extended: BitFlag(0)\n        },\n\n        attributes: {\n            /**\n             * Indicates the pressure in kPa as follows:\n             *\n             * MeasuredValue = 10 x Pressure [kPa]\n             *\n             * The null value indicates that the value is not available.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.4.5.1\n             */\n            measuredValue: Attribute(0x0, TlvNullable(TlvInt16)),\n\n            /**\n             * Indicates the minimum value of MeasuredValue that can be measured. See Measured Value for more details.\n             *\n             * The null value indicates that the value is not available.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.4.5.2\n             */\n            minMeasuredValue: Attribute(0x1, TlvNullable(TlvInt16.bound({ min: -32767 }))),\n\n            /**\n             * Indicates the maximum value of MeasuredValue that can be measured. See Measured Value for more details.\n             *\n             * The null value indicates that the value is not available.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.4.5.3\n             */\n            maxMeasuredValue: Attribute(0x2, TlvNullable(TlvInt16)),\n\n            /**\n             * See Measured Value.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.4.5.4\n             */\n            tolerance: OptionalAttribute(0x3, TlvUInt16.bound({ max: 2048 }), { default: 0 })\n        },\n\n        /**\n         * This metadata controls which PressureMeasurementCluster elements matter.js activates for specific feature\n         * combinations.\n         */\n        extensions: MutableCluster.Extensions({ flags: { extended: true }, component: ExtendedComponent })\n    });\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster(Base);\n\n    /**\n     * This cluster provides an interface to pressure measurement functionality, including configuration and provision\n     * of notifications of pressure measurements.\n     *\n     * PressureMeasurementCluster supports optional features that you can enable with the\n     * PressureMeasurementCluster.with() factory method.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 2.4\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    const EXT = { extended: true };\n\n    /**\n     * @see {@link Complete}\n     */\n    export const CompleteInstance = MutableCluster({\n        id: Cluster.id,\n        name: Cluster.name,\n        revision: Cluster.revision,\n        features: Cluster.features,\n\n        attributes: {\n            ...Cluster.attributes,\n            scaledValue: MutableCluster.AsConditional(ExtendedComponent.attributes.scaledValue, { mandatoryIf: [EXT] }),\n            minScaledValue: MutableCluster.AsConditional(\n                ExtendedComponent.attributes.minScaledValue,\n                { mandatoryIf: [EXT] }\n            ),\n            maxScaledValue: MutableCluster.AsConditional(\n                ExtendedComponent.attributes.maxScaledValue,\n                { mandatoryIf: [EXT] }\n            ),\n            scaledTolerance: MutableCluster.AsConditional(\n                ExtendedComponent.attributes.scaledTolerance,\n                { optionalIf: [EXT] }\n            ),\n            scale: MutableCluster.AsConditional(ExtendedComponent.attributes.scale, { mandatoryIf: [EXT] })\n        }\n    });\n\n    /**\n     * This cluster supports all PressureMeasurement features. It may support illegal feature combinations.\n     *\n     * If you use this cluster you must manually specify which features are active and ensure the set of active\n     * features is legal per the Matter specification.\n     */\n    export interface Complete extends Identity<typeof CompleteInstance> {}\n\n    export const Complete: Complete = CompleteInstance;\n}\n\nexport type PressureMeasurementCluster = PressureMeasurement.Cluster;\nexport const PressureMeasurementCluster = PressureMeasurement.Cluster;\nClusterRegistry.register(PressureMeasurement.Complete);\n"],
  "mappings": "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",
  "names": ["PressureMeasurement", "Feature"]
}
