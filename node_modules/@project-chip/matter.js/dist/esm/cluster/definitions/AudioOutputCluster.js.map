{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/AudioOutputCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { Command, TlvNoResponse, AccessLevel, Attribute } from \"../Cluster.js\";\nimport { TlvField, TlvObject } from \"../../tlv/TlvObject.js\";\nimport { TlvUInt8, TlvEnum } from \"../../tlv/TlvNumber.js\";\nimport { TlvString } from \"../../tlv/TlvString.js\";\nimport { TypeFromSchema } from \"../../tlv/TlvSchema.js\";\nimport { BitFlag } from \"../../schema/BitmapSchema.js\";\nimport { TlvArray } from \"../../tlv/TlvArray.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace AudioOutput {\n    /**\n     * These are optional features supported by AudioOutputCluster.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5.4\n     */\n    export enum Feature {\n        /**\n         * NameUpdates (NU)\n         *\n         * Supports updates to output names\n         */\n        NameUpdates = \"NameUpdates\"\n    }\n\n    /**\n     * Input to the AudioOutput renameOutput command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5.7.2\n     */\n    export const TlvRenameOutputRequest = TlvObject({ index: TlvField(0, TlvUInt8), name: TlvField(1, TlvString) });\n\n    /**\n     * Input to the AudioOutput renameOutput command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5.7.2\n     */\n    export interface RenameOutputRequest extends TypeFromSchema<typeof TlvRenameOutputRequest> {}\n\n    /**\n     * The type of output, expressed as an enum, with the following values:\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5.5.1\n     */\n    export enum OutputType {\n        /**\n         * HDMI\n         */\n        Hdmi = 0,\n\n        Bt = 1,\n        Optical = 2,\n        Headphone = 3,\n        Internal = 4,\n        Other = 5\n    }\n\n    /**\n     * This contains information about an output.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5.5.2\n     */\n    export const TlvOutputInfo = TlvObject({\n        /**\n         * This field shall indicate the unique index into the list of outputs.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5.5.2.1\n         */\n        index: TlvField(0, TlvUInt8),\n\n        /**\n         * This field shall indicate the type of output.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5.5.2.2\n         */\n        outputType: TlvField(1, TlvEnum<OutputType>()),\n\n        /**\n         * The device defined and user editable output name, such as \u201CSoundbar\u201D, \u201CSpeakers\u201D. This field may be blank,\n         * but SHOULD be provided when known.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5.5.2.3\n         */\n        name: TlvField(2, TlvString)\n    });\n\n    /**\n     * This contains information about an output.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5.5.2\n     */\n    export interface OutputInfo extends TypeFromSchema<typeof TlvOutputInfo> {}\n\n    /**\n     * Input to the AudioOutput selectOutput command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5.7.1\n     */\n    export const TlvSelectOutputRequest = TlvObject({\n        /**\n         * This shall indicate the index field of the OutputInfoStruct from the OutputList attribute in which to change\n         * to.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5.7.1.1\n         */\n        index: TlvField(0, TlvUInt8)\n    });\n\n    /**\n     * Input to the AudioOutput selectOutput command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5.7.1\n     */\n    export interface SelectOutputRequest extends TypeFromSchema<typeof TlvSelectOutputRequest> {}\n\n    /**\n     * A AudioOutputCluster supports these elements if it supports feature NameUpdates.\n     */\n    export const NameUpdatesComponent = MutableCluster.Component({\n        commands: {\n            /**\n             * Upon receipt, this shall rename the output at a specific index in the Output List.\n             *\n             * Updates to the output name shall appear in the device\u2019s settings menus. Name updates may automatically\n             * be sent to the actual device to which the output connects.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5.7.2\n             */\n            renameOutput: Command(0x1, TlvRenameOutputRequest, 0x1, TlvNoResponse, { invokeAcl: AccessLevel.Manage })\n        }\n    });\n\n    /**\n     * These elements and properties are present in all AudioOutput clusters.\n     */\n    export const Base = MutableCluster.Component({\n        id: 0x50b,\n        name: \"AudioOutput\",\n        revision: 1,\n\n        features: {\n            /**\n             * NameUpdates\n             *\n             * Supports updates to output names\n             */\n            nameUpdates: BitFlag(0)\n        },\n\n        attributes: {\n            /**\n             * This attribute provides the list of outputs supported by the device.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5.6.1\n             */\n            outputList: Attribute(0x0, TlvArray(TlvOutputInfo), { default: [] }),\n\n            /**\n             * This attribute contains the value of the index field of the currently selected OutputInfoStruct.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5.6.2\n             */\n            currentOutput: Attribute(0x1, TlvUInt8)\n        },\n\n        commands: {\n            /**\n             * Upon receipt, this shall change the output on the device to the output at a specific index in the Output\n             * List.\n             *\n             * Note that when the current output is set to an output of type HDMI, adjustments to volume via a Speaker\n             * endpoint on the same node may cause HDMI volume up/down commands to be sent to the given HDMI output.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5.7.1\n             */\n            selectOutput: Command(0x0, TlvSelectOutputRequest, 0x0, TlvNoResponse)\n        },\n\n        /**\n         * This metadata controls which AudioOutputCluster elements matter.js activates for specific feature\n         * combinations.\n         */\n        extensions: MutableCluster.Extensions({ flags: { nameUpdates: true }, component: NameUpdatesComponent })\n    });\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster(Base);\n\n    /**\n     * This cluster provides an interface for controlling the Output on a Video Player device such as a TV.\n     *\n     * This cluster would be supported on a device with audio outputs like a Video Player device (Smart TV, TV Setup\n     * Top Box, Smart Speaker, etc).\n     *\n     * This cluster provides the list of available outputs and provides commands for selecting and renaming them.\n     *\n     * The cluster server for Audio Output is implemented by a device that has configurable audio output.\n     *\n     * AudioOutputCluster supports optional features that you can enable with the AudioOutputCluster.with() factory\n     * method.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 6.5\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    const NU = { nameUpdates: true };\n\n    /**\n     * @see {@link Complete}\n     */\n    export const CompleteInstance = MutableCluster({\n        id: Cluster.id,\n        name: Cluster.name,\n        revision: Cluster.revision,\n        features: Cluster.features,\n        attributes: Cluster.attributes,\n\n        commands: {\n            ...Cluster.commands,\n            renameOutput: MutableCluster.AsConditional(\n                NameUpdatesComponent.commands.renameOutput,\n                { mandatoryIf: [NU] }\n            )\n        }\n    });\n\n    /**\n     * This cluster supports all AudioOutput features. It may support illegal feature combinations.\n     *\n     * If you use this cluster you must manually specify which features are active and ensure the set of active\n     * features is legal per the Matter specification.\n     */\n    export interface Complete extends Identity<typeof CompleteInstance> {}\n\n    export const Complete: Complete = CompleteInstance;\n}\n\nexport type AudioOutputCluster = AudioOutput.Cluster;\nexport const AudioOutputCluster = AudioOutput.Cluster;\nClusterRegistry.register(AudioOutput.Complete);\n"],
  "mappings": "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",
  "names": ["AudioOutput", "Feature", "OutputType"]
}
