{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/OnOffCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { Attribute, WritableAttribute, AccessLevel, Command, TlvNoResponse } from \"../Cluster.js\";\nimport { TlvBoolean } from \"../../tlv/TlvBoolean.js\";\nimport { TlvUInt16, TlvEnum, TlvUInt8, TlvBitmap } from \"../../tlv/TlvNumber.js\";\nimport { TlvNullable } from \"../../tlv/TlvNullable.js\";\nimport { TlvField, TlvObject } from \"../../tlv/TlvObject.js\";\nimport { TypeFromSchema } from \"../../tlv/TlvSchema.js\";\nimport { TlvNoArguments } from \"../../tlv/TlvNoArguments.js\";\nimport { BitFlag } from \"../../schema/BitmapSchema.js\";\nimport { ClusterType } from \"../ClusterType.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace OnOff {\n    /**\n     * These are optional features supported by OnOffCluster.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.4\n     */\n    export enum Feature {\n        /**\n         * Lighting (LT)\n         *\n         * This cluster is used for a lighting application.\n         *\n         * On receipt of a Level Control cluster command that causes the OnOff attribute to be set to FALSE, the OnTime\n         * attribute shall be set to 0.\n         *\n         * On receipt of a Level Control cluster command that causes the OnOff attribute to be set to TRUE, if the\n         * value of the OnTime attribute is equal to 0, the server shall set the OffWaitTime attribute to 0.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.4.1\n         */\n        Lighting = \"Lighting\",\n\n        /**\n         * DeadFrontBehavior (DF)\n         *\n         * When this feature is supported, the device exposing this server cluster exhibits \"dead front\" behavior when\n         * the \"OnOff\" attribute is FALSE (Off). This \"dead front\" behavior includes:\n         *\n         *   \u2022 clusters other than this cluster that are also exposed may respond with failures to Invoke and Write\n         *     interactions. Such failure responses when in a \"dead front\" shall be with an INVALID_IN_STATE status\n         *     code.\n         *\n         *   \u2022 clusters other than this cluster may change the values of their attributes to best-effort values, due to\n         *     the actual values not being defined or available in this state. Device type specifications that require\n         *     support for the DF feature SHOULD define what these best-effort values are.\n         *\n         *   \u2022 Report Transactions shall continue to be generated. Such transactions may include best-effort values as\n         *     noted above.\n         *\n         *   \u2022 Event generation logic for clusters other than this cluster is unchanged (noting possible use of\n         *     best-effort attribute values as in the preceding bullets).\n         *\n         * When this feature is supported and the OnOff attribute changes from TRUE to FALSE (e.g. when receiving an\n         * Off Command, or due to a manual interaction on the device), it shall start executing this \"dead front\"\n         * behavior.\n         *\n         * When this feature is supported and the OnOff attribute changes from FALSE to TRUE (e.g. when receiving an On\n         * Command, or due to a manual interaction on the device), it shall stop executing this \"dead front\" behavior.\n         *\n         * When this feature is supported, and any change of the \"dead front\" state leads to changes in attributes of\n         * other clusters due to the \"dead front\" feature, these attribute changes shall NOT be skipped or omitted from\n         * the usual processing associated with attribute changes. For example, if an\n         *\n         * attribute changes from value 4 to null on \"dead front\" behavior due to an Off command being received, this\n         * change shall be processed for reporting and subscriptions.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.4.2\n         */\n        DeadFrontBehavior = \"DeadFrontBehavior\",\n\n        /**\n         * OffOnly (OFFONLY)\n         *\n         * When this feature is supported, the Off command shall be supported and the On and Toggle commands shall NOT\n         * be supported.\n         *\n         * This feature is useful for devices which can be turned off via the Off command received by an instance of\n         * this cluster but cannot be turned on via commands received by an instance of this cluster due to regulatory\n         * requirements.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.4.3\n         */\n        OffOnly = \"OffOnly\"\n    }\n\n    /**\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.5.2\n     */\n    export enum StartUpOnOff {\n        /**\n         * Set the OnOff attribute to FALSE\n         */\n        Off = 0,\n\n        /**\n         * Set the OnOff attribute to TRUE\n         */\n        On = 1,\n\n        /**\n         * If the previous value of the OnOff attribute is equal to FALSE, set the OnOff attribute to TRUE. If the\n         * previous value of the OnOff attribute is equal to TRUE, set the OnOff attribute to FALSE (toggle).\n         */\n        Toggle = 2\n    }\n\n    /**\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.5.3\n     */\n    export enum EffectIdentifier {\n        /**\n         * Delayed All Off\n         */\n        DelayedAllOff = 0,\n\n        /**\n         * Dying Light\n         */\n        DyingLight = 1\n    }\n\n    /**\n     * Input to the OnOff offWithEffect command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.7.4\n     */\n    export const TlvOffWithEffectRequest = TlvObject({\n        /**\n         * This field specifies the fading effect to use when turning the device off. This field shall contain one of\n         * the non-reserved values listed in EffectIdentifierEnum.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.7.4.1\n         */\n        effectIdentifier: TlvField(0, TlvEnum<EffectIdentifier>()),\n\n        /**\n         * This field is used to indicate which variant of the effect, indicated in the EffectIdentifier field, SHOULD\n         * be triggered. If the server does not support the given variant, it shall use the default variant. This field\n         * is dependent on the value of the EffectIdentifier field and shall contain one of the non-reserved values\n         * listed in either DelayedAllOffEffectVariantEnum or DyingLightEffectVariantEnum.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.7.4.2\n         */\n        effectVariant: TlvField(1, TlvUInt8)\n    });\n\n    /**\n     * Input to the OnOff offWithEffect command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.7.4\n     */\n    export interface OffWithEffectRequest extends TypeFromSchema<typeof TlvOffWithEffectRequest> {}\n\n    /**\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.5.1\n     */\n    export const OnOffControl = {\n        /**\n         * Indicates a command is only accepted when in On state.\n         */\n        acceptOnlyWhenOn: BitFlag(0)\n    };\n\n    /**\n     * Input to the OnOff onWithTimedOff command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.7.6\n     */\n    export const TlvOnWithTimedOffRequest = TlvObject({\n        /**\n         * This field contains information on how the server is to be operated.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.7.6.1\n         */\n        onOffControl: TlvField(0, TlvBitmap(TlvUInt8, OnOffControl)),\n\n        /**\n         * This field is used to adjust the value of the OnTime attribute.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.7.6.2\n         */\n        onTime: TlvField(1, TlvUInt16.bound({ max: 65534 })),\n\n        /**\n         * This field is used to adjust the value of the OffWaitTime attribute.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.7.6.3\n         */\n        offWaitTime: TlvField(2, TlvUInt16.bound({ max: 65534 }))\n    });\n\n    /**\n     * Input to the OnOff onWithTimedOff command\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.7.6\n     */\n    export interface OnWithTimedOffRequest extends TypeFromSchema<typeof TlvOnWithTimedOffRequest> {}\n\n    /**\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.5.4\n     */\n    export enum DelayedAllOffEffectVariant {\n        /**\n         * Fade to off in 0.8 seconds\n         */\n        DelayedOffFastFade = 0,\n\n        /**\n         * No fade\n         */\n        NoFade = 1,\n\n        /**\n         * 50% dim down in 0.8 seconds then fade to off in 12 seconds\n         */\n        DelayedOffSlowFade = 2\n    }\n\n    /**\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.5.5\n     */\n    export enum DyingLightEffectVariant {\n        /**\n         * 20% dim up in 0.5s then fade to off in 1 second\n         */\n        DyingLightFadeOff = 0\n    }\n\n    /**\n     * A OnOffCluster supports these elements if it supports feature Lighting.\n     */\n    export const LightingComponent = MutableCluster.Component({\n        attributes: {\n            /**\n             * In order to support the use case where the user gets back the last setting of a set of devices (e.g.\n             * level settings for lights), a global scene is introduced which is stored when the devices are turned off\n             * and recalled when the devices are turned on. The global scene is defined as the scene that is stored\n             * with group identifier 0 and scene identifier 0.\n             *\n             * This attribute is defined in order to prevent a second Off command storing the all-devices-off situation\n             * as a global scene, and to prevent a second On command destroying the current settings by going back to\n             * the global scene.\n             *\n             * This attribute shall be set to TRUE after the reception of a command which causes the OnOff attribute to\n             * be set to TRUE, such as a standard On command, a MoveToLevel(WithOnOff) command, a RecallScene command\n             * or a OnWithRecallGlobalScene command.\n             *\n             * This attribute is set to FALSE after reception of a OffWithEffect command.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.6.3\n             */\n            globalSceneControl: Attribute(0x4000, TlvBoolean, { default: true }),\n\n            /**\n             * This attribute specifies the length of time (in 1/10ths second) that the On state shall be maintained\n             * before automatically transitioning to the Off state when using the OnWithTimedOff command. This\n             * attribute can be written at any time, but writing a value only has effect when in the Timed On state.\n             * See OnWithTimedOff for more details.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.6.4\n             */\n            onTime: WritableAttribute(0x4001, TlvUInt16, { default: 0 }),\n\n            /**\n             * This attribute specifies the length of time (in 1/10ths second) that the Off state shall be guarded to\n             * prevent another OnWithTimedOff command turning the server back to its On state (e.g., when leaving a\n             * room, the lights are turned off but an occupancy sensor detects the leaving person and attempts to turn\n             * the lights back on). This attribute can be written at any time, but writing a value only has an effect\n             * when in the Timed On state followed by a transition to the Delayed Off state, or in the Delayed Off\n             * state. See OnWithTimedOff for more details.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.6.5\n             */\n            offWaitTime: WritableAttribute(0x4002, TlvUInt16, { default: 0 }),\n\n            /**\n             * This attribute shall define the desired startup behavior of a device when it is supplied with power and\n             * this state shall be reflected in the OnOff attribute. If the value is null, the OnOff attribute is set\n             * to its previous value. Otherwise, the behavior is defined in the table defining StartUpOnOffEnum.\n             *\n             * This behavior does not apply to reboots associated with OTA. After an OTA restart, the OnOff attribute\n             * shall return to its value prior to the restart.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.6.6\n             */\n            startUpOnOff: WritableAttribute(\n                0x4003,\n                TlvNullable(TlvEnum<StartUpOnOff>()),\n                { persistent: true, writeAcl: AccessLevel.Manage }\n            )\n        },\n\n        commands: {\n            /**\n             * The OffWithEffect command allows devices to be turned off using enhanced ways of fading.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.7.4\n             */\n            offWithEffect: Command(0x40, TlvOffWithEffectRequest, 0x40, TlvNoResponse),\n\n            /**\n             * This command allows the recall of the settings when the device was turned off.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.7.5\n             */\n            onWithRecallGlobalScene: Command(0x41, TlvNoArguments, 0x41, TlvNoResponse),\n\n            /**\n             * This command allows devices to be turned on for a specific duration with a guarded off duration so that\n             * SHOULD the device be subsequently turned off, further OnWithTimedOff commands, received during this\n             * time, are prevented from turning the devices back on. Further OnWithTimedOff commands received while the\n             * server is turned on, will update the period that the device is turned on.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.7.6\n             */\n            onWithTimedOff: Command(0x42, TlvOnWithTimedOffRequest, 0x42, TlvNoResponse)\n        }\n    });\n\n    /**\n     * A OnOffCluster supports these elements if doesn't support feature OFFONLY.\n     */\n    export const NotOffOnlyComponent = MutableCluster.Component({\n        commands: {\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.7.2\n             */\n            on: Command(0x1, TlvNoArguments, 0x1, TlvNoResponse),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.7.3\n             */\n            toggle: Command(0x2, TlvNoArguments, 0x2, TlvNoResponse)\n        }\n    });\n\n    /**\n     * These elements and properties are present in all OnOff clusters.\n     */\n    export const Base = MutableCluster.Component({\n        id: 0x6,\n        name: \"OnOff\",\n        revision: 6,\n\n        features: {\n            /**\n             * Lighting\n             *\n             * This cluster is used for a lighting application.\n             *\n             * On receipt of a Level Control cluster command that causes the OnOff attribute to be set to FALSE, the\n             * OnTime attribute shall be set to 0.\n             *\n             * On receipt of a Level Control cluster command that causes the OnOff attribute to be set to TRUE, if the\n             * value of the OnTime attribute is equal to 0, the server shall set the OffWaitTime attribute to 0.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.4.1\n             */\n            lighting: BitFlag(0),\n\n            /**\n             * DeadFrontBehavior\n             *\n             * When this feature is supported, the device exposing this server cluster exhibits \"dead front\" behavior\n             * when the \"OnOff\" attribute is FALSE (Off). This \"dead front\" behavior includes:\n             *\n             *   \u2022 clusters other than this cluster that are also exposed may respond with failures to Invoke and Write\n             *     interactions. Such failure responses when in a \"dead front\" shall be with an INVALID_IN_STATE status\n             *     code.\n             *\n             *   \u2022 clusters other than this cluster may change the values of their attributes to best-effort values,\n             *     due to the actual values not being defined or available in this state. Device type specifications\n             *     that require support for the DF feature SHOULD define what these best-effort values are.\n             *\n             *   \u2022 Report Transactions shall continue to be generated. Such transactions may include best-effort values\n             *     as noted above.\n             *\n             *   \u2022 Event generation logic for clusters other than this cluster is unchanged (noting possible use of\n             *     best-effort attribute values as in the preceding bullets).\n             *\n             * When this feature is supported and the OnOff attribute changes from TRUE to FALSE (e.g. when receiving\n             * an Off Command, or due to a manual interaction on the device), it shall start executing this \"dead\n             * front\" behavior.\n             *\n             * When this feature is supported and the OnOff attribute changes from FALSE to TRUE (e.g. when receiving\n             * an On Command, or due to a manual interaction on the device), it shall stop executing this \"dead front\"\n             * behavior.\n             *\n             * When this feature is supported, and any change of the \"dead front\" state leads to changes in attributes\n             * of other clusters due to the \"dead front\" feature, these attribute changes shall NOT be skipped or\n             * omitted from the usual processing associated with attribute changes. For example, if an\n             *\n             * attribute changes from value 4 to null on \"dead front\" behavior due to an Off command being received,\n             * this change shall be processed for reporting and subscriptions.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.4.2\n             */\n            deadFrontBehavior: BitFlag(1),\n\n            /**\n             * OffOnly\n             *\n             * When this feature is supported, the Off command shall be supported and the On and Toggle commands shall\n             * NOT be supported.\n             *\n             * This feature is useful for devices which can be turned off via the Off command received by an instance\n             * of this cluster but cannot be turned on via commands received by an instance of this cluster due to\n             * regulatory requirements.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.4.3\n             */\n            offOnly: BitFlag(2)\n        },\n\n        attributes: {\n            /**\n             * This attribute indicates whether the device type implemented on the endpoint is turned off or turned on,\n             * in these cases the value of the OnOff attribute equals FALSE, or TRUE respectively.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.6.2\n             */\n            onOff: Attribute(0x0, TlvBoolean, { scene: true, persistent: true, default: false })\n        },\n\n        commands: {\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5.7.1\n             */\n            off: Command(0x0, TlvNoArguments, 0x0, TlvNoResponse)\n        },\n\n        /**\n         * This metadata controls which OnOffCluster elements matter.js activates for specific feature combinations.\n         */\n        extensions: MutableCluster.Extensions(\n            { flags: { lighting: true }, component: LightingComponent },\n            { flags: { offOnly: false }, component: NotOffOnlyComponent },\n            { flags: { lighting: true, offOnly: true }, component: false },\n            { flags: { deadFrontBehavior: true, offOnly: true }, component: false },\n            { flags: { offOnly: true, lighting: false, deadFrontBehavior: true }, component: false }\n        )\n    });\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster({ ...Base, base: ClusterType(Base) }, NotOffOnlyComponent);\n\n    /**\n     * Attributes and commands for turning devices on and off.\n     *\n     * OnOffCluster supports optional features that you can enable with the OnOffCluster.with() factory method.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.5\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    const LT = { lighting: true };\n\n    /**\n     * @see {@link Complete}\n     */\n    export const CompleteInstance = MutableCluster({\n        id: Cluster.id,\n        name: Cluster.name,\n        revision: Cluster.revision,\n        features: Cluster.features,\n\n        attributes: {\n            ...Cluster.attributes,\n            globalSceneControl: MutableCluster.AsConditional(\n                LightingComponent.attributes.globalSceneControl,\n                { mandatoryIf: [LT] }\n            ),\n            onTime: MutableCluster.AsConditional(LightingComponent.attributes.onTime, { mandatoryIf: [LT] }),\n            offWaitTime: MutableCluster.AsConditional(LightingComponent.attributes.offWaitTime, { mandatoryIf: [LT] }),\n            startUpOnOff: MutableCluster.AsConditional(\n                LightingComponent.attributes.startUpOnOff,\n                { mandatoryIf: [LT] }\n            )\n        },\n\n        commands: {\n            ...Cluster.commands,\n            on: MutableCluster.AsConditional(NotOffOnlyComponent.commands.on, { mandatoryIf: [] }),\n            toggle: MutableCluster.AsConditional(NotOffOnlyComponent.commands.toggle, { mandatoryIf: [] }),\n            offWithEffect: MutableCluster.AsConditional(\n                LightingComponent.commands.offWithEffect,\n                { mandatoryIf: [LT] }\n            ),\n            onWithRecallGlobalScene: MutableCluster.AsConditional(\n                LightingComponent.commands.onWithRecallGlobalScene,\n                { mandatoryIf: [LT] }\n            ),\n            onWithTimedOff: MutableCluster.AsConditional(\n                LightingComponent.commands.onWithTimedOff,\n                { mandatoryIf: [LT] }\n            )\n        }\n    });\n\n    /**\n     * This cluster supports all OnOff features. It may support illegal feature combinations.\n     *\n     * If you use this cluster you must manually specify which features are active and ensure the set of active\n     * features is legal per the Matter specification.\n     */\n    export interface Complete extends Identity<typeof CompleteInstance> {}\n\n    export const Complete: Complete = CompleteInstance;\n}\n\nexport type OnOffCluster = OnOff.Cluster;\nexport const OnOffCluster = OnOff.Cluster;\nClusterRegistry.register(OnOff.Complete);\n"],
  "mappings": "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",
  "names": ["OnOff", "Feature", "StartUpOnOff", "EffectIdentifier", "DelayedAllOffEffectVariant", "DyingLightEffectVariant"]
}
