/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { MutableCluster } from "../mutation/MutableCluster.js";
import { BitFlag } from "../../schema/BitmapSchema.js";
import { FixedAttribute, Attribute, WritableAttribute, Command, TlvNoResponse } from "../Cluster.js";
import { TlvArray } from "../../tlv/TlvArray.js";
import { ModeBase } from "./ModeBaseCluster.js";
import { TlvUInt8 } from "../../tlv/TlvNumber.js";
import { ClusterRegistry } from "../ClusterRegistry.js";
var DishwasherMode;
((DishwasherMode2) => {
  let Feature;
  ((Feature2) => {
    Feature2["OnOff"] = "OnOff";
  })(Feature = DishwasherMode2.Feature || (DishwasherMode2.Feature = {}));
  let ModeTag;
  ((ModeTag2) => {
    ModeTag2[ModeTag2["Normal"] = 16384] = "Normal";
    ModeTag2[ModeTag2["Heavy"] = 16385] = "Heavy";
    ModeTag2[ModeTag2["Light"] = 16386] = "Light";
  })(ModeTag = DishwasherMode2.ModeTag || (DishwasherMode2.ModeTag = {}));
  DishwasherMode2.Base = MutableCluster.Component({
    id: 89,
    name: "DishwasherMode",
    revision: 2,
    features: {
      /**
       * OnOff
       *
       * This feature creates a dependency between an OnOff cluster instance and this cluster instance on the
       * same endpoint. See OnMode for more information.
       *
       * @see {@link MatterSpecification.v13.Cluster} § 1.10.4.1
       */
      onOff: BitFlag(0)
    },
    attributes: {
      /**
       * @see {@link MatterSpecification.v13.Cluster} § 8.3.5
       */
      supportedModes: FixedAttribute(
        0,
        TlvArray(ModeBase.TlvModeOption, { minLength: 2, maxLength: 255 }),
        { default: [] }
      ),
      /**
       * @see {@link MatterSpecification.v13.Cluster} § 8.3.5
       */
      currentMode: Attribute(1, TlvUInt8, { scene: true, persistent: true }),
      /**
       * If this attribute is supported, the device SHOULD initially set this to one of the supported modes that
       * has the Normal tag associated with it. See the Mode Base cluster specification for full details about
       * the StartUpMode attribute.
       *
       * @see {@link MatterSpecification.v13.Cluster} § 8.3.5.1
       */
      startUpMode: WritableAttribute(2, TlvUInt8, { persistent: true }),
      /**
       * @see {@link MatterSpecification.v13.Cluster} § 8.3.5
       */
      onMode: WritableAttribute(3, TlvUInt8, { persistent: true })
    },
    commands: {
      /**
       * This command is used to change device modes.
       *
       * On receipt of this command the device shall respond with a ChangeToModeResponse command.
       *
       * @see {@link MatterSpecification.v13.Cluster} § 1.10.7.1
       */
      changeToMode: Command(0, ModeBase.TlvChangeToModeRequest, 0, TlvNoResponse)
    },
    /**
     * This metadata controls which DishwasherModeCluster elements matter.js activates for specific feature
     * combinations.
     */
    extensions: MutableCluster.Extensions()
  });
  DishwasherMode2.ClusterInstance = MutableCluster(DishwasherMode2.Base);
  DishwasherMode2.Cluster = DishwasherMode2.ClusterInstance;
  DishwasherMode2.Complete = DishwasherMode2.Cluster;
})(DishwasherMode || (DishwasherMode = {}));
const DishwasherModeCluster = DishwasherMode.Cluster;
ClusterRegistry.register(DishwasherMode.Complete);
export {
  DishwasherMode,
  DishwasherModeCluster
};
//# sourceMappingURL=DishwasherModeCluster.js.map
