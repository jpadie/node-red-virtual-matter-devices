{
  "version": 3,
  "sources": ["../../../../src/cluster/definitions/RvcCleanModeCluster.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*** THIS FILE IS GENERATED, DO NOT EDIT ***/\n\nimport { MutableCluster } from \"../mutation/MutableCluster.js\";\nimport { BitFlag } from \"../../schema/BitmapSchema.js\";\nimport { FixedAttribute, Attribute, Command, TlvNoResponse } from \"../Cluster.js\";\nimport { TlvArray } from \"../../tlv/TlvArray.js\";\nimport { ModeBase } from \"./ModeBaseCluster.js\";\nimport { TlvUInt8 } from \"../../tlv/TlvNumber.js\";\nimport { Identity } from \"../../util/Type.js\";\nimport { ClusterRegistry } from \"../ClusterRegistry.js\";\n\nexport namespace RvcCleanMode {\n    /**\n     * These are optional features supported by RvcCleanModeCluster.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.10.4\n     */\n    export enum Feature {\n        /**\n         * OnOff (DEPONOFF)\n         *\n         * This feature creates a dependency between an OnOff cluster instance and this cluster instance on the same\n         * endpoint. See OnMode for more information.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.10.4.1\n         */\n        OnOff = \"OnOff\"\n    }\n\n    export enum ModeChangeStatus {\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 7.3.7.1\n         */\n        CleaningInProgress = 64\n    }\n\n    export enum ModeTag {\n        /**\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 7.3.7.2\n         */\n        DeepClean = 16384,\n\n        /**\n         * The device\u2019s vacuuming feature is enabled in this mode.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 7.3.7.2.2\n         */\n        Vacuum = 16385,\n\n        /**\n         * The device\u2019s mopping feature is enabled in this mode.\n         *\n         * @see {@link MatterSpecification.v13.Cluster} \u00A7 7.3.7.2.3\n         */\n        Mop = 16386\n    }\n\n    /**\n     * These elements and properties are present in all RvcCleanMode clusters.\n     */\n    export const Base = MutableCluster.Component({\n        id: 0x55,\n        name: \"RvcCleanMode\",\n        revision: 2,\n\n        features: {\n            /**\n             * OnOff\n             *\n             * This feature creates a dependency between an OnOff cluster instance and this cluster instance on the\n             * same endpoint. See OnMode for more information.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.10.4.1\n             */\n            onOff: BitFlag(0)\n        },\n\n        attributes: {\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 7.3.6\n             */\n            supportedModes: FixedAttribute(\n                0x0,\n                TlvArray(ModeBase.TlvModeOption, { minLength: 2, maxLength: 255 }),\n                { default: [] }\n            ),\n\n            /**\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 7.3.6\n             */\n            currentMode: Attribute(0x1, TlvUInt8, { scene: true, persistent: true })\n        },\n\n        commands: {\n            /**\n             * This command is used to change device modes.\n             *\n             * On receipt of this command the device shall respond with a ChangeToModeResponse command.\n             *\n             * @see {@link MatterSpecification.v13.Cluster} \u00A7 1.10.7.1\n             */\n            changeToMode: Command(0x0, ModeBase.TlvChangeToModeRequest, 0x0, TlvNoResponse)\n        },\n\n        /**\n         * This metadata controls which RvcCleanModeCluster elements matter.js activates for specific feature\n         * combinations.\n         */\n        extensions: MutableCluster.Extensions()\n    });\n\n    /**\n     * @see {@link Cluster}\n     */\n    export const ClusterInstance = MutableCluster(Base);\n\n    /**\n     * This cluster is derived from the Mode Base cluster to define specifics for Robotic Vacuum Cleaner devices. It\n     * also defines a namespace for the cleaning type for these devices.\n     *\n     * RvcCleanModeCluster supports optional features that you can enable with the RvcCleanModeCluster.with() factory\n     * method.\n     *\n     * @see {@link MatterSpecification.v13.Cluster} \u00A7 7.3\n     */\n    export interface Cluster extends Identity<typeof ClusterInstance> {}\n\n    export const Cluster: Cluster = ClusterInstance;\n    export const Complete = Cluster;\n}\n\nexport type RvcCleanModeCluster = RvcCleanMode.Cluster;\nexport const RvcCleanModeCluster = RvcCleanMode.Cluster;\nClusterRegistry.register(RvcCleanMode.Complete);\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,sBAAsB;AAC/B,SAAS,eAAe;AACxB,SAAS,gBAAgB,WAAW,SAAS,qBAAqB;AAClE,SAAS,gBAAgB;AACzB,SAAS,gBAAgB;AACzB,SAAS,gBAAgB;AAEzB,SAAS,uBAAuB;AAEzB,IAAU;AAAA,CAAV,CAAUA,kBAAV;AAMI,MAAK;AAAL,IAAKC,aAAL;AASH,IAAAA,SAAA,WAAQ;AAAA,KATA,UAAAD,cAAA,YAAAA,cAAA;AAYL,MAAK;AAAL,IAAKE,sBAAL;AAIH,IAAAA,oCAAA,wBAAqB,MAArB;AAAA,KAJQ,mBAAAF,cAAA,qBAAAA,cAAA;AAOL,MAAK;AAAL,IAAKG,aAAL;AAIH,IAAAA,kBAAA,eAAY,SAAZ;AAOA,IAAAA,kBAAA,YAAS,SAAT;AAOA,IAAAA,kBAAA,SAAM,SAAN;AAAA,KAlBQ,UAAAH,cAAA,YAAAA,cAAA;AAwBL,EAAMA,cAAA,OAAO,eAAe,UAAU;AAAA,IACzC,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,IAEV,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASN,OAAO,QAAQ,CAAC;AAAA,IACpB;AAAA,IAEA,YAAY;AAAA;AAAA;AAAA;AAAA,MAIR,gBAAgB;AAAA,QACZ;AAAA,QACA,SAAS,SAAS,eAAe,EAAE,WAAW,GAAG,WAAW,IAAI,CAAC;AAAA,QACjE,EAAE,SAAS,CAAC,EAAE;AAAA,MAClB;AAAA;AAAA;AAAA;AAAA,MAKA,aAAa,UAAU,GAAK,UAAU,EAAE,OAAO,MAAM,YAAY,KAAK,CAAC;AAAA,IAC3E;AAAA,IAEA,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQN,cAAc,QAAQ,GAAK,SAAS,wBAAwB,GAAK,aAAa;AAAA,IAClF;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,YAAY,eAAe,WAAW;AAAA,EAC1C,CAAC;AAKM,EAAMA,cAAA,kBAAkB,eAAeA,cAAA,IAAI;AAa3C,EAAMA,cAAA,UAAmBA,cAAA;AACzB,EAAMA,cAAA,WAAWA,cAAA;AAAA,GArHX;AAyHV,MAAM,sBAAsB,aAAa;AAChD,gBAAgB,SAAS,aAAa,QAAQ;",
  "names": ["RvcCleanMode", "Feature", "ModeChangeStatus", "ModeTag"]
}
