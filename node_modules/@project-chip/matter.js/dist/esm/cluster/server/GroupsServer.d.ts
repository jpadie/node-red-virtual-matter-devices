/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { GroupId } from "../../datatype/GroupId.js";
import { Fabric } from "../../fabric/Fabric.js";
import { GroupsCluster } from "../definitions/GroupsCluster.js";
import { ClusterServerHandlers } from "./ClusterServerTypes.js";
export declare class GroupsManager {
    static setGroup(fabric: Fabric, endpointId: number, groupId: GroupId, groupName: string): Promise<void>;
    static getGroupName(fabric: Fabric, endpointId: number, groupId: GroupId): string | undefined;
    static hasGroup(fabric: Fabric, endpointId: number, groupId: GroupId): boolean;
    static getGroups(fabric: Fabric, endpointId: number): Map<GroupId, string>;
    static removeGroup(fabric: Fabric, endpointId: number, groupId: GroupId): Promise<boolean>;
    static removeAllGroups(fabric: Fabric, endpointId: number): Promise<void>;
}
export declare const GroupsClusterHandler: () => ClusterServerHandlers<typeof GroupsCluster>;
export declare const createDefaultGroupsClusterServer: () => import("./ClusterServerTypes.js").ClusterServerObj<import("../definitions/GroupsCluster.js").Groups.Cluster>;
//# sourceMappingURL=GroupsServer.d.ts.map