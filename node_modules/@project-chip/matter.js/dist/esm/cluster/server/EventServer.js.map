{
  "version": 3,
  "sources": ["../../../../src/cluster/server/EventServer.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MatterDevice } from \"../../MatterDevice.js\";\nimport { Message } from \"../../codec/MessageCodec.js\";\nimport { ImplementationError, InternalError } from \"../../common/MatterError.js\";\nimport { ClusterId } from \"../../datatype/ClusterId.js\";\nimport { EventId } from \"../../datatype/EventId.js\";\nimport { FabricIndex } from \"../../datatype/FabricIndex.js\";\nimport { EndpointInterface } from \"../../endpoint/EndpointInterface.js\";\nimport { ClusterModel, EventModel, MatterModel } from \"../../model/index.js\";\nimport { EventData, EventHandler, EventStorageData } from \"../../protocol/interaction/EventHandler.js\";\nimport { TlvEventFilter } from \"../../protocol/interaction/InteractionProtocol.js\";\nimport { BitSchema, TypeFromPartialBitSchema } from \"../../schema/BitmapSchema.js\";\nimport { SecureSession } from \"../../session/SecureSession.js\";\nimport { Session } from \"../../session/Session.js\";\nimport { Storage, StorageOperationResult } from \"../../storage/Storage.js\";\nimport { Time } from \"../../time/Time.js\";\nimport { TlvSchema, TypeFromSchema } from \"../../tlv/TlvSchema.js\";\nimport { MaybePromise } from \"../../util/Promises.js\";\nimport { isObject } from \"../../util/Type.js\";\nimport { AccessLevel, Attributes, Cluster, Commands, Event, EventPriority, Events } from \"../Cluster.js\";\n\nexport type AnyEventServer<T, S extends Storage> = EventServer<T, S> | FabricSensitiveEventServer<T, S>;\n\nexport function createEventServer<\n    T,\n    F extends BitSchema,\n    SF extends TypeFromPartialBitSchema<F>,\n    A extends Attributes,\n    C extends Commands,\n    E extends Events,\n    S extends Storage,\n>(\n    clusterDef: Cluster<F, SF, A, C, E>,\n    eventDef: Event<T, F>,\n    eventName: string,\n    schema: TlvSchema<T>,\n    priority: EventPriority,\n    readAcl: AccessLevel | undefined,\n): EventServer<T, S> {\n    let fabricSensitive = false;\n    const clusterFromModel = MatterModel.standard.get(ClusterModel, clusterDef.id);\n    if (clusterFromModel !== undefined) {\n        const eventModel = clusterFromModel.get(EventModel, eventDef.id);\n        if (eventModel !== undefined) {\n            fabricSensitive = eventModel.fabricSensitive;\n        }\n    }\n    if (fabricSensitive) {\n        return new FabricSensitiveEventServer(eventDef.id, clusterDef.id, eventName, schema, priority, readAcl);\n    }\n    return new EventServer(eventDef.id, clusterDef.id, eventName, schema, priority, readAcl);\n}\n\nexport class EventServer<T, S extends Storage> {\n    private eventList = new Array<EventData<T>>();\n    private readonly listeners = new Array<(event: EventStorageData<T>) => void>();\n    protected endpoint?: EndpointInterface;\n    protected eventHandler?: EventHandler;\n    #readAcl: AccessLevel | undefined;\n    hasFabricSensitiveData = false;\n\n    constructor(\n        readonly id: EventId,\n        readonly clusterId: ClusterId,\n        readonly name: string,\n        readonly schema: TlvSchema<T>,\n        readonly priority: EventPriority,\n        readAcl: AccessLevel | undefined,\n    ) {\n        this.#readAcl = readAcl;\n    }\n\n    get readAcl() {\n        return this.#readAcl ?? AccessLevel.View; // ???\n    }\n\n    assignToEndpoint(endpoint: EndpointInterface) {\n        this.endpoint = endpoint;\n    }\n\n    // TODO Try to get rid of that late binding and simply things again\n    //      potentially with refactoring out MatterDevice and MatterController\n    bindToEventHandler(eventHandler: EventHandler<S>) {\n        this.eventHandler = eventHandler;\n        // Send all stored events to the new listener\n        const promises = new Array<PromiseLike<void>>();\n        for (const event of this.eventList) {\n            const finalEvent = this.eventHandler.pushEvent(event);\n            if (finalEvent !== undefined && MaybePromise.is(finalEvent)) {\n                promises.push(finalEvent.then(e => this.listeners.forEach(listener => listener(e))));\n            } else {\n                this.listeners.forEach(listener => listener(finalEvent));\n            }\n        }\n        this.eventList = [];\n        if (promises.length > 0) {\n            return Promise.all(promises).then(() => Promise.resolve()) as StorageOperationResult<S>;\n        }\n        return undefined as StorageOperationResult<S>;\n    }\n\n    triggerEvent(data: T) {\n        if (this.endpoint === undefined || this.endpoint.number === undefined) {\n            throw new InternalError(\"Endpoint not assigned\");\n        }\n        const event: EventData<T> = {\n            eventId: this.id,\n            clusterId: this.clusterId,\n            endpointId: this.endpoint.number,\n            epochTimestamp: Time.nowMs(),\n            priority: this.priority,\n            data,\n        };\n        if (this.eventHandler === undefined) {\n            // As long as we have no eventManager, we store the events\n            this.eventList.push(event);\n        } else {\n            const finalEvent = this.eventHandler.pushEvent(event);\n            return MaybePromise.then(finalEvent, e => {\n                this.listeners.forEach(listener => listener(e));\n            }) as StorageOperationResult<S>;\n        }\n        return undefined as StorageOperationResult<S>;\n    }\n\n    addListener(listener: (event: EventStorageData<T>) => void) {\n        this.listeners.push(listener);\n    }\n\n    removeListener(listener: (event: EventStorageData<T>) => void) {\n        const entryIndex = this.listeners.indexOf(listener);\n        if (entryIndex !== -1) {\n            this.listeners.splice(entryIndex, 1);\n        }\n    }\n\n    get(\n        session: Session<MatterDevice>,\n        isFabricFiltered: boolean,\n        _message?: Message,\n        filters?: TypeFromSchema<typeof TlvEventFilter>[],\n    ) {\n        if (this.eventHandler === undefined) {\n            throw new InternalError(\"EventServer not bound to EventHandler\");\n        }\n        if (this.endpoint === undefined) {\n            throw new InternalError(\"EventServer not bound to Endpoint\");\n        }\n\n        return this.eventHandler.getEvents(\n            { endpointId: this.endpoint.number, clusterId: this.clusterId, eventId: this.id },\n            filters,\n            // When request is fabric filtered or the event is Fabric sensitive then filter the events for the fabrics\n            isFabricFiltered\n                ? ((session as SecureSession<any>).fabric?.fabricIndex ?? FabricIndex.NO_FABRIC)\n                : undefined,\n        );\n    }\n}\n\nexport class FabricSensitiveEventServer<T, S extends Storage> extends EventServer<T, S> {\n    override hasFabricSensitiveData = true;\n\n    override get(\n        session: Session<MatterDevice>,\n        _isFabricFiltered: boolean,\n        message?: Message,\n        filters?: TypeFromSchema<typeof TlvEventFilter>[],\n    ) {\n        // because the event is fabric sensitive it is always filtered out when another fabric tries to access it\n        return super.get(session, true, message, filters);\n    }\n\n    override triggerEvent(data: T) {\n        if (!isObject(data) || data === null) {\n            throw new ImplementationError(\"FabricSensitive events need to have an object as data.\");\n        }\n        if (!(\"fabricIndex\" in data)) {\n            throw new InternalError(\"FabricSensitive events requires fabricIndex in data.\");\n        }\n        return super.triggerEvent(data);\n    }\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,qBAAqB,qBAAqB;AAGnD,SAAS,mBAAmB;AAE5B,SAAS,cAAc,YAAY,mBAAmB;AAOtD,SAAS,YAAY;AAErB,SAAS,oBAAoB;AAC7B,SAAS,gBAAgB;AACzB,SAAS,mBAAgF;AAIlF,SAAS,kBASZ,YACA,UACA,WACA,QACA,UACA,SACiB;AACjB,MAAI,kBAAkB;AACtB,QAAM,mBAAmB,YAAY,SAAS,IAAI,cAAc,WAAW,EAAE;AAC7E,MAAI,qBAAqB,QAAW;AAChC,UAAM,aAAa,iBAAiB,IAAI,YAAY,SAAS,EAAE;AAC/D,QAAI,eAAe,QAAW;AAC1B,wBAAkB,WAAW;AAAA,IACjC;AAAA,EACJ;AACA,MAAI,iBAAiB;AACjB,WAAO,IAAI,2BAA2B,SAAS,IAAI,WAAW,IAAI,WAAW,QAAQ,UAAU,OAAO;AAAA,EAC1G;AACA,SAAO,IAAI,YAAY,SAAS,IAAI,WAAW,IAAI,WAAW,QAAQ,UAAU,OAAO;AAC3F;AAEO,MAAM,YAAkC;AAAA,EAQ3C,YACa,IACA,WACA,MACA,QACA,UACT,SACF;AANW;AACA;AACA;AACA;AACA;AAGT,SAAK,WAAW;AAAA,EACpB;AAAA,EAhBQ,YAAY,IAAI,MAAoB;AAAA,EAC3B,YAAY,IAAI,MAA4C;AAAA,EACnE;AAAA,EACA;AAAA,EACV;AAAA,EACA,yBAAyB;AAAA,EAazB,IAAI,UAAU;AACV,WAAO,KAAK,YAAY,YAAY;AAAA,EACxC;AAAA,EAEA,iBAAiB,UAA6B;AAC1C,SAAK,WAAW;AAAA,EACpB;AAAA;AAAA;AAAA,EAIA,mBAAmB,cAA+B;AAC9C,SAAK,eAAe;AAEpB,UAAM,WAAW,IAAI,MAAyB;AAC9C,eAAW,SAAS,KAAK,WAAW;AAChC,YAAM,aAAa,KAAK,aAAa,UAAU,KAAK;AACpD,UAAI,eAAe,UAAa,aAAa,GAAG,UAAU,GAAG;AACzD,iBAAS,KAAK,WAAW,KAAK,OAAK,KAAK,UAAU,QAAQ,cAAY,SAAS,CAAC,CAAC,CAAC,CAAC;AAAA,MACvF,OAAO;AACH,aAAK,UAAU,QAAQ,cAAY,SAAS,UAAU,CAAC;AAAA,MAC3D;AAAA,IACJ;AACA,SAAK,YAAY,CAAC;AAClB,QAAI,SAAS,SAAS,GAAG;AACrB,aAAO,QAAQ,IAAI,QAAQ,EAAE,KAAK,MAAM,QAAQ,QAAQ,CAAC;AAAA,IAC7D;AACA,WAAO;AAAA,EACX;AAAA,EAEA,aAAa,MAAS;AAClB,QAAI,KAAK,aAAa,UAAa,KAAK,SAAS,WAAW,QAAW;AACnE,YAAM,IAAI,cAAc,uBAAuB;AAAA,IACnD;AACA,UAAM,QAAsB;AAAA,MACxB,SAAS,KAAK;AAAA,MACd,WAAW,KAAK;AAAA,MAChB,YAAY,KAAK,SAAS;AAAA,MAC1B,gBAAgB,KAAK,MAAM;AAAA,MAC3B,UAAU,KAAK;AAAA,MACf;AAAA,IACJ;AACA,QAAI,KAAK,iBAAiB,QAAW;AAEjC,WAAK,UAAU,KAAK,KAAK;AAAA,IAC7B,OAAO;AACH,YAAM,aAAa,KAAK,aAAa,UAAU,KAAK;AACpD,aAAO,aAAa,KAAK,YAAY,OAAK;AACtC,aAAK,UAAU,QAAQ,cAAY,SAAS,CAAC,CAAC;AAAA,MAClD,CAAC;AAAA,IACL;AACA,WAAO;AAAA,EACX;AAAA,EAEA,YAAY,UAAgD;AACxD,SAAK,UAAU,KAAK,QAAQ;AAAA,EAChC;AAAA,EAEA,eAAe,UAAgD;AAC3D,UAAM,aAAa,KAAK,UAAU,QAAQ,QAAQ;AAClD,QAAI,eAAe,IAAI;AACnB,WAAK,UAAU,OAAO,YAAY,CAAC;AAAA,IACvC;AAAA,EACJ;AAAA,EAEA,IACI,SACA,kBACA,UACA,SACF;AACE,QAAI,KAAK,iBAAiB,QAAW;AACjC,YAAM,IAAI,cAAc,uCAAuC;AAAA,IACnE;AACA,QAAI,KAAK,aAAa,QAAW;AAC7B,YAAM,IAAI,cAAc,mCAAmC;AAAA,IAC/D;AAEA,WAAO,KAAK,aAAa;AAAA,MACrB,EAAE,YAAY,KAAK,SAAS,QAAQ,WAAW,KAAK,WAAW,SAAS,KAAK,GAAG;AAAA,MAChF;AAAA;AAAA,MAEA,mBACQ,QAA+B,QAAQ,eAAe,YAAY,YACpE;AAAA,IACV;AAAA,EACJ;AACJ;AAEO,MAAM,mCAAyD,YAAkB;AAAA,EAC3E,yBAAyB;AAAA,EAEzB,IACL,SACA,mBACA,SACA,SACF;AAEE,WAAO,MAAM,IAAI,SAAS,MAAM,SAAS,OAAO;AAAA,EACpD;AAAA,EAES,aAAa,MAAS;AAC3B,QAAI,CAAC,SAAS,IAAI,KAAK,SAAS,MAAM;AAClC,YAAM,IAAI,oBAAoB,wDAAwD;AAAA,IAC1F;AACA,QAAI,EAAE,iBAAiB,OAAO;AAC1B,YAAM,IAAI,cAAc,sDAAsD;AAAA,IAClF;AACA,WAAO,MAAM,aAAa,IAAI;AAAA,EAClC;AACJ;",
  "names": []
}
