{
  "version": 3,
  "sources": ["../../../src/environment/Environmental.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Diagnostic } from \"../log/Diagnostic.js\";\nimport { Observable } from \"../util/Observable.js\";\nimport type { Environment } from \"./Environment.js\";\n\nexport namespace Environmental {\n    export const create = Symbol(\"create\");\n\n    /**\n     * An \"environmental service\" is an object available via {@link Environment.get}.\n     *\n     * Any object may be an environmental service.  This methods in this interface are optional.\n     */\n    export interface Service {\n        /**\n         * Asynchronous construction, respected by {@link Environment.load}.\n         */\n        construction?: Promise<any>;\n\n        /**\n         * Asynchronous destruction.  Invoked by the environment when it is destroyed.\n         */\n        [Symbol.asyncDispose]?: () => Promise<any>;\n\n        /**\n         * Standard diagnostic presentation.\n         */\n        [Diagnostic.presentation]?: Diagnostic.Presentation;\n\n        /**\n         * Standard diagnostic value.\n         */\n        [Diagnostic.value]?: unknown;\n    }\n\n    /**\n     * A factory for a {@link Service}.  Any constructor may be a service factory.\n     */\n    export interface Factory<T extends Service> {\n        new (...args: any[]): T;\n\n        /**\n         * The environment will create the service automatically if the factory supports {@link create}.\n         */\n        [create]?: (environment: Environment) => T;\n    }\n\n    /**\n     * Events related to service lifecycle.\n     */\n    export interface ServiceEvents<T extends abstract new (...args: any[]) => T> {\n        added: Observable<[instance: InstanceType<T>]>;\n        deleted: Observable<[instance: InstanceType<T>]>;\n    }\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAUO,IAAU;AAAA,CAAV,CAAUA,mBAAV;AACI,EAAMA,eAAA,SAAS,OAAO,QAAQ;AAAA,GADxB;",
  "names": ["Environmental"]
}
