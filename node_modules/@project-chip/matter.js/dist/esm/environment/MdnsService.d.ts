/**
 * @license
 * Copyright 2022-2024 Matter.js Authors
 * SPDX-License-Identifier: Apache-2.0
 */
import { Diagnostic } from "../log/Diagnostic.js";
import { MdnsBroadcaster } from "../mdns/MdnsBroadcaster.js";
import { MdnsScanner } from "../mdns/MdnsScanner.js";
import { Construction } from "../util/Construction.js";
import { Environment } from "./Environment.js";
import { Environmental } from "./Environmental.js";
export declare class MdnsService {
    #private;
    readonly limitedToNetInterface?: string;
    get enableIpv4(): boolean;
    constructor(environment: Environment, options?: MdnsService.Options);
    static [Environmental.create](environment: Environment): MdnsService;
    createInstanceBroadcaster(port: number): import("../mdns/MdnsInstanceBroadcaster.js").MdnsInstanceBroadcaster;
    get broadcaster(): MdnsBroadcaster;
    get scanner(): MdnsScanner;
    get [Diagnostic.value](): string;
    get construction(): Construction<MdnsService>;
    [Symbol.asyncDispose](): Promise<void>;
}
export declare namespace MdnsService {
    interface Options {
        networkInterface?: string;
        ipv4?: boolean;
    }
}
//# sourceMappingURL=MdnsService.d.ts.map