{
  "version": 3,
  "sources": ["../../../src/common/TransportInterface.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ByteArray } from \"../util/ByteArray.js\";\nimport { Channel } from \"./Channel.js\";\n\nexport interface Listener {\n    close(): Promise<void>;\n}\n\n/**\n * A TransportInterface is a generic interface for sending and receiving data on an established incoming connection.\n * It cannot open new connections.\n */\nexport interface TransportInterface {\n    onData(listener: (socket: Channel<ByteArray>, data: ByteArray) => void): Listener;\n    close(): Promise<void>;\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
