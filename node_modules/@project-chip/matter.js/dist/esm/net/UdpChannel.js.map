{
  "version": 3,
  "sources": ["../../../src/net/UdpChannel.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Listener } from \"../common/TransportInterface.js\";\nimport { ByteArray } from \"../util/ByteArray.js\";\n\n/** @see {@link MatterSpecification.v12.Core} \u00A7 4.4.4 */\nexport const MAX_UDP_MESSAGE_SIZE = 1280 - 48; // 48 bytes IP and UDP header size for IPv6\n\nexport interface UdpChannelOptions {\n    listeningPort?: number;\n    type: \"udp4\" | \"udp6\";\n    listeningAddress?: string;\n    netInterface?: string;\n    membershipAddresses?: string[];\n}\n\nexport interface UdpChannel {\n    maxPayloadSize: number;\n    onData(listener: (netInterface: string, peerAddress: string, peerPort: number, data: ByteArray) => void): Listener;\n    send(host: string, port: number, data: ByteArray): Promise<void>;\n    close(): void;\n    get port(): number;\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAUO,MAAM,uBAAuB,OAAO;",
  "names": []
}
