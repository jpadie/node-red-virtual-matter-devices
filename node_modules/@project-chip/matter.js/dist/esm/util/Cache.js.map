{
  "version": 3,
  "sources": ["../../../src/util/Cache.ts"],
  "sourcesContent": ["/**\n * Cache computed values or resources for a specified duration to improve performances.\n *\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Diagnostic } from \"../log/Diagnostic.js\";\nimport { Time, Timer } from \"../time/Time.js\";\n\nclass GenericCache<T> {\n    protected readonly knownKeys = new Set<string>();\n    protected readonly values = new Map<string, T>();\n    protected readonly timestamps = new Map<string, number>();\n    private readonly periodicTimer: Timer;\n\n    constructor(\n        name: string,\n        private readonly expirationMs: number,\n        private readonly expireCallback?: (key: string, value: T) => Promise<void>,\n    ) {\n        this.periodicTimer = Time.getPeriodicTimer(\n            Diagnostic.upgrade(`${name} cache expiration`, [Diagnostic.strong(name), \"cache expiration\"]),\n            expirationMs,\n            () => this.expire(),\n        ).start();\n        this.periodicTimer.utility = true;\n    }\n\n    keys() {\n        return Array.from(this.knownKeys.values());\n    }\n\n    private async deleteEntry(key: string) {\n        const value = this.values.get(key);\n        if (this.expireCallback !== undefined && value !== undefined) {\n            await this.expireCallback(key, value);\n        }\n        this.values.delete(key);\n        this.timestamps.delete(key);\n    }\n\n    async clear() {\n        for (const key of this.values.keys()) {\n            await this.deleteEntry(key);\n        }\n        this.values.clear();\n        this.timestamps.clear();\n    }\n\n    async close() {\n        await this.clear();\n        this.knownKeys.clear();\n        this.periodicTimer.stop();\n    }\n\n    private async expire() {\n        const now = Time.nowMs();\n        for (const [key, timestamp] of this.timestamps.entries()) {\n            if (now - timestamp < this.expirationMs) continue;\n            await this.deleteEntry(key);\n        }\n    }\n}\n\nexport class Cache<T> extends GenericCache<T> {\n    constructor(\n        name: string,\n        private readonly generator: (...params: any[]) => T,\n        expirationMs: number,\n        expireCallback?: (key: string, value: T) => Promise<void>,\n    ) {\n        super(name, expirationMs, expireCallback);\n    }\n\n    get(...params: any[]) {\n        const key = params.join(\",\");\n        let value = this.values.get(key);\n        if (value === undefined) {\n            value = this.generator(...params);\n            this.values.set(key, value);\n            this.knownKeys.add(key);\n        }\n        this.timestamps.set(key, Time.nowMs());\n        return value;\n    }\n}\n\nexport class AsyncCache<T> extends GenericCache<T> {\n    constructor(\n        name: string,\n        private readonly generator: (...params: any[]) => Promise<T>,\n        expirationMs: number,\n        expireCallback?: (key: string, value: T) => Promise<void>,\n    ) {\n        super(name, expirationMs, expireCallback);\n    }\n\n    async get(...params: any[]) {\n        const key = params.join(\",\");\n        let value = this.values.get(key);\n        if (value === undefined) {\n            value = await this.generator(...params);\n            this.values.set(key, value);\n            this.knownKeys.add(key);\n        }\n        this.timestamps.set(key, Time.nowMs());\n        return value;\n    }\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,SAAS,kBAAkB;AAC3B,SAAS,YAAmB;AAE5B,MAAM,aAAgB;AAAA,EAMlB,YACI,MACiB,cACA,gBACnB;AAFmB;AACA;AAEjB,SAAK,gBAAgB,KAAK;AAAA,MACtB,WAAW,QAAQ,GAAG,IAAI,qBAAqB,CAAC,WAAW,OAAO,IAAI,GAAG,kBAAkB,CAAC;AAAA,MAC5F;AAAA,MACA,MAAM,KAAK,OAAO;AAAA,IACtB,EAAE,MAAM;AACR,SAAK,cAAc,UAAU;AAAA,EACjC;AAAA,EAhBmB,YAAY,oBAAI,IAAY;AAAA,EAC5B,SAAS,oBAAI,IAAe;AAAA,EAC5B,aAAa,oBAAI,IAAoB;AAAA,EACvC;AAAA,EAejB,OAAO;AACH,WAAO,MAAM,KAAK,KAAK,UAAU,OAAO,CAAC;AAAA,EAC7C;AAAA,EAEA,MAAc,YAAY,KAAa;AACnC,UAAM,QAAQ,KAAK,OAAO,IAAI,GAAG;AACjC,QAAI,KAAK,mBAAmB,UAAa,UAAU,QAAW;AAC1D,YAAM,KAAK,eAAe,KAAK,KAAK;AAAA,IACxC;AACA,SAAK,OAAO,OAAO,GAAG;AACtB,SAAK,WAAW,OAAO,GAAG;AAAA,EAC9B;AAAA,EAEA,MAAM,QAAQ;AACV,eAAW,OAAO,KAAK,OAAO,KAAK,GAAG;AAClC,YAAM,KAAK,YAAY,GAAG;AAAA,IAC9B;AACA,SAAK,OAAO,MAAM;AAClB,SAAK,WAAW,MAAM;AAAA,EAC1B;AAAA,EAEA,MAAM,QAAQ;AACV,UAAM,KAAK,MAAM;AACjB,SAAK,UAAU,MAAM;AACrB,SAAK,cAAc,KAAK;AAAA,EAC5B;AAAA,EAEA,MAAc,SAAS;AACnB,UAAM,MAAM,KAAK,MAAM;AACvB,eAAW,CAAC,KAAK,SAAS,KAAK,KAAK,WAAW,QAAQ,GAAG;AACtD,UAAI,MAAM,YAAY,KAAK,aAAc;AACzC,YAAM,KAAK,YAAY,GAAG;AAAA,IAC9B;AAAA,EACJ;AACJ;AAEO,MAAM,cAAiB,aAAgB;AAAA,EAC1C,YACI,MACiB,WACjB,cACA,gBACF;AACE,UAAM,MAAM,cAAc,cAAc;AAJvB;AAAA,EAKrB;AAAA,EAEA,OAAO,QAAe;AAClB,UAAM,MAAM,OAAO,KAAK,GAAG;AAC3B,QAAI,QAAQ,KAAK,OAAO,IAAI,GAAG;AAC/B,QAAI,UAAU,QAAW;AACrB,cAAQ,KAAK,UAAU,GAAG,MAAM;AAChC,WAAK,OAAO,IAAI,KAAK,KAAK;AAC1B,WAAK,UAAU,IAAI,GAAG;AAAA,IAC1B;AACA,SAAK,WAAW,IAAI,KAAK,KAAK,MAAM,CAAC;AACrC,WAAO;AAAA,EACX;AACJ;AAEO,MAAM,mBAAsB,aAAgB;AAAA,EAC/C,YACI,MACiB,WACjB,cACA,gBACF;AACE,UAAM,MAAM,cAAc,cAAc;AAJvB;AAAA,EAKrB;AAAA,EAEA,MAAM,OAAO,QAAe;AACxB,UAAM,MAAM,OAAO,KAAK,GAAG;AAC3B,QAAI,QAAQ,KAAK,OAAO,IAAI,GAAG;AAC/B,QAAI,UAAU,QAAW;AACrB,cAAQ,MAAM,KAAK,UAAU,GAAG,MAAM;AACtC,WAAK,OAAO,IAAI,KAAK,KAAK;AAC1B,WAAK,UAAU,IAAI,GAAG;AAAA,IAC1B;AACA,SAAK,WAAW,IAAI,KAAK,KAAK,MAAM,CAAC;AACrC,WAAO;AAAA,EACX;AACJ;",
  "names": []
}
