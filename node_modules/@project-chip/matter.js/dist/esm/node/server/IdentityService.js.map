{
  "version": 3,
  "sources": ["../../../../src/node/server/IdentityService.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OfflineContext } from \"../../behavior/context/server/OfflineContext.js\";\nimport { IndexBehavior } from \"../../behavior/system/index/IndexBehavior.js\";\nimport { ImplementationError } from \"../../common/MatterError.js\";\nimport { Endpoint } from \"../../endpoint/Endpoint.js\";\n\n/**\n * Thrown when there is a endpoint ID or number conflict.\n */\nexport class IdentityConflictError extends ImplementationError {}\n\n/**\n * Provides NodeServer and Endpoint identification.\n */\nexport class IdentityService {\n    #partsById?: Record<string, Endpoint | undefined>;\n    #node: Endpoint;\n\n    constructor(node: Endpoint) {\n        this.#node = node;\n    }\n\n    /**\n     * Textual description of the node.\n     */\n    get nodeDescription() {\n        return this.#node.toString();\n    }\n\n    /**\n     * Ensure that a number is available for assignment to a {@link Endpoint}.\n     */\n    assertNumberAvailable(number: number, endpoint: Endpoint) {\n        let other;\n        if (this.#node.lifecycle.hasNumber && this.#node.number === number) {\n            other = this.#node;\n        } else {\n            if (this.#partsById === undefined) {\n                this.#partsById = OfflineContext.ReadOnly.agentFor(this.#node).get(IndexBehavior).partsById;\n            }\n            other = this.#partsById?.[number];\n        }\n        if (other && other !== endpoint) {\n            let owner;\n            if (other.lifecycle.hasId) {\n                owner = `endpoint ${other.id}`;\n            } else {\n                owner = `another endpoint`;\n            }\n            throw new IdentityConflictError(`Endpoint number ${number} is already assigned to ${owner}`);\n        }\n    }\n}\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,SAAS,sBAAsB;AAC/B,SAAS,qBAAqB;AAC9B,SAAS,2BAA2B;AAM7B,MAAM,8BAA8B,oBAAoB;AAAC;AAKzD,MAAM,gBAAgB;AAAA,EACzB;AAAA,EACA;AAAA,EAEA,YAAY,MAAgB;AACxB,SAAK,QAAQ;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,kBAAkB;AAClB,WAAO,KAAK,MAAM,SAAS;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA,EAKA,sBAAsB,QAAgB,UAAoB;AACtD,QAAI;AACJ,QAAI,KAAK,MAAM,UAAU,aAAa,KAAK,MAAM,WAAW,QAAQ;AAChE,cAAQ,KAAK;AAAA,IACjB,OAAO;AACH,UAAI,KAAK,eAAe,QAAW;AAC/B,aAAK,aAAa,eAAe,SAAS,SAAS,KAAK,KAAK,EAAE,IAAI,aAAa,EAAE;AAAA,MACtF;AACA,cAAQ,KAAK,aAAa,MAAM;AAAA,IACpC;AACA,QAAI,SAAS,UAAU,UAAU;AAC7B,UAAI;AACJ,UAAI,MAAM,UAAU,OAAO;AACvB,gBAAQ,YAAY,MAAM,EAAE;AAAA,MAChC,OAAO;AACH,gBAAQ;AAAA,MACZ;AACA,YAAM,IAAI,sBAAsB,mBAAmB,MAAM,2BAA2B,KAAK,EAAE;AAAA,IAC/F;AAAA,EACJ;AACJ;",
  "names": []
}
