{
  "version": 3,
  "sources": ["../../../../src/node/action/ReadRequestAction.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2022-2024 Matter.js Authors\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DataVersion } from \"../../datatype/DataVersion.js\";\nimport { EventNumber } from \"../../datatype/EventNumber.js\";\nimport { NodeId } from \"../../datatype/NodeId.js\";\nimport { AttributePath } from \"../paths/AttributePath.js\";\nimport { EventPath } from \"../paths/EventPath.js\";\n\nexport namespace ReadRequestAction {\n    /**\n     * Filters known data from attribute reads.\n     *\n     * @see {@link MatterSpecification.v11.Core} \u00A7 8.4.3.2 & 8.9.2.7\n     */\n    export type AttributeVersionFilter = AttributePath.Write & {\n        version: DataVersion;\n    };\n\n    /**\n     * Filters to events newer than a specific event number.\n     *\n     * @see {@link MatterSpecification.v11.Core} \u00A7 8.9.3.1\n     */\n    export type EventSequenceFilter = {\n        node: NodeId;\n        min: EventNumber;\n    };\n}\n\n/**\n * Initiates read of attribute and/or event data.\n *\n * @see {@link MatterSpecification.v11.Core} \u00A7 8.4.2\n */\nexport type ReadRequestAction = {\n    attributes?: AttributePath.Read[];\n    versions?: ReadRequestAction.AttributeVersionFilter[];\n    events?: EventPath.Read[];\n    sequences?: ReadRequestAction.EventSequenceFilter[];\n    fabric?: boolean;\n};\n"],
  "mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
