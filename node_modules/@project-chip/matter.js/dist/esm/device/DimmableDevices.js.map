{
  "version": 3,
  "sources": ["../../../src/device/DimmableDevices.ts"],
  "sourcesContent": ["// additional commands to be allowed for registering and triggering handlers\n\nimport { LevelControl } from \"../cluster/definitions/LevelControlCluster.js\";\nimport { OnOff } from \"../cluster/definitions/OnOffCluster.js\";\nimport { AttributeInitialValues, ClusterServerHandlers } from \"../cluster/server/ClusterServerTypes.js\";\n\nimport { createDefaultLevelControlClusterServer } from \"../cluster/server/LevelControlServer.js\";\nimport { createDefaultOnOffClusterServer } from \"../cluster/server/OnOffServer.js\";\nimport { ClusterId } from \"../datatype/ClusterId.js\";\nimport { extendPublicHandlerMethods } from \"../util/NamedHandler.js\";\nimport { DeviceTypeDefinition, DeviceTypes } from \"./DeviceTypes.js\";\nimport { EndpointOptions } from \"./Endpoint.js\";\nimport { OnOffBaseDevice, getClusterInitialAttributeValues } from \"./OnOffDevices.js\";\n\ntype DimmableDeviceCommands = {\n    moveToLevel: ClusterServerHandlers<typeof LevelControl.Complete>[\"moveToLevel\"];\n    move: ClusterServerHandlers<typeof LevelControl.Complete>[\"move\"];\n    step: ClusterServerHandlers<typeof LevelControl.Complete>[\"step\"];\n    stop: ClusterServerHandlers<typeof LevelControl.Complete>[\"stop\"];\n    moveToLevelWithOnOff: ClusterServerHandlers<typeof LevelControl.Complete>[\"moveToLevelWithOnOff\"];\n    moveWithOnOff: ClusterServerHandlers<typeof LevelControl.Complete>[\"moveWithOnOff\"];\n    stepWithOnOff: ClusterServerHandlers<typeof LevelControl.Complete>[\"stepWithOnOff\"];\n    stopWithOnOff: ClusterServerHandlers<typeof LevelControl.Complete>[\"stopWithOnOff\"];\n};\n\nclass DimmableBaseDevice extends extendPublicHandlerMethods<typeof OnOffBaseDevice, DimmableDeviceCommands>(\n    OnOffBaseDevice,\n) {\n    constructor(\n        definition: DeviceTypeDefinition,\n        attributeInitialValues?: { [key: ClusterId]: AttributeInitialValues<any> },\n        options: EndpointOptions = {},\n        isLighting = false,\n    ) {\n        super(definition, attributeInitialValues, options, isLighting);\n    }\n\n    protected override addDeviceClusters(\n        attributeInitialValues?: { [key: ClusterId]: AttributeInitialValues<any> },\n        excludeList: ClusterId[] = [],\n    ) {\n        super.addDeviceClusters(attributeInitialValues, [...excludeList, OnOff.Cluster.id, LevelControl.Cluster.id]);\n        if (!excludeList.includes(OnOff.Cluster.id)) {\n            this.addClusterServer(\n                createDefaultOnOffClusterServer(\n                    this.commandHandler,\n                    getClusterInitialAttributeValues(\n                        attributeInitialValues,\n                        OnOff.Cluster.with(OnOff.Feature.Lighting),\n                    ),\n                    this.isLighting,\n                ),\n            );\n        }\n        if (!excludeList.includes(LevelControl.Cluster.id)) {\n            this.addClusterServer(\n                createDefaultLevelControlClusterServer(\n                    this.commandHandler,\n                    getClusterInitialAttributeValues(\n                        attributeInitialValues,\n                        LevelControl.Cluster.with(LevelControl.Feature.OnOff, LevelControl.Feature.Lighting),\n                    ),\n                ),\n            );\n        }\n    }\n\n    getCurrentLevel() {\n        return this.getClusterServer(LevelControl.Cluster)?.getCurrentLevelAttribute() ?? 0;\n    }\n\n    setCurrentLevel(level: number | null) {\n        this.getClusterServer(LevelControl.Cluster)?.setCurrentLevelAttribute(level);\n    }\n\n    /**\n     * Adds a listener for the CurrentLevel attribute\n     *\n     * @param listener Listener function to be called when the attribute changes\n     */\n    addCurrentLevelListener(listener: (newValue: number | null, oldValue: number | null) => void) {\n        this.getClusterServer(LevelControl.Cluster)?.subscribeCurrentLevelAttribute(listener);\n    }\n}\n\nexport class DimmablePluginUnitDevice extends DimmableBaseDevice {\n    constructor(\n        onOffAttributeInitialValues?: AttributeInitialValues<typeof OnOff.Cluster.attributes>,\n        dimmableAttributeValues?: AttributeInitialValues<typeof LevelControl.Cluster.attributes>,\n        options: EndpointOptions = {},\n    ) {\n        const initialAttributeValues: { [key: ClusterId]: AttributeInitialValues<any> } = {};\n        if (onOffAttributeInitialValues !== undefined) {\n            initialAttributeValues[OnOff.Cluster.id] = onOffAttributeInitialValues;\n        }\n        if (dimmableAttributeValues !== undefined) {\n            initialAttributeValues[LevelControl.Cluster.id] = dimmableAttributeValues;\n        }\n        super(DeviceTypes.DIMMABLE_PLUGIN_UNIT, initialAttributeValues, options, false);\n    }\n}\n\nexport class DimmableLightDevice extends DimmableBaseDevice {\n    constructor(\n        onOffAttributeInitialValues?: AttributeInitialValues<typeof OnOff.Cluster.attributes>,\n        dimmableAttributeValues?: AttributeInitialValues<typeof LevelControl.Cluster.attributes>,\n        options: EndpointOptions = {},\n    ) {\n        const initialAttributeValues: { [key: ClusterId]: AttributeInitialValues<any> } = {};\n        if (onOffAttributeInitialValues !== undefined) {\n            initialAttributeValues[OnOff.Cluster.id] = onOffAttributeInitialValues;\n        }\n        if (dimmableAttributeValues !== undefined) {\n            initialAttributeValues[LevelControl.Cluster.id] = dimmableAttributeValues;\n        }\n        super(DeviceTypes.DIMMABLE_LIGHT, initialAttributeValues, options, true);\n    }\n}\n"],
  "mappings": "AAEA,SAAS,oBAAoB;AAC7B,SAAS,aAAa;AAGtB,SAAS,8CAA8C;AACvD,SAAS,uCAAuC;AAEhD,SAAS,kCAAkC;AAC3C,SAA+B,mBAAmB;AAElD,SAAS,iBAAiB,wCAAwC;AAalE,MAAM,2BAA2B;AAAA,EAC7B;AACJ,EAAE;AAAA,EACE,YACI,YACA,wBACA,UAA2B,CAAC,GAC5B,aAAa,OACf;AACE,UAAM,YAAY,wBAAwB,SAAS,UAAU;AAAA,EACjE;AAAA,EAEmB,kBACf,wBACA,cAA2B,CAAC,GAC9B;AACE,UAAM,kBAAkB,wBAAwB,CAAC,GAAG,aAAa,MAAM,QAAQ,IAAI,aAAa,QAAQ,EAAE,CAAC;AAC3G,QAAI,CAAC,YAAY,SAAS,MAAM,QAAQ,EAAE,GAAG;AACzC,WAAK;AAAA,QACD;AAAA,UACI,KAAK;AAAA,UACL;AAAA,YACI;AAAA,YACA,MAAM,QAAQ,KAAK,MAAM,QAAQ,QAAQ;AAAA,UAC7C;AAAA,UACA,KAAK;AAAA,QACT;AAAA,MACJ;AAAA,IACJ;AACA,QAAI,CAAC,YAAY,SAAS,aAAa,QAAQ,EAAE,GAAG;AAChD,WAAK;AAAA,QACD;AAAA,UACI,KAAK;AAAA,UACL;AAAA,YACI;AAAA,YACA,aAAa,QAAQ,KAAK,aAAa,QAAQ,OAAO,aAAa,QAAQ,QAAQ;AAAA,UACvF;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,kBAAkB;AACd,WAAO,KAAK,iBAAiB,aAAa,OAAO,GAAG,yBAAyB,KAAK;AAAA,EACtF;AAAA,EAEA,gBAAgB,OAAsB;AAClC,SAAK,iBAAiB,aAAa,OAAO,GAAG,yBAAyB,KAAK;AAAA,EAC/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,wBAAwB,UAAsE;AAC1F,SAAK,iBAAiB,aAAa,OAAO,GAAG,+BAA+B,QAAQ;AAAA,EACxF;AACJ;AAEO,MAAM,iCAAiC,mBAAmB;AAAA,EAC7D,YACI,6BACA,yBACA,UAA2B,CAAC,GAC9B;AACE,UAAM,yBAA4E,CAAC;AACnF,QAAI,gCAAgC,QAAW;AAC3C,6BAAuB,MAAM,QAAQ,EAAE,IAAI;AAAA,IAC/C;AACA,QAAI,4BAA4B,QAAW;AACvC,6BAAuB,aAAa,QAAQ,EAAE,IAAI;AAAA,IACtD;AACA,UAAM,YAAY,sBAAsB,wBAAwB,SAAS,KAAK;AAAA,EAClF;AACJ;AAEO,MAAM,4BAA4B,mBAAmB;AAAA,EACxD,YACI,6BACA,yBACA,UAA2B,CAAC,GAC9B;AACE,UAAM,yBAA4E,CAAC;AACnF,QAAI,gCAAgC,QAAW;AAC3C,6BAAuB,MAAM,QAAQ,EAAE,IAAI;AAAA,IAC/C;AACA,QAAI,4BAA4B,QAAW;AACvC,6BAAuB,aAAa,QAAQ,EAAE,IAAI;AAAA,IACtD;AACA,UAAM,YAAY,gBAAgB,wBAAwB,SAAS,IAAI;AAAA,EAC3E;AACJ;",
  "names": []
}
